/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                          \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void ORAerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}




#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


#line 212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc_ora.hh".  */
#ifndef YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
# define YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int ORAdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ADD = 260,
    ALL = 261,
    ALTER = 262,
    ANALYZE_SYM = 263,
    AND_AND_SYM = 264,
    AND_SYM = 265,
    AS = 266,
    ASC = 267,
    ASENSITIVE_SYM = 268,
    BEFORE_SYM = 269,
    BETWEEN_SYM = 270,
    BIGINT = 271,
    BINARY = 272,
    BIN_NUM = 273,
    BIT_AND = 274,
    BIT_OR = 275,
    BIT_XOR = 276,
    BLOB_MARIADB_SYM = 277,
    BLOB_ORACLE_SYM = 278,
    BODY_ORACLE_SYM = 279,
    BOTH = 280,
    BY = 281,
    CALL_SYM = 282,
    CASCADE = 283,
    CASE_SYM = 284,
    CAST_SYM = 285,
    CHANGE = 286,
    CHAR_SYM = 287,
    CHECK_SYM = 288,
    COLLATE_SYM = 289,
    CONDITION_SYM = 290,
    CONSTRAINT = 291,
    CONTINUE_MARIADB_SYM = 292,
    CONTINUE_ORACLE_SYM = 293,
    CONVERT_SYM = 294,
    COUNT_SYM = 295,
    CREATE = 296,
    CROSS = 297,
    CUME_DIST_SYM = 298,
    CURDATE = 299,
    CURRENT_USER = 300,
    CURRENT_ROLE = 301,
    CURSOR_SYM = 302,
    CURTIME = 303,
    DATABASE = 304,
    DATABASES = 305,
    DATE_ADD_INTERVAL = 306,
    DATE_SUB_INTERVAL = 307,
    DAY_HOUR_SYM = 308,
    DAY_MICROSECOND_SYM = 309,
    DAY_MINUTE_SYM = 310,
    DAY_SECOND_SYM = 311,
    DECIMAL_NUM = 312,
    DECIMAL_SYM = 313,
    DECLARE_MARIADB_SYM = 314,
    DECLARE_ORACLE_SYM = 315,
    DEFAULT = 316,
    DELETE_DOMAIN_ID_SYM = 317,
    DELETE_SYM = 318,
    DENSE_RANK_SYM = 319,
    DESC = 320,
    DESCRIBE = 321,
    DETERMINISTIC_SYM = 322,
    DISTINCT = 323,
    DIV_SYM = 324,
    DOUBLE_SYM = 325,
    DO_DOMAIN_IDS_SYM = 326,
    DOT_DOT_SYM = 327,
    DROP = 328,
    DUAL_SYM = 329,
    EACH_SYM = 330,
    ELSE = 331,
    ELSEIF_MARIADB_SYM = 332,
    ELSIF_ORACLE_SYM = 333,
    ENCLOSED = 334,
    END_OF_INPUT = 335,
    EQUAL_SYM = 336,
    ESCAPED = 337,
    EXCEPT_SYM = 338,
    EXISTS = 339,
    EXTRACT_SYM = 340,
    FALSE_SYM = 341,
    FETCH_SYM = 342,
    FIRST_VALUE_SYM = 343,
    FLOAT_NUM = 344,
    FLOAT_SYM = 345,
    FOREIGN = 346,
    FOR_SYM = 347,
    FOR_SYSTEM_TIME_SYM = 348,
    FROM = 349,
    FULLTEXT_SYM = 350,
    GE = 351,
    GOTO_ORACLE_SYM = 352,
    GRANT = 353,
    GROUP_SYM = 354,
    GROUP_CONCAT_SYM = 355,
    LAG_SYM = 356,
    LEAD_SYM = 357,
    HAVING = 358,
    HEX_NUM = 359,
    HEX_STRING = 360,
    HOUR_MICROSECOND_SYM = 361,
    HOUR_MINUTE_SYM = 362,
    HOUR_SECOND_SYM = 363,
    IDENT = 364,
    IDENT_QUOTED = 365,
    IF_SYM = 366,
    IGNORE_DOMAIN_IDS_SYM = 367,
    IGNORE_SYM = 368,
    INDEX_SYM = 369,
    INFILE = 370,
    INNER_SYM = 371,
    INOUT_SYM = 372,
    INSENSITIVE_SYM = 373,
    INSERT = 374,
    INTERSECT_SYM = 375,
    INTERVAL_SYM = 376,
    INTO = 377,
    INT_SYM = 378,
    IN_SYM = 379,
    IS = 380,
    ITERATE_SYM = 381,
    JOIN_SYM = 382,
    KEYS = 383,
    KEY_SYM = 384,
    KILL_SYM = 385,
    LE = 386,
    LEADING = 387,
    LEAVE_SYM = 388,
    LEFT = 389,
    LEX_HOSTNAME = 390,
    LIKE = 391,
    LIMIT = 392,
    LINEAR_SYM = 393,
    LINES = 394,
    LOAD = 395,
    LOCATOR_SYM = 396,
    LOCK_SYM = 397,
    LONGBLOB = 398,
    LONGTEXT = 399,
    LONG_NUM = 400,
    LONG_SYM = 401,
    LOOP_SYM = 402,
    LOW_PRIORITY = 403,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 404,
    MATCH = 405,
    MAX_SYM = 406,
    MAXVALUE_SYM = 407,
    MEDIAN_SYM = 408,
    MEDIUMBLOB = 409,
    MEDIUMINT = 410,
    MEDIUMTEXT = 411,
    MINUTE_MICROSECOND_SYM = 412,
    MINUTE_SECOND_SYM = 413,
    MIN_SYM = 414,
    MODIFIES_SYM = 415,
    MOD_SYM = 416,
    MYSQL_CONCAT_SYM = 417,
    NATURAL = 418,
    NCHAR_STRING = 419,
    NE = 420,
    NEG = 421,
    NOT2_SYM = 422,
    NOT_SYM = 423,
    NOW_SYM = 424,
    NO_WRITE_TO_BINLOG = 425,
    NTILE_SYM = 426,
    NULL_SYM = 427,
    NUM = 428,
    NUMERIC_SYM = 429,
    NTH_VALUE_SYM = 430,
    ON = 431,
    OPTIMIZE = 432,
    OPTIONALLY = 433,
    ORACLE_CONCAT_SYM = 434,
    OR2_SYM = 435,
    ORDER_SYM = 436,
    OR_SYM = 437,
    OTHERS_ORACLE_SYM = 438,
    OUTER = 439,
    OUTFILE = 440,
    OUT_SYM = 441,
    OVER_SYM = 442,
    PACKAGE_ORACLE_SYM = 443,
    PAGE_CHECKSUM_SYM = 444,
    PARAM_MARKER = 445,
    PARSE_VCOL_EXPR_SYM = 446,
    PARTITION_SYM = 447,
    PERCENT_ORACLE_SYM = 448,
    PERCENT_RANK_SYM = 449,
    PERCENTILE_CONT_SYM = 450,
    PERCENTILE_DISC_SYM = 451,
    POSITION_SYM = 452,
    PRECISION = 453,
    PRIMARY_SYM = 454,
    PROCEDURE_SYM = 455,
    PURGE = 456,
    RAISE_ORACLE_SYM = 457,
    RANGE_SYM = 458,
    RANK_SYM = 459,
    READS_SYM = 460,
    READ_SYM = 461,
    READ_WRITE_SYM = 462,
    REAL = 463,
    RECURSIVE_SYM = 464,
    REF_SYSTEM_ID_SYM = 465,
    REFERENCES = 466,
    REGEXP = 467,
    RELEASE_SYM = 468,
    RENAME = 469,
    REPEAT_SYM = 470,
    REPLACE = 471,
    REQUIRE_SYM = 472,
    RESIGNAL_SYM = 473,
    RESTRICT = 474,
    RETURNING_SYM = 475,
    RETURN_MARIADB_SYM = 476,
    RETURN_ORACLE_SYM = 477,
    REVOKE = 478,
    RIGHT = 479,
    ROWS_SYM = 480,
    ROWTYPE_ORACLE_SYM = 481,
    ROW_NUMBER_SYM = 482,
    SECOND_MICROSECOND_SYM = 483,
    SELECT_SYM = 484,
    SENSITIVE_SYM = 485,
    SEPARATOR_SYM = 486,
    SERVER_OPTIONS = 487,
    SET = 488,
    SET_VAR = 489,
    SHIFT_LEFT = 490,
    SHIFT_RIGHT = 491,
    SHOW = 492,
    SIGNAL_SYM = 493,
    SMALLINT = 494,
    SPATIAL_SYM = 495,
    SPECIFIC_SYM = 496,
    SQLEXCEPTION_SYM = 497,
    SQLSTATE_SYM = 498,
    SQLWARNING_SYM = 499,
    SQL_BIG_RESULT = 500,
    SQL_SMALL_RESULT = 501,
    SQL_SYM = 502,
    SSL_SYM = 503,
    STARTING = 504,
    STATS_AUTO_RECALC_SYM = 505,
    STATS_PERSISTENT_SYM = 506,
    STATS_SAMPLE_PAGES_SYM = 507,
    STDDEV_SAMP_SYM = 508,
    STD_SYM = 509,
    STRAIGHT_JOIN = 510,
    SUBSTRING = 511,
    SUM_SYM = 512,
    SYSDATE = 513,
    TABLE_REF_PRIORITY = 514,
    TABLE_SYM = 515,
    TERMINATED = 516,
    TEXT_STRING = 517,
    THEN_SYM = 518,
    TINYBLOB = 519,
    TINYINT = 520,
    TINYTEXT = 521,
    TO_SYM = 522,
    TRAILING = 523,
    TRIGGER_SYM = 524,
    TRIM = 525,
    TRUE_SYM = 526,
    ULONGLONG_NUM = 527,
    UNDERSCORE_CHARSET = 528,
    UNDO_SYM = 529,
    UNION_SYM = 530,
    UNIQUE_SYM = 531,
    UNLOCK_SYM = 532,
    UNSIGNED = 533,
    UPDATE_SYM = 534,
    USAGE = 535,
    USE_SYM = 536,
    USING = 537,
    UTC_DATE_SYM = 538,
    UTC_TIMESTAMP_SYM = 539,
    UTC_TIME_SYM = 540,
    VALUES = 541,
    VALUES_IN_SYM = 542,
    VALUES_LESS_SYM = 543,
    VARBINARY = 544,
    VARCHAR = 545,
    VARIANCE_SYM = 546,
    VARYING = 547,
    VAR_SAMP_SYM = 548,
    WHEN_SYM = 549,
    WHERE = 550,
    WHILE_SYM = 551,
    WITH = 552,
    WITH_CUBE_SYM = 553,
    WITH_ROLLUP_SYM = 554,
    WITH_SYSTEM_SYM = 555,
    XOR = 556,
    YEAR_MONTH_SYM = 557,
    ZEROFILL = 558,
    IMPOSSIBLE_ACTION = 559,
    BODY_MARIADB_SYM = 560,
    ELSEIF_ORACLE_SYM = 561,
    ELSIF_MARIADB_SYM = 562,
    EXCEPTION_ORACLE_SYM = 563,
    GOTO_MARIADB_SYM = 564,
    OTHERS_MARIADB_SYM = 565,
    PACKAGE_MARIADB_SYM = 566,
    RAISE_MARIADB_SYM = 567,
    ROWTYPE_MARIADB_SYM = 568,
    ACTION = 569,
    ADMIN_SYM = 570,
    ADDDATE_SYM = 571,
    AFTER_SYM = 572,
    AGAINST = 573,
    AGGREGATE_SYM = 574,
    ALGORITHM_SYM = 575,
    ALWAYS_SYM = 576,
    ANY_SYM = 577,
    ASCII_SYM = 578,
    AT_SYM = 579,
    ATOMIC_SYM = 580,
    AUTHORS_SYM = 581,
    AUTOEXTEND_SIZE_SYM = 582,
    AUTO_INC = 583,
    AUTO_SYM = 584,
    AVG_ROW_LENGTH = 585,
    AVG_SYM = 586,
    BACKUP_SYM = 587,
    BEGIN_MARIADB_SYM = 588,
    BEGIN_ORACLE_SYM = 589,
    BINLOG_SYM = 590,
    BIT_SYM = 591,
    BLOCK_SYM = 592,
    BOOL_SYM = 593,
    BOOLEAN_SYM = 594,
    BTREE_SYM = 595,
    BYTE_SYM = 596,
    CACHE_SYM = 597,
    CASCADED = 598,
    CATALOG_NAME_SYM = 599,
    CHAIN_SYM = 600,
    CHANGED = 601,
    CHARSET = 602,
    CHECKPOINT_SYM = 603,
    CHECKSUM_SYM = 604,
    CIPHER_SYM = 605,
    CLASS_ORIGIN_SYM = 606,
    CLIENT_SYM = 607,
    CLOB_MARIADB_SYM = 608,
    CLOB_ORACLE_SYM = 609,
    CLOSE_SYM = 610,
    COALESCE = 611,
    CODE_SYM = 612,
    COLLATION_SYM = 613,
    COLON_ORACLE_SYM = 614,
    COLUMNS = 615,
    COLUMN_ADD_SYM = 616,
    COLUMN_CHECK_SYM = 617,
    COLUMN_CREATE_SYM = 618,
    COLUMN_DELETE_SYM = 619,
    COLUMN_GET_SYM = 620,
    COLUMN_SYM = 621,
    COLUMN_NAME_SYM = 622,
    COMMENT_SYM = 623,
    COMMITTED_SYM = 624,
    COMMIT_SYM = 625,
    COMPACT_SYM = 626,
    COMPLETION_SYM = 627,
    COMPRESSED_SYM = 628,
    CONCURRENT = 629,
    CONNECTION_SYM = 630,
    CONSISTENT_SYM = 631,
    CONSTRAINT_CATALOG_SYM = 632,
    CONSTRAINT_NAME_SYM = 633,
    CONSTRAINT_SCHEMA_SYM = 634,
    CONTAINS_SYM = 635,
    CONTEXT_SYM = 636,
    CONTRIBUTORS_SYM = 637,
    CPU_SYM = 638,
    CUBE_SYM = 639,
    CURRENT_SYM = 640,
    CURRENT_POS_SYM = 641,
    CURSOR_NAME_SYM = 642,
    CYCLE_SYM = 643,
    DATAFILE_SYM = 644,
    DATA_SYM = 645,
    DATETIME = 646,
    DATE_FORMAT_SYM = 647,
    DATE_SYM = 648,
    DAY_SYM = 649,
    DEALLOCATE_SYM = 650,
    DECODE_MARIADB_SYM = 651,
    DECODE_ORACLE_SYM = 652,
    DEFINER_SYM = 653,
    DELAYED_SYM = 654,
    DELAY_KEY_WRITE_SYM = 655,
    DES_KEY_FILE = 656,
    DIAGNOSTICS_SYM = 657,
    DIRECTORY_SYM = 658,
    DISABLE_SYM = 659,
    DISCARD = 660,
    DISK_SYM = 661,
    DO_SYM = 662,
    DUMPFILE = 663,
    DUPLICATE_SYM = 664,
    DYNAMIC_SYM = 665,
    ENABLE_SYM = 666,
    END = 667,
    ENDS_SYM = 668,
    ENGINES_SYM = 669,
    ENGINE_SYM = 670,
    ENUM = 671,
    ERROR_SYM = 672,
    ERRORS = 673,
    ESCAPE_SYM = 674,
    EVENTS_SYM = 675,
    EVENT_SYM = 676,
    EVERY_SYM = 677,
    EXCHANGE_SYM = 678,
    EXAMINED_SYM = 679,
    EXCLUDE_SYM = 680,
    EXECUTE_SYM = 681,
    EXCEPTION_MARIADB_SYM = 682,
    EXIT_MARIADB_SYM = 683,
    EXIT_ORACLE_SYM = 684,
    EXPANSION_SYM = 685,
    EXPORT_SYM = 686,
    EXTENDED_SYM = 687,
    EXTENT_SIZE_SYM = 688,
    FAST_SYM = 689,
    FAULTS_SYM = 690,
    FILE_SYM = 691,
    FIRST_SYM = 692,
    FIXED_SYM = 693,
    FLUSH_SYM = 694,
    FOLLOWS_SYM = 695,
    FOLLOWING_SYM = 696,
    FORCE_SYM = 697,
    FORMAT_SYM = 698,
    FOUND_SYM = 699,
    FULL = 700,
    FUNCTION_SYM = 701,
    GENERAL = 702,
    GENERATED_SYM = 703,
    GEOMETRYCOLLECTION = 704,
    GEOMETRY_SYM = 705,
    GET_FORMAT = 706,
    GET_SYM = 707,
    GLOBAL_SYM = 708,
    GRANTS = 709,
    HANDLER_SYM = 710,
    HARD_SYM = 711,
    HASH_SYM = 712,
    HELP_SYM = 713,
    HIGH_PRIORITY = 714,
    HISTORY_SYM = 715,
    HOST_SYM = 716,
    HOSTS_SYM = 717,
    HOUR_SYM = 718,
    ID_SYM = 719,
    IDENTIFIED_SYM = 720,
    IGNORE_SERVER_IDS_SYM = 721,
    IMMEDIATE_SYM = 722,
    IMPORT = 723,
    INCREMENT_SYM = 724,
    INDEXES = 725,
    INITIAL_SIZE_SYM = 726,
    INSERT_METHOD = 727,
    INSTALL_SYM = 728,
    INVOKER_SYM = 729,
    IO_SYM = 730,
    IPC_SYM = 731,
    ISOLATION = 732,
    ISOPEN_SYM = 733,
    ISSUER_SYM = 734,
    INVISIBLE_SYM = 735,
    JSON_SYM = 736,
    KEY_BLOCK_SIZE = 737,
    LANGUAGE_SYM = 738,
    LAST_SYM = 739,
    LAST_VALUE = 740,
    LASTVAL_SYM = 741,
    LEAVES = 742,
    LESS_SYM = 743,
    LEVEL_SYM = 744,
    LINESTRING = 745,
    LIST_SYM = 746,
    LOCAL_SYM = 747,
    LOCKS_SYM = 748,
    LOGFILE_SYM = 749,
    LOGS_SYM = 750,
    MASTER_CONNECT_RETRY_SYM = 751,
    MASTER_DELAY_SYM = 752,
    MASTER_GTID_POS_SYM = 753,
    MASTER_HOST_SYM = 754,
    MASTER_LOG_FILE_SYM = 755,
    MASTER_LOG_POS_SYM = 756,
    MASTER_PASSWORD_SYM = 757,
    MASTER_PORT_SYM = 758,
    MASTER_SERVER_ID_SYM = 759,
    MASTER_SSL_CAPATH_SYM = 760,
    MASTER_SSL_CA_SYM = 761,
    MASTER_SSL_CERT_SYM = 762,
    MASTER_SSL_CIPHER_SYM = 763,
    MASTER_SSL_CRL_SYM = 764,
    MASTER_SSL_CRLPATH_SYM = 765,
    MASTER_SSL_KEY_SYM = 766,
    MASTER_SSL_SYM = 767,
    MASTER_SYM = 768,
    MASTER_USER_SYM = 769,
    MASTER_USE_GTID_SYM = 770,
    MASTER_HEARTBEAT_PERIOD_SYM = 771,
    MAX_CONNECTIONS_PER_HOUR = 772,
    MAX_QUERIES_PER_HOUR = 773,
    MAX_ROWS = 774,
    MAX_SIZE_SYM = 775,
    MAX_UPDATES_PER_HOUR = 776,
    MAX_STATEMENT_TIME_SYM = 777,
    MAX_USER_CONNECTIONS_SYM = 778,
    MEDIUM_SYM = 779,
    MEMORY_SYM = 780,
    MERGE_SYM = 781,
    MESSAGE_TEXT_SYM = 782,
    MICROSECOND_SYM = 783,
    MIGRATE_SYM = 784,
    MINUTE_SYM = 785,
    MINVALUE_SYM = 786,
    MIN_ROWS = 787,
    MODE_SYM = 788,
    MODIFY_SYM = 789,
    MONTH_SYM = 790,
    MULTILINESTRING = 791,
    MULTIPOINT = 792,
    MULTIPOLYGON = 793,
    MUTEX_SYM = 794,
    MYSQL_SYM = 795,
    MYSQL_ERRNO_SYM = 796,
    NAMES_SYM = 797,
    NAME_SYM = 798,
    NATIONAL_SYM = 799,
    NCHAR_SYM = 800,
    NEW_SYM = 801,
    NEXT_SYM = 802,
    NEXTVAL_SYM = 803,
    NOCACHE_SYM = 804,
    NOCYCLE_SYM = 805,
    NODEGROUP_SYM = 806,
    NONE_SYM = 807,
    NOTFOUND_SYM = 808,
    NO_SYM = 809,
    NOMAXVALUE_SYM = 810,
    NOMINVALUE_SYM = 811,
    NO_WAIT_SYM = 812,
    NOWAIT_SYM = 813,
    NUMBER_MARIADB_SYM = 814,
    NUMBER_ORACLE_SYM = 815,
    NVARCHAR_SYM = 816,
    OF_SYM = 817,
    OFFSET_SYM = 818,
    OLD_PASSWORD_SYM = 819,
    ONE_SYM = 820,
    ONLY_SYM = 821,
    ONLINE_SYM = 822,
    OPEN_SYM = 823,
    OPTIONS_SYM = 824,
    OPTION = 825,
    OWNER_SYM = 826,
    PACK_KEYS_SYM = 827,
    PAGE_SYM = 828,
    PARSER_SYM = 829,
    PARTIAL = 830,
    PARTITIONS_SYM = 831,
    PARTITIONING_SYM = 832,
    PASSWORD_SYM = 833,
    PERIOD_SYM = 834,
    PERSISTENT_SYM = 835,
    PHASE_SYM = 836,
    PLUGINS_SYM = 837,
    PLUGIN_SYM = 838,
    POINT_SYM = 839,
    POLYGON = 840,
    PORT_SYM = 841,
    PRECEDES_SYM = 842,
    PRECEDING_SYM = 843,
    PREPARE_SYM = 844,
    PRESERVE_SYM = 845,
    PREV_SYM = 846,
    PREVIOUS_SYM = 847,
    PRIVILEGES = 848,
    PROCESS = 849,
    PROCESSLIST_SYM = 850,
    PROFILE_SYM = 851,
    PROFILES_SYM = 852,
    PROXY_SYM = 853,
    QUARTER_SYM = 854,
    QUERY_SYM = 855,
    QUICK = 856,
    RAW_MARIADB_SYM = 857,
    RAW_ORACLE_SYM = 858,
    READ_ONLY_SYM = 859,
    REBUILD_SYM = 860,
    RECOVER_SYM = 861,
    REDOFILE_SYM = 862,
    REDO_BUFFER_SIZE_SYM = 863,
    REDUNDANT_SYM = 864,
    RELAY = 865,
    RELAYLOG_SYM = 866,
    RELAY_LOG_FILE_SYM = 867,
    RELAY_LOG_POS_SYM = 868,
    RELAY_THREAD = 869,
    RELOAD = 870,
    REMOVE_SYM = 871,
    REORGANIZE_SYM = 872,
    REPAIR = 873,
    REPEATABLE_SYM = 874,
    REPLICATION = 875,
    RESET_SYM = 876,
    RESTART_SYM = 877,
    RESOURCES = 878,
    RESTORE_SYM = 879,
    RESUME_SYM = 880,
    RETURNED_SQLSTATE_SYM = 881,
    RETURNS_SYM = 882,
    REUSE_SYM = 883,
    REVERSE_SYM = 884,
    ROLE_SYM = 885,
    ROLLBACK_SYM = 886,
    ROLLUP_SYM = 887,
    ROUTINE_SYM = 888,
    ROWCOUNT_SYM = 889,
    ROW_SYM = 890,
    ROW_COUNT_SYM = 891,
    ROW_FORMAT_SYM = 892,
    RTREE_SYM = 893,
    SAVEPOINT_SYM = 894,
    SCHEDULE_SYM = 895,
    SCHEMA_NAME_SYM = 896,
    SECOND_SYM = 897,
    SECURITY_SYM = 898,
    SEQUENCE_SYM = 899,
    SERIALIZABLE_SYM = 900,
    SERIAL_SYM = 901,
    SESSION_SYM = 902,
    SERVER_SYM = 903,
    SETVAL_SYM = 904,
    SHARE_SYM = 905,
    SHUTDOWN = 906,
    SIGNED_SYM = 907,
    SIMPLE_SYM = 908,
    SLAVE = 909,
    SLAVES = 910,
    SLAVE_POS_SYM = 911,
    SLOW = 912,
    SNAPSHOT_SYM = 913,
    SOCKET_SYM = 914,
    SOFT_SYM = 915,
    SONAME_SYM = 916,
    SOUNDS_SYM = 917,
    SOURCE_SYM = 918,
    SQL_BUFFER_RESULT = 919,
    SQL_CACHE_SYM = 920,
    SQL_CALC_FOUND_ROWS = 921,
    SQL_NO_CACHE_SYM = 922,
    SQL_THREAD = 923,
    STARTS_SYM = 924,
    START_SYM = 925,
    STATEMENT_SYM = 926,
    STATUS_SYM = 927,
    STOP_SYM = 928,
    STORAGE_SYM = 929,
    STORED_SYM = 930,
    STRING_SYM = 931,
    SUBCLASS_ORIGIN_SYM = 932,
    SUBDATE_SYM = 933,
    SUBJECT_SYM = 934,
    SUBPARTITIONS_SYM = 935,
    SUBPARTITION_SYM = 936,
    SUPER_SYM = 937,
    SUSPEND_SYM = 938,
    SWAPS_SYM = 939,
    SWITCHES_SYM = 940,
    SYSTEM = 941,
    SYSTEM_TIME_SYM = 942,
    TABLES = 943,
    TABLESPACE = 944,
    TABLE_CHECKSUM_SYM = 945,
    TABLE_NAME_SYM = 946,
    TEMPORARY = 947,
    TEMPTABLE_SYM = 948,
    TEXT_SYM = 949,
    THAN_SYM = 950,
    TIES_SYM = 951,
    TIMESTAMP = 952,
    TIMESTAMP_ADD = 953,
    TIMESTAMP_DIFF = 954,
    TIME_SYM = 955,
    TRANSACTION_SYM = 956,
    TRANSACTIONAL_SYM = 957,
    TRIGGERS_SYM = 958,
    TRIM_ORACLE = 959,
    TRUNCATE_SYM = 960,
    TYPES_SYM = 961,
    TYPE_SYM = 962,
    UDF_RETURNS_SYM = 963,
    UNBOUNDED_SYM = 964,
    UNCOMMITTED_SYM = 965,
    UNDEFINED_SYM = 966,
    UNDOFILE_SYM = 967,
    UNDO_BUFFER_SIZE_SYM = 968,
    UNICODE_SYM = 969,
    UNINSTALL_SYM = 970,
    UNKNOWN_SYM = 971,
    UNTIL_SYM = 972,
    UPGRADE_SYM = 973,
    USER_SYM = 974,
    USE_FRM = 975,
    VALUE_SYM = 976,
    VARCHAR2_MARIADB_SYM = 977,
    VARCHAR2_ORACLE_SYM = 978,
    VARIABLES = 979,
    VERSIONING_SYM = 980,
    VIA_SYM = 981,
    VIEW_SYM = 982,
    VIRTUAL_SYM = 983,
    WAIT_SYM = 984,
    WARNINGS = 985,
    WEEK_SYM = 986,
    WEIGHT_STRING_SYM = 987,
    WINDOW_SYM = 988,
    WITHIN = 989,
    WITHOUT = 990,
    WORK_SYM = 991,
    WRAPPER_SYM = 992,
    WRITE_SYM = 993,
    X509_SYM = 994,
    XA_SYM = 995,
    XML_SYM = 996,
    YEAR_SYM = 997,
    PREC_BELOW_ESCAPE = 998,
    CONDITIONLESS_JOIN = 999,
    ON_SYM = 1000,
    PREC_BELOW_NOT = 1001,
    PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 1002,
    USER = 1003,
    PREC_BELOW_CONTRACTION_TOKEN2 = 1004
  };
#endif

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  Lex_ident_cli_st kwd;
  Lex_ident_cli_st ident_cli;
  Lex_ident_sys_st ident_sys;
  Lex_string_with_metadata_st lex_string_with_metadata;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  Lex_trim_st trim;
  vers_history_point_t vers_history_point;

  /* pointers */
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Item_basic_constant *item_basic_constant;
  Key_part_spec *key_part;
  LEX *lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<LEX_CSTRING> *lex_str_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_sp_suid_behaviour sp_suid;
  enum enum_view_suid view_suid;
  enum sub_select_type unit_type;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum Field::geometry_type geom_type;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;
  enum vers_sys_type_t vers_range_unit;
  enum Column_definition::enum_column_versioning vers_column_versioning;
  enum plsql_cursor_attr_t plsql_cursor_attr;

#line 1111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int ORAparse (THD *thd);

#endif /* !YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:358  */

bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 1128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  727
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   92395

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  771
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1306
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3571
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6163

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1004

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   765,     2,     2,     2,   756,   751,     2,
     762,   763,   754,   753,   764,   752,   769,   755,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   768,
     749,   747,   748,     2,   770,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   757,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   766,   750,   767,   758,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   759,   760,   761
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1664,  1664,  1674,  1673,  1698,  1705,  1707,  1711,  1712,
    1713,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,
    1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,
    1747,  1748,  1749,  1750,  1751,  1752,  1753,  1754,  1755,  1756,
    1757,  1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,
    1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,  1775,  1779,
    1788,  1789,  1793,  1805,  1805,  1815,  1814,  1823,  1822,  1833,
    1835,  1835,  1846,  1847,  1851,  1863,  1862,  1879,  1878,  1887,
    1888,  1892,  1896,  1900,  1904,  1908,  1912,  1922,  1927,  1931,
    1935,  1939,  1943,  1947,  1952,  1956,  1961,  1989,  1993,  1997,
    2002,  2005,  2007,  2008,  2012,  2018,  2020,  2021,  2025,  2031,
    2033,  2034,  2038,  2045,  2049,  2064,  2068,  2074,  2080,  2086,
    2096,  2100,  2104,  2118,  2117,  2148,  2147,  2203,  2200,  2213,
    2211,  2224,  2222,  2234,  2233,  2248,  2246,  2258,  2256,  2265,
    2264,  2269,  2268,  2273,  2272,  2277,  2276,  2281,  2280,  2285,
    2284,  2291,  2298,  2305,  2309,  2313,  2313,  2320,  2316,  2340,
    2352,  2357,  2336,  2370,  2376,  2384,  2385,  2386,  2392,  2393,
    2399,  2400,  2406,  2417,  2416,  2443,  2442,  2468,  2477,  2486,
    2492,  2491,  2515,  2514,  2533,  2536,  2538,  2542,  2543,  2547,
    2554,  2564,  2565,  2569,  2570,  2574,  2575,  2579,  2584,  2590,
    2596,  2604,  2610,  2616,  2624,  2632,  2640,  2648,  2656,  2664,
    2676,  2693,  2692,  2704,  2705,  2709,  2714,  2721,  2726,  2731,
    2736,  2741,  2749,  2748,  2781,  2780,  2787,  2794,  2795,  2801,
    2807,  2817,  2823,  2829,  2831,  2838,  2839,  2843,  2853,  2854,
    2862,  2862,  2907,  2921,  2926,  2934,  2935,  2939,  2940,  2944,
    2945,  2950,  2952,  2954,  2956,  2958,  2960,  2962,  2967,  2969,
    2974,  2975,  2978,  2980,  2984,  2984,  2990,  2991,  2995,  2996,
    3001,  3000,  3009,  3011,  3014,  3016,  3020,  3024,  3031,  3033,
    3037,  3038,  3042,  3050,  3055,  3060,  3065,  3070,  3075,  3083,
    3085,  3089,  3090,  3094,  3100,  3106,  3112,  3118,  3124,  3133,
    3134,  3135,  3136,  3137,  3142,  3141,  3154,  3153,  3166,  3173,
    3174,  3178,  3179,  3183,  3184,  3188,  3189,  3193,  3193,  3205,
    3208,  3213,  3212,  3221,  3225,  3226,  3233,  3234,  3241,  3242,
    3246,  3252,  3258,  3267,  3279,  3283,  3289,  3301,  3305,  3312,
    3322,  3330,  3338,  3349,  3350,  3357,  3368,  3367,  3386,  3385,
    3399,  3401,  3406,  3416,  3415,  3431,  3432,  3433,  3434,  3439,
    3441,  3446,  3461,  3469,  3473,  3493,  3494,  3498,  3502,  3508,
    3514,  3520,  3526,  3536,  3541,  3549,  3557,  3572,  3578,  3579,
    3585,  3588,  3592,  3600,  3617,  3619,  3637,  3643,  3645,  3647,
    3649,  3651,  3653,  3655,  3657,  3659,  3661,  3663,  3665,  3670,
    3678,  3694,  3695,  3700,  3706,  3715,  3722,  3731,  3739,  3744,
    3753,  3755,  3757,  3766,  3771,  3778,  3787,  3795,  3797,  3799,
    3801,  3803,  3805,  3807,  3809,  3811,  3813,  3815,  3817,  3819,
    3824,  3825,  3833,  3845,  3860,  3861,  3862,  3866,  3867,  3868,
    3869,  3870,  3871,  3875,  3876,  3877,  3878,  3879,  3880,  3881,
    3882,  3883,  3884,  3885,  3886,  3887,  3891,  3892,  3893,  3894,
    3899,  3898,  3909,  3911,  3910,  3918,  3917,  3926,  3926,  3979,
    3980,  3985,  3984,  3995,  4006,  4006,  4010,  4015,  4020,  4026,
    4035,  4040,  4045,  4051,  4061,  4069,  4077,  4086,  4092,  4102,
    4101,  4120,  4119,  4135,  4141,  4149,  4150,  4154,  4162,  4167,
    4172,  4180,  4184,  4202,  4216,  4233,  4235,  4251,  4233,  4270,
    4272,  4273,  4278,  4277,  4347,  4349,  4347,  4357,  4362,  4363,
    4367,  4368,  4373,  4377,  4372,  4397,  4401,  4396,  4419,  4429,
    4433,  4434,  4438,  4449,  4447,  4463,  4467,  4461,  4482,  4484,
    4489,  4488,  4503,  4509,  4502,  4524,  4528,  4532,  4538,  4528,
    4549,  4547,  4562,  4563,  4567,  4568,  4573,  4572,  4588,  4589,
    4593,  4601,  4606,  4613,  4622,  4637,  4636,  4653,  4652,  4672,
    4681,  4680,  4688,  4687,  4696,  4701,  4710,  4695,  4720,  4719,
    4730,  4729,  4739,  4738,  4749,  4756,  4748,  4773,  4772,  4784,
    4786,  4791,  4793,  4795,  4812,  4817,  4823,  4830,  4831,  4839,
    4845,  4854,  4860,  4866,  4867,  4871,  4871,  4876,  4877,  4878,
    4882,  4883,  4884,  4888,  4892,  4893,  4894,  4898,  4899,  4900,
    4901,  4902,  4903,  4904,  4905,  4909,  4913,  4914,  4915,  4919,
    4920,  4921,  4922,  4923,  4927,  4931,  4932,  4933,  4937,  4938,
    4939,  4940,  4941,  4942,  4943,  4947,  4951,  4952,  4953,  4957,
    4958,  4959,  4964,  4972,  4980,  4988,  5001,  5014,  5019,  5024,
    5032,  5040,  5048,  5056,  5064,  5072,  5080,  5090,  5100,  5110,
    5112,  5116,  5121,  5131,  5132,  5145,  5144,  5147,  5153,  5155,
    5154,  5157,  5156,  5158,  5172,  5173,  5177,  5178,  5184,  5182,
    5189,  5194,  5196,  5195,  5198,  5197,  5202,  5239,  5240,  5245,
    5244,  5260,  5275,  5274,  5292,  5291,  5297,  5305,  5304,  5307,
    5309,  5312,  5311,  5320,  5323,  5322,  5331,  5332,  5338,  5339,
    5356,  5357,  5361,  5362,  5366,  5380,  5390,  5401,  5410,  5411,
    5424,  5426,  5425,  5430,  5428,  5439,  5440,  5444,  5458,  5470,
    5471,  5484,  5493,  5515,  5516,  5521,  5520,  5544,  5556,  5572,
    5571,  5586,  5585,  5599,  5604,  5609,  5629,  5647,  5651,  5678,
    5690,  5691,  5696,  5705,  5695,  5730,  5731,  5735,  5746,  5765,
    5778,  5804,  5805,  5810,  5809,  5846,  5855,  5856,  5860,  5861,
    5865,  5867,  5873,  5879,  5881,  5883,  5885,  5887,  5889,  5894,
    5895,  5901,  5917,  5920,  5937,  5945,  5945,  5966,  5967,  5971,
    5972,  5976,  5987,  5988,  5992,  5993,  5997,  5998,  6002,  6003,
    6008,  6011,  6019,  6022,  6029,  6033,  6039,  6041,  6045,  6046,
    6050,  6051,  6052,  6056,  6071,  6076,  6081,  6086,  6091,  6096,
    6101,  6116,  6122,  6137,  6142,  6157,  6163,  6181,  6186,  6191,
    6196,  6201,  6206,  6212,  6211,  6237,  6238,  6239,  6244,  6249,
    6254,  6256,  6258,  6260,  6266,  6271,  6276,  6285,  6294,  6300,
    6306,  6311,  6314,  6316,  6320,  6339,  6347,  6362,  6372,  6383,
    6384,  6385,  6386,  6387,  6388,  6389,  6393,  6394,  6395,  6399,
    6400,  6401,  6402,  6407,  6414,  6415,  6419,  6420,  6421,  6422,
    6426,  6428,  6434,  6433,  6441,  6440,  6448,  6447,  6455,  6454,
    6464,  6461,  6472,  6470,  6479,  6478,  6517,  6525,  6533,  6534,
    6538,  6548,  6549,  6553,  6554,  6558,  6563,  6562,  6598,  6598,
    6601,  6600,  6610,  6611,  6615,  6616,  6620,  6621,  6625,  6626,
    6630,  6631,  6632,  6633,  6635,  6634,  6640,  6645,  6653,  6654,
    6659,  6662,  6666,  6670,  6677,  6678,  6682,  6683,  6687,  6693,
    6699,  6700,  6708,  6707,  6726,  6732,  6733,  6743,  6753,  6753,
    6756,  6757,  6765,  6766,  6767,  6768,  6769,  6774,  6775,  6776,
    6777,  6778,  6783,  6784,  6785,  6801,  6805,  6809,  6813,  6815,
    6822,  6824,  6829,  6831,  6832,  6833,  6837,  6841,  6846,  6851,
    6855,  6859,  6864,  6869,  6878,  6882,  6887,  6892,  6896,  6900,
    6905,  6910,  6919,  6937,  6938,  6945,  6966,  6977,  6982,  6987,
    6992,  7003,  7008,  7013,  7018,  7020,  7022,  7024,  7026,  7028,
    7030,  7032,  7040,  7042,  7047,  7048,  7049,  7050,  7051,  7052,
    7053,  7054,  7058,  7062,  7063,  7067,  7068,  7072,  7073,  7074,
    7075,  7076,  7080,  7081,  7082,  7083,  7084,  7088,  7094,  7095,
    7100,  7102,  7109,  7110,  7111,  7115,  7119,  7120,  7121,  7122,
    7123,  7124,  7128,  7129,  7130,  7131,  7134,  7135,  7138,  7139,
    7160,  7161,  7164,  7165,  7168,  7169,  7174,  7175,  7179,  7180,
    7181,  7188,  7189,  7195,  7202,  7206,  7207,  7211,  7212,  7216,
    7224,  7232,  7241,  7245,  7251,  7255,  7256,  7265,  7274,  7280,
    7286,  7294,  7300,  7310,  7324,  7337,  7338,  7342,  7347,  7351,
    7352,  7356,  7357,  7361,  7368,  7372,  7373,  7377,  7385,  7386,
    7390,  7391,  7395,  7396,  7400,  7401,  7402,  7410,  7411,  7415,
    7416,  7417,  7418,  7422,  7423,  7428,  7427,  7440,  7441,  7445,
    7448,  7449,  7450,  7451,  7455,  7463,  7470,  7471,  7475,  7485,
    7486,  7490,  7491,  7494,  7496,  7500,  7512,  7513,  7517,  7524,
    7537,  7538,  7540,  7542,  7548,  7553,  7559,  7565,  7572,  7582,
    7583,  7584,  7585,  7586,  7590,  7591,  7595,  7596,  7600,  7601,
    7605,  7606,  7607,  7611,  7612,  7616,  7620,  7632,  7633,  7637,
    7638,  7642,  7643,  7647,  7648,  7652,  7653,  7657,  7658,  7662,
    7663,  7667,  7668,  7669,  7672,  7674,  7679,  7684,  7686,  7694,
    7702,  7708,  7717,  7718,  7722,  7726,  7727,  7737,  7738,  7739,
    7743,  7747,  7754,  7760,  7772,  7773,  7777,  7779,  7788,  7802,
    7787,  7822,  7821,  7835,  7844,  7843,  7859,  7858,  7874,  7873,
    7886,  7880,  7893,  7892,  7927,  7932,  7937,  7942,  7948,  7947,
    7954,  7961,  7971,  7960,  7991,  7992,  7993,  7994,  7998,  7999,
    8011,  8012,  8016,  8017,  8020,  8022,  8030,  8038,  8040,  8042,
    8043,  8051,  8052,  8058,  8067,  8065,  8078,  8091,  8090,  8103,
    8101,  8114,  8121,  8131,  8132,  8156,  8163,  8167,  8173,  8171,
    8188,  8190,  8195,  8203,  8202,  8216,  8220,  8219,  8231,  8232,
    8236,  8249,  8250,  8254,  8258,  8265,  8270,  8274,  8281,  8285,
    8290,  8298,  8306,  8316,  8327,  8337,  8348,  8358,  8364,  8370,
    8375,  8381,  8395,  8409,  8414,  8418,  8423,  8424,  8425,  8430,
    8434,  8440,  8442,  8443,  8444,  8445,  8448,  8453,  8461,  8466,
    8474,  8475,  8479,  8480,  8484,  8484,  8487,  8489,  8493,  8494,
    8498,  8499,  8507,  8508,  8509,  8513,  8514,  8519,  8528,  8529,
    8530,  8531,  8536,  8535,  8545,  8544,  8552,  8559,  8569,  8586,
    8589,  8596,  8600,  8607,  8611,  8615,  8622,  8622,  8628,  8629,
    8633,  8634,  8635,  8639,  8640,  8649,  8656,  8657,  8662,  8661,
    8673,  8674,  8675,  8679,  8681,  8680,  8687,  8686,  8707,  8708,
    8712,  8713,  8717,  8718,  8719,  8723,  8724,  8729,  8728,  8749,
    8750,  8754,  8759,  8760,  8767,  8769,  8773,  8775,  8774,  8786,
    8788,  8787,  8800,  8801,  8806,  8815,  8816,  8817,  8821,  8828,
    8838,  8846,  8855,  8857,  8856,  8862,  8861,  8884,  8885,  8889,
    8890,  8894,  8895,  8896,  8897,  8898,  8899,  8903,  8904,  8909,
    8908,  8929,  8930,  8931,  8936,  8935,  8941,  8948,  8954,  8963,
    8964,  8968,  8984,  8983,  8996,  8997,  9001,  9002,  9006,  9017,
    9028,  9029,  9034,  9033,  9044,  9045,  9049,  9050,  9054,  9065,
    9077,  9076,  9084,  9084,  9093,  9094,  9099,  9100,  9109,  9118,
    9119,  9120,  9121,  9122,  9123,  9124,  9128,  9129,  9130,  9131,
    9132,  9133,  9134,  9138,  9138,  9146,  9146,  9158,  9162,  9164,
    9168,  9168,  9179,  9183,  9185,  9189,  9189,  9200,  9205,  9205,
    9214,  9214,  9226,  9232,  9230,  9237,  9249,  9247,  9254,  9264,
    9269,  9268,  9273,  9277,  9288,  9289,  9293,  9294,  9298,  9299,
    9300,  9304,  9305,  9306,  9310,  9311,  9312,  9313,  9314,  9318,
    9318,  9336,  9343,  9345,  9349,  9353,  9359,  9366,  9368,  9377,
    9381,  9385,  9392,  9400,  9404,  9412,  9415,  9422,  9426,  9430,
    9434,  9441,  9442,  9446,  9447,  9464,  9483,  9485,  9492,  9503,
    9504,  9505,  9519,  9524,  9546,  9552,  9558,  9564,  9570,  9579,
    9580,  9581,  9582,  9583,  9587,  9588,  9589,  9593,  9594,  9595,
    9599,  9600,  9605,  9656,  9663,  9706,  9712,  9718,  9724,  9730,
    9736,  9742,  9748,  9752,  9758,  9764,  9770,  9776,  9782,  9786,
    9792,  9801,  9807,  9815,  9821,  9830,  9836,  9844,  9854,  9861,
    9869,  9875,  9884,  9888,  9894,  9900,  9906,  9912,  9919,  9925,
    9931,  9937,  9943,  9950,  9956,  9962,  9968,  9974,  9980,  9986,
    9992,  9998, 10002, 10003, 10007, 10008, 10012, 10013, 10017, 10018,
   10022, 10023, 10024, 10025, 10026, 10027, 10031, 10032, 10037, 10041,
   10045, 10046, 10047, 10051, 10052, 10053, 10054, 10055, 10056, 10060,
   10061, 10062, 10067, 10066, 10072, 10080, 10102, 10109, 10118, 10119,
   10120, 10121, 10125, 10134, 10135, 10136, 10137, 10138, 10139, 10140,
   10141, 10173, 10174, 10175, 10176, 10177, 10178, 10179, 10180, 10181,
   10182, 10183, 10184, 10191, 10197, 10202, 10212, 10217, 10222, 10228,
   10233, 10239, 10250, 10257, 10262, 10267, 10272, 10277, 10282, 10287,
   10295, 10296, 10297, 10301, 10302, 10310, 10311, 10317, 10321, 10327,
   10333, 10342, 10343, 10352, 10359, 10373, 10379, 10385, 10394, 10403,
   10409, 10415, 10421, 10427, 10442, 10453, 10459, 10465, 10471, 10477,
   10483, 10491, 10498, 10502, 10507, 10515, 10536, 10543, 10549, 10556,
   10563, 10569, 10575, 10581, 10587, 10593, 10599, 10605, 10611, 10618,
   10624, 10631, 10637, 10642, 10647, 10652, 10657, 10675, 10681, 10687,
   10692, 10699, 10706, 10714, 10721, 10728, 10735, 10742, 10759, 10765,
   10771, 10777, 10783, 10790, 10796, 10802, 10811, 10822, 10829, 10835,
   10841, 10848, 10856, 10862, 10868, 10873, 10879, 10887, 10893, 10899,
   10905, 10911, 10919, 10931, 10938, 10953, 10959, 10966, 10973, 10980,
   10987, 10994, 10998, 11005, 11023, 11022, 11090, 11098, 11100, 11105,
   11106, 11110, 11111, 11115, 11116, 11120, 11127, 11135, 11162, 11168,
   11174, 11180, 11186, 11192, 11201, 11208, 11210, 11207, 11217, 11228,
   11234, 11240, 11246, 11252, 11258, 11264, 11270, 11276, 11283, 11282,
   11307, 11316, 11334, 11336, 11343, 11350, 11357, 11364, 11371, 11378,
   11385, 11392, 11399, 11406, 11417, 11424, 11435, 11446, 11466, 11465,
   11471, 11488, 11494, 11503, 11512, 11522, 11521, 11533, 11543, 11551,
   11556, 11564, 11565, 11570, 11575, 11578, 11580, 11584, 11589, 11597,
   11598, 11602, 11606, 11613, 11620, 11627, 11640, 11639, 11656, 11659,
   11658, 11663, 11662, 11667, 11666, 11670, 11675, 11676, 11680, 11681,
   11682, 11683, 11684, 11685, 11686, 11687, 11691, 11692, 11693, 11697,
   11698, 11702, 11709, 11717, 11718, 11722, 11729, 11737, 11746, 11756,
   11757, 11766, 11775, 11787, 11788, 11800, 11811, 11812, 11818, 11819,
   11837, 11846, 11844, 11862, 11860, 11871, 11881, 11879, 11897, 11896,
   11906, 11917, 11915, 11934, 11933, 11944, 11956, 11957, 11958, 11962,
   11963, 11971, 11972, 11976, 11991, 11992, 11996, 11996, 12036, 12102,
   12145, 12146, 12155, 12154, 12163, 12164, 12165, 12169, 12170, 12171,
   12171, 12175, 12181, 12189, 12189, 12204, 12221, 12222, 12230, 12240,
   12239, 12253, 12270, 12253, 12277, 12281, 12290, 12301, 12302, 12307,
   12310, 12311, 12312, 12316, 12317, 12322, 12321, 12327, 12326, 12334,
   12335, 12338, 12340, 12340, 12344, 12344, 12349, 12350, 12354, 12356,
   12361, 12362, 12366, 12377, 12391, 12392, 12393, 12394, 12395, 12396,
   12397, 12398, 12399, 12400, 12401, 12402, 12406, 12407, 12408, 12409,
   12410, 12411, 12412, 12413, 12414, 12418, 12419, 12420, 12421, 12424,
   12426, 12427, 12431, 12432, 12440, 12442, 12446, 12448, 12447, 12461,
   12464, 12463, 12478, 12483, 12498, 12500, 12504, 12509, 12517, 12518,
   12535, 12558, 12559, 12565, 12566, 12570, 12583, 12582, 12590, 12591,
   12599, 12600, 12604, 12605, 12609, 12610, 12624, 12625, 12629, 12639,
   12648, 12655, 12662, 12672, 12673, 12680, 12690, 12691, 12693, 12695,
   12697, 12699, 12708, 12712, 12713, 12717, 12729, 12731, 12736, 12735,
   12785, 12790, 12798, 12799, 12800, 12804, 12805, 12809, 12822, 12829,
   12834, 12841, 12848, 12855, 12865, 12870, 12875, 12879, 12885, 12891,
   12900, 12908, 12912, 12919, 12920, 12923, 12925, 12929, 12930, 12933,
   12934, 12935, 12936, 12937, 12938, 12942, 12943, 12944, 12945, 12946,
   12950, 12951, 12952, 12953, 12957, 12958, 12959, 12960, 12961, 12965,
   12966, 12967, 12968, 12969, 12973, 12978, 12979, 12983, 12984, 12988,
   12989, 12990, 12995, 12994, 13028, 13029, 13033, 13034, 13038, 13048,
   13048, 13060, 13061, 13064, 13084, 13088, 13093, 13101, 13106, 13117,
   13105, 13119, 13134, 13146, 13145, 13163, 13162, 13171, 13188, 13194,
   13202, 13210, 13224, 13239, 13247, 13251, 13256, 13255, 13264, 13269,
   13275, 13280, 13285, 13292, 13290, 13304, 13305, 13309, 13320, 13333,
   13334, 13338, 13352, 13356, 13365, 13368, 13375, 13376, 13384, 13392,
   13383, 13402, 13409, 13401, 13419, 13427, 13428, 13435, 13439, 13440,
   13449, 13450, 13454, 13463, 13464, 13465, 13467, 13466, 13478, 13480,
   13484, 13485, 13486, 13490, 13491, 13495, 13496, 13500, 13510, 13511,
   13515, 13516, 13520, 13521, 13525, 13526, 13531, 13530, 13546, 13545,
   13560, 13561, 13565, 13566, 13570, 13575, 13583, 13591, 13602, 13603,
   13609, 13617, 13619, 13621, 13619, 13634, 13642, 13633, 13664, 13665,
   13669, 13678, 13679, 13683, 13693, 13694, 13701, 13700, 13716, 13719,
   13726, 13727, 13734, 13749, 13755, 13754, 13766, 13765, 13778, 13780,
   13784, 13785, 13789, 13804, 13822, 13823, 13827, 13828, 13832, 13833,
   13834, 13839, 13850, 13838, 13860, 13862, 13863, 13866, 13868, 13871,
   13873, 13876, 13877, 13880, 13884, 13888, 13892, 13896, 13900, 13904,
   13908, 13912, 13920, 13923, 13933, 13932, 13948, 13955, 13963, 13971,
   13979, 13987, 13995, 14002, 14009, 14015, 14017, 14019, 14028, 14032,
   14037, 14036, 14043, 14042, 14047, 14056, 14063, 14068, 14073, 14078,
   14083, 14088, 14090, 14092, 14094, 14101, 14109, 14111, 14119, 14126,
   14133, 14141, 14147, 14152, 14160, 14168, 14176, 14180, 14185, 14192,
   14197, 14204, 14211, 14217, 14223, 14229, 14237, 14242, 14249, 14256,
   14263, 14270, 14275, 14280, 14285, 14290, 14297, 14319, 14321, 14323,
   14328, 14329, 14332, 14334, 14338, 14339, 14343, 14344, 14348, 14349,
   14353, 14354, 14358, 14359, 14363, 14364, 14372, 14384, 14383, 14399,
   14398, 14408, 14409, 14410, 14411, 14412, 14416, 14417, 14421, 14428,
   14429, 14430, 14434, 14435, 14448, 14449, 14450, 14465, 14464, 14477,
   14476, 14488, 14492, 14493, 14508, 14511, 14510, 14523, 14524, 14529,
   14531, 14533, 14535, 14537, 14539, 14547, 14549, 14551, 14553, 14558,
   14560, 14568, 14570, 14572, 14574, 14591, 14592, 14596, 14597, 14600,
   14602, 14603, 14607, 14623, 14624, 14628, 14627, 14637, 14638, 14642,
   14642, 14646, 14645, 14651, 14655, 14656, 14660, 14661, 14669, 14668,
   14679, 14683, 14687, 14700, 14699, 14714, 14715, 14716, 14719, 14720,
   14721, 14722, 14730, 14734, 14743, 14749, 14761, 14772, 14783, 14796,
   14760, 14804, 14805, 14809, 14810, 14814, 14815, 14823, 14827, 14828,
   14829, 14832, 14834, 14838, 14839, 14843, 14848, 14855, 14860, 14867,
   14869, 14873, 14874, 14878, 14883, 14891, 14892, 14895, 14897, 14905,
   14906, 14910, 14911, 14912, 14916, 14918, 14923, 14924, 14933, 14934,
   14938, 14939, 14943, 14956, 14961, 14966, 14971, 14979, 14987, 14992,
   15005, 15014, 15030, 15037, 15043, 15053, 15054, 15062, 15063, 15064,
   15065, 15079, 15085, 15091, 15097, 15103, 15109, 15128, 15138, 15148,
   15154, 15161, 15171, 15179, 15187, 15199, 15200, 15209, 15208, 15227,
   15228, 15233, 15234, 15241, 15239, 15266, 15267, 15273, 15278, 15287,
   15302, 15303, 15307, 15312, 15320, 15325, 15333, 15338, 15343, 15348,
   15354, 15359, 15367, 15372, 15377, 15382, 15388, 15396, 15397, 15408,
   15416, 15420, 15426, 15432, 15442, 15448, 15457, 15467, 15468, 15472,
   15473, 15474, 15478, 15486, 15494, 15502, 15510, 15511, 15519, 15520,
   15528, 15529, 15534, 15543, 15544, 15552, 15553, 15562, 15563, 15571,
   15572, 15576, 15585, 15586, 15587, 15591, 15604, 15634, 15644, 15644,
   15646, 15656, 15657, 15658, 15659, 15660, 15661, 15662, 15663, 15664,
   15669, 15670, 15671, 15672, 15673, 15674, 15675, 15676, 15677, 15678,
   15686, 15687, 15688, 15689, 15690, 15691, 15695, 15696, 15697, 15698,
   15699, 15700, 15701, 15702, 15703, 15707, 15708, 15709, 15710, 15711,
   15712, 15713, 15717, 15718, 15719, 15720, 15721, 15722, 15723, 15724,
   15725, 15729, 15730, 15731, 15732, 15733, 15734, 15735, 15748, 15749,
   15750, 15751, 15752, 15753, 15754, 15755, 15756, 15757, 15758, 15759,
   15760, 15761, 15762, 15763, 15764, 15765, 15766, 15767, 15768, 15769,
   15770, 15771, 15772, 15773, 15774, 15775, 15776, 15777, 15778, 15779,
   15780, 15781, 15782, 15783, 15784, 15785, 15786, 15787, 15788, 15789,
   15790, 15791, 15792, 15793, 15794, 15795, 15796, 15797, 15798, 15799,
   15800, 15801, 15802, 15843, 15844, 15845, 15846, 15847, 15848, 15859,
   15860, 15861, 15862, 15863, 15864, 15865, 15866, 15867, 15868, 15872,
   15873, 15874, 15881, 15882, 15883, 15887, 15888, 15889, 15898, 15899,
   15900, 15901, 15902, 15903, 15904, 15905, 15906, 15907, 15908, 15909,
   15910, 15911, 15912, 15913, 15914, 15915, 15916, 15917, 15918, 15919,
   15920, 15921, 15922, 15923, 15924, 15925, 15926, 15927, 15928, 15929,
   15930, 15931, 15939, 15940, 15941, 15942, 15943, 15944, 15945, 15946,
   15947, 15948, 15949, 15950, 15951, 15952, 15953, 15954, 15955, 15956,
   15957, 15958, 15959, 15960, 15961, 15962, 15963, 15964, 15965, 15966,
   15967, 15968, 15969, 15970, 15971, 15972, 15973, 15974, 15975, 15976,
   15977, 15978, 15979, 15980, 15981, 15982, 15983, 15984, 15989, 15990,
   15991, 15992, 15993, 15994, 15995, 15996, 15997, 15998, 15999, 16000,
   16001, 16002, 16003, 16004, 16005, 16006, 16007, 16008, 16009, 16010,
   16011, 16012, 16013, 16014, 16015, 16016, 16017, 16018, 16019, 16020,
   16021, 16022, 16023, 16024, 16025, 16026, 16027, 16028, 16029, 16030,
   16031, 16032, 16033, 16034, 16035, 16036, 16037, 16038, 16039, 16040,
   16041, 16042, 16043, 16044, 16045, 16046, 16047, 16048, 16049, 16050,
   16051, 16052, 16053, 16054, 16055, 16056, 16057, 16058, 16059, 16060,
   16061, 16062, 16063, 16064, 16065, 16066, 16067, 16068, 16069, 16070,
   16071, 16072, 16073, 16074, 16075, 16076, 16077, 16078, 16079, 16080,
   16081, 16082, 16083, 16084, 16085, 16086, 16087, 16088, 16089, 16090,
   16091, 16092, 16093, 16094, 16095, 16096, 16097, 16098, 16099, 16100,
   16101, 16102, 16103, 16104, 16105, 16106, 16107, 16108, 16109, 16110,
   16111, 16112, 16113, 16114, 16115, 16116, 16117, 16118, 16119, 16120,
   16121, 16122, 16123, 16124, 16125, 16126, 16127, 16128, 16129, 16130,
   16131, 16132, 16133, 16134, 16135, 16136, 16137, 16138, 16139, 16140,
   16141, 16142, 16143, 16144, 16145, 16146, 16147, 16148, 16149, 16150,
   16151, 16152, 16153, 16154, 16155, 16156, 16157, 16158, 16159, 16160,
   16161, 16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169, 16170,
   16171, 16172, 16173, 16174, 16175, 16176, 16177, 16178, 16179, 16180,
   16181, 16182, 16183, 16184, 16185, 16186, 16187, 16188, 16189, 16190,
   16191, 16192, 16193, 16194, 16195, 16196, 16197, 16198, 16199, 16200,
   16201, 16202, 16203, 16204, 16205, 16206, 16207, 16208, 16209, 16210,
   16211, 16212, 16213, 16214, 16215, 16216, 16217, 16218, 16219, 16220,
   16221, 16222, 16223, 16224, 16225, 16226, 16227, 16228, 16229, 16230,
   16231, 16232, 16233, 16234, 16235, 16236, 16237, 16238, 16239, 16240,
   16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248, 16249, 16250,
   16251, 16252, 16253, 16254, 16266, 16265, 16275, 16279, 16274, 16292,
   16291, 16305, 16304, 16320, 16319, 16346, 16347, 16353, 16352, 16359,
   16358, 16368, 16367, 16378, 16377, 16383, 16391, 16393, 16398, 16398,
   16407, 16406, 16420, 16419, 16424, 16428, 16429, 16430, 16434, 16435,
   16436, 16437, 16441, 16442, 16443, 16444, 16449, 16454, 16459, 16468,
   16473, 16478, 16483, 16488, 16493, 16498, 16503, 16517, 16528, 16547,
   16565, 16577, 16585, 16590, 16606, 16607, 16608, 16609, 16613, 16632,
   16650, 16651, 16655, 16656, 16657, 16658, 16662, 16677, 16681, 16682,
   16683, 16693, 16694, 16695, 16701, 16707, 16719, 16718, 16732, 16733,
   16739, 16748, 16749, 16753, 16754, 16758, 16777, 16778, 16779, 16784,
   16785, 16790, 16789, 16806, 16816, 16827, 16826, 16858, 16859, 16863,
   16864, 16868, 16869, 16870, 16871, 16873, 16872, 16885, 16886, 16887,
   16888, 16889, 16895, 16900, 16906, 16912, 16918, 16925, 16932, 16936,
   16943, 16952, 16954, 16959, 16964, 16971, 16978, 16985, 16992, 16999,
   17006, 17018, 17019, 17022, 17023, 17026, 17031, 17039, 17049, 17068,
   17071, 17073, 17077, 17078, 17085, 17087, 17091, 17092, 17097, 17096,
   17100, 17099, 17103, 17102, 17106, 17105, 17108, 17109, 17110, 17111,
   17112, 17113, 17114, 17115, 17116, 17117, 17118, 17119, 17120, 17121,
   17122, 17123, 17124, 17125, 17126, 17127, 17128, 17129, 17130, 17131,
   17132, 17133, 17134, 17138, 17139, 17143, 17144, 17148, 17155, 17162,
   17172, 17182, 17191, 17200, 17213, 17218, 17226, 17231, 17239, 17244,
   17251, 17251, 17252, 17252, 17255, 17262, 17267, 17273, 17279, 17285,
   17289, 17293, 17294, 17298, 17326, 17328, 17332, 17336, 17340, 17347,
   17353, 17359, 17365, 17371, 17380, 17381, 17385, 17386, 17391, 17392,
   17396, 17397, 17401, 17402, 17406, 17407, 17412, 17411, 17421, 17430,
   17431, 17435, 17436, 17441, 17442, 17443, 17448, 17449, 17450, 17454,
   17466, 17475, 17481, 17490, 17499, 17512, 17514, 17516, 17521, 17522,
   17527, 17526, 17543, 17542, 17554, 17554, 17575, 17576, 17583, 17591,
   17592, 17593, 17597, 17598, 17603, 17602, 17624, 17631, 17632, 17636,
   17637, 17641, 17642, 17643, 17648, 17656, 17677, 17704, 17706, 17710,
   17711, 17715, 17716, 17724, 17725, 17726, 17727, 17728, 17734, 17740,
   17750, 17751, 17756, 17769, 17785, 17786, 17787, 17791, 17792, 17796,
   17797, 17802, 17803, 17807, 17813, 17822, 17822, 17847, 17848, 17849,
   17850, 17851, 17852, 17853, 17857, 17858, 17859, 17860, 17870, 17872,
   17878, 17884, 17894, 17903, 17909, 17914, 17918, 17892, 17972, 17990,
   17989, 18007, 18016, 18005, 18038, 18046, 18037, 18059, 18069, 18079,
   18080, 18084, 18085, 18091, 18095, 18099, 18103, 18107, 18111, 18119,
   18120, 18136, 18143, 18150, 18160, 18161, 18162, 18166, 18167, 18168,
   18172, 18173, 18178, 18180, 18179, 18185, 18186, 18190, 18197, 18207,
   18213, 18224
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ADD",
  "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "AS", "ASC",
  "ASENSITIVE_SYM", "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY",
  "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_XOR", "BLOB_MARIADB_SYM",
  "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM", "BOTH", "BY", "CALL_SYM",
  "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE", "CHAR_SYM", "CHECK_SYM",
  "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT", "CONTINUE_MARIADB_SYM",
  "CONTINUE_ORACLE_SYM", "CONVERT_SYM", "COUNT_SYM", "CREATE", "CROSS",
  "CUME_DIST_SYM", "CURDATE", "CURRENT_USER", "CURRENT_ROLE", "CURSOR_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_NUM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESC",
  "DESCRIBE", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_DOMAIN_IDS_SYM", "DOT_DOT_SYM", "DROP", "DUAL_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_MARIADB_SYM", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "END_OF_INPUT", "EQUAL_SYM", "ESCAPED", "EXCEPT_SYM", "EXISTS",
  "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FOR_SYSTEM_TIME_SYM", "FROM",
  "FULLTEXT_SYM", "GE", "GOTO_ORACLE_SYM", "GRANT", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "LAG_SYM", "LEAD_SYM", "HAVING", "HEX_NUM",
  "HEX_STRING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "IDENT", "IDENT_QUOTED", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "INTERSECT_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "IN_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LE", "LEADING", "LEAVE_SYM",
  "LEFT", "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LOAD",
  "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MIN_SYM", "MODIFIES_SYM",
  "MOD_SYM", "MYSQL_CONCAT_SYM", "NATURAL", "NCHAR_STRING", "NE", "NEG",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_WRITE_TO_BINLOG", "NTILE_SYM",
  "NULL_SYM", "NUM", "NUMERIC_SYM", "NTH_VALUE_SYM", "ON", "OPTIMIZE",
  "OPTIONALLY", "ORACLE_CONCAT_SYM", "OR2_SYM", "ORDER_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARAM_MARKER",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PERCENT_ORACLE_SYM",
  "PERCENT_RANK_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "POSITION_SYM", "PRECISION", "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE",
  "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM", "READS_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM", "REF_SYSTEM_ID_SYM",
  "REFERENCES", "REGEXP", "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REPLACE",
  "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM",
  "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE", "RIGHT", "ROWS_SYM",
  "ROWTYPE_ORACLE_SYM", "ROW_NUMBER_SYM", "SECOND_MICROSECOND_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERVER_OPTIONS", "SET",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SIGNAL_SYM", "SMALLINT",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_BIG_RESULT", "SQL_SMALL_RESULT", "SQL_SYM",
  "SSL_SYM", "STARTING", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "TEXT_STRING", "THEN_SYM", "TINYBLOB", "TINYINT",
  "TINYTEXT", "TO_SYM", "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "ULONGLONG_NUM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM",
  "WITH_SYSTEM_SYM", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "IMPOSSIBLE_ACTION", "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM",
  "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "ROWTYPE_MARIADB_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM", "AFTER_SYM",
  "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM", "ANY_SYM",
  "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM", "CHECKSUM_SYM",
  "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOB_MARIADB_SYM",
  "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATION_SYM",
  "COLON_ORACLE_SYM", "COLUMNS", "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM",
  "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPORT_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM",
  "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LINESTRING", "LIST_SYM", "LOCAL_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONTH_SYM",
  "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM",
  "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NCHAR_SYM", "NEW_SYM", "NEXT_SYM", "NEXTVAL_SYM", "NOCACHE_SYM",
  "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOTFOUND_SYM", "NO_SYM",
  "NOMAXVALUE_SYM", "NOMINVALUE_SYM", "NO_WAIT_SYM", "NOWAIT_SYM",
  "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM", "NVARCHAR_SYM", "OF_SYM",
  "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM", "ONLY_SYM", "ONLINE_SYM",
  "OPEN_SYM", "OPTIONS_SYM", "OPTION", "OWNER_SYM", "PACK_KEYS_SYM",
  "PAGE_SYM", "PARSER_SYM", "PARTIAL", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD_SYM", "PERIOD_SYM", "PERSISTENT_SYM",
  "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM", "STOP_SYM",
  "STORAGE_SYM", "STORED_SYM", "STRING_SYM", "SUBCLASS_ORIGIN_SYM",
  "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM", "SYSTEM",
  "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TEXT_SYM", "THAN_SYM",
  "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TRANSACTION_SYM", "TRANSACTIONAL_SYM", "TRIGGERS_SYM", "TRIM_ORACLE",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALUE_SYM",
  "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VIRTUAL_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN",
  "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XML_SYM", "YEAR_SYM", "PREC_BELOW_ESCAPE", "CONDITIONLESS_JOIN",
  "ON_SYM", "PREC_BELOW_NOT", "'='", "'>'", "'<'", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'.'", "'@'", "$accept", "query", "$@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_var_list", "execute_var_ident",
  "help", "$@6", "change", "$@7", "master_defs", "master_def",
  "ignore_server_id_list", "ignore_server_id", "do_domain_id_list",
  "do_domain_id", "ignore_domain_id_list", "ignore_domain_id",
  "master_file_def", "optional_connection_name", "connection_name",
  "create", "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15",
  "$@16", "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23", "$@24",
  "$@25", "$@26", "package_implementation_executable_section",
  "package_implementation_declare_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2", "package_routine_lex",
  "package_specification_function", "$@27",
  "package_specification_procedure", "$@28",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@29",
  "package_implementation_procedure_body", "$@30",
  "package_implementation_item_declaration",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "create_function_tail", "opt_sequence", "sequence_defs", "sequence_def",
  "server_def", "$@31", "server_options_list", "server_option",
  "event_tail", "$@32", "ev_schedule_time", "$@33", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@34", "clear_privileges", "sp_name",
  "opt_sp_name", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "create_package_chistic", "create_package_chistics",
  "opt_create_package_chistics", "opt_create_package_chistics_init",
  "$@35", "sp_c_chistic", "sp_suid", "call", "$@36", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "sp_fdparams",
  "sp_param_name", "sp_param_name_and_type", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_parenthesized_fdparam_list", "$@37", "sp_parenthesized_pdparam_list",
  "$@38", "sp_no_param", "opt_sp_parenthesized_fdparam_list",
  "opt_sp_parenthesized_pdparam_list", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_proc_stmts1_implicit_block", "$@39", "opt_sp_decl_body_list",
  "sp_decl_body_list", "$@40", "sp_decl_non_handler_list",
  "sp_decl_handler_list", "opt_sp_decl_handler_list",
  "optionally_qualified_column_ident", "row_field_name",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_vars", "sp_decl_non_handler",
  "$@41", "sp_decl_handler", "$@42",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@43", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_opt_default", "sp_proc_stmt", "sp_labelable_stmt",
  "sp_proc_stmt_compound_ok", "sp_proc_stmt_if", "$@44", "sp_statement",
  "$@45", "$@46", "sp_proc_stmt_statement", "$@47", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@48", "reset_lex_expr", "$@49",
  "sp_proc_stmt_exit_oracle", "sp_proc_stmt_continue_oracle",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "remember_lex", "assignment_source_lex", "assignment_source_expr",
  "$@50", "for_loop_bound_expr", "$@51", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch", "sp_proc_stmt_close",
  "sp_fetch_list", "sp_if", "$@52", "$@53", "$@54", "sp_elseifs",
  "case_stmt_specification", "$@55", "case_stmt_body", "$@56", "$@57",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@58", "$@59", "searched_when_clause", "$@60",
  "$@61", "else_clause_opt", "sp_opt_label", "sp_block_label",
  "sp_labeled_block", "$@62", "$@63", "$@64", "opt_not_atomic",
  "sp_unlabeled_block", "$@65", "$@66", "$@67", "sp_instr_addr", "sp_body",
  "$@68", "$@69", "$@70", "sp_block_statements_and_exceptions", "$@71",
  "opt_exception_clause", "exception_handlers", "exception_handler",
  "$@72", "opt_sp_for_loop_direction", "sp_for_loop_index_and_bounds",
  "sp_for_loop_bounds", "loop_body", "while_body", "$@73", "repeat_body",
  "$@74", "pop_sp_loop_label", "sp_labeled_control", "$@75", "$@76",
  "$@77", "$@78", "$@79", "$@80", "sp_unlabeled_control", "$@81", "$@82",
  "$@83", "$@84", "$@85", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@86", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@87", "$@88", "$@89", "create_like", "opt_create_select",
  "create_select_query_expression", "$@90", "$@91", "$@92",
  "opt_create_partitioning", "opt_partitioning", "partitioning", "$@93",
  "have_partitioning", "partition_entry", "$@94", "partition", "$@95",
  "part_type_def", "$@96", "$@97", "$@98", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@99", "$@100", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@101", "part_name",
  "opt_part_values", "$@102", "$@103", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@104", "$@105",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@106", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "opt_versioning_rotation", "opt_versioning_interval_start",
  "create_select_query_specification", "create_select_part2", "$@107",
  "create_select_part3", "create_select_part3_union_not_ready",
  "create_select_part4", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option",
  "opt_if_not_exists_table_element", "opt_if_not_exists",
  "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@108", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list", "field_list",
  "field_list_item", "column_def", "key_def", "$@109", "$@110", "$@111",
  "$@112", "$@113", "$@114", "$@115", "constraint_def",
  "period_for_system_time", "opt_check_constraint", "check_constraint",
  "opt_constraint_no_id", "opt_constraint", "constraint", "field_spec",
  "@116", "field_type_or_serial", "$@117", "$@118", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@119", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@120", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "sp_param_field_type", "field_type_numeric",
  "opt_binary_and_compression", "field_type_string",
  "sp_param_field_type_string", "field_type_temporal", "field_type_lob",
  "field_type_misc", "spatial_type", "char", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "srid_option", "float_options",
  "precision", "field_options", "field_length", "opt_field_length",
  "opt_field_length_default_1",
  "opt_field_length_default_sp_param_varchar",
  "opt_field_length_default_sp_param_char", "opt_precision",
  "attribute_list", "attribute", "opt_compression_method",
  "opt_compressed", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "type_with_opt_collate",
  "sp_param_type_with_opt_collate", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "opt_binary", "binary", "opt_bin_mod",
  "ws_nweights", "$@121", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "opt_unique", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "string_list",
  "alter", "$@122", "$@123", "$@124", "$@125", "$@126", "$@127", "$@128",
  "$@129", "$@130", "$@131", "$@132", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@133", "$@134", "$@135", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@136",
  "add_part_extra", "reorg_partition_rule", "$@137", "reorg_parts_rule",
  "$@138", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "opt_index_lock_algorithm",
  "alter_algorithm_option", "alter_lock_option", "opt_column",
  "opt_ignore", "alter_options", "$@139", "alter_options_part2",
  "alter_option_list", "alter_option", "opt_restrict", "opt_place",
  "opt_to", "slave", "$@140", "$@141", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_thread_opts", "$@142",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "$@143", "opt_checksum_type",
  "repair_table_or_view", "$@144", "repair", "$@145", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "opt_view_repair_type", "analyze",
  "$@146", "analyze_table_list", "analyze_table_elem_spec",
  "opt_persistent_stat_clause", "persistent_stat_spec",
  "persistent_column_stat_spec", "$@147", "persistent_index_stat_spec",
  "$@148", "table_column_list", "table_index_list", "table_index_name",
  "binlog_base64_event", "check_view_or_table", "$@149", "check", "$@150",
  "opt_mi_check_type", "mi_check_types", "mi_check_type",
  "opt_view_check_type", "optimize", "$@151", "opt_no_write_to_binlog",
  "rename", "$@152", "rename_list", "table_to_table_list",
  "table_to_table", "keycache", "$@153", "keycache_list_or_parts",
  "keycache_list", "assign_to_keycache", "assign_to_keycache_parts",
  "key_cache_name", "preload", "$@154", "preload_list_or_parts",
  "preload_list", "preload_keys", "preload_keys_parts", "adm_partition",
  "$@155", "cache_keys_spec", "$@156", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "union_list_part2",
  "select_paren", "$@157", "$@158",
  "select_parent_union_query_term_proper", "select_paren_union_query_term",
  "$@159", "select_parent_view_proper", "select_paren_view", "$@160",
  "select_paren_derived", "$@161", "$@162", "select_init3", "$@163",
  "select_init3_union_query_term", "$@164", "select_init3_view", "$@165",
  "select_part3", "select_part3_union_query_term", "select_part3_view",
  "select_part3_union_not_ready", "select_part3_union_not_ready_noproc",
  "select_options_and_item_list", "$@166", "table_expression",
  "opt_table_expression", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "opt_select_lock_type", "select_item_list",
  "select_item", "remember_tok_start", "remember_tok_end", "remember_name",
  "remember_end", "remember_end_opt", "select_alias",
  "opt_default_time_precision", "opt_time_precision", "optional_braces",
  "expr", "bool_pri", "predicate", "bit_expr", "or", "and", "not", "not2",
  "comp_op", "all_or_any", "opt_dyncol_type", "dyncol_type",
  "numeric_dyncol_type", "temporal_dyncol_type", "string_dyncol_type",
  "$@167", "dyncall_create_element", "dyncall_create_list",
  "plsql_cursor_attr", "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@168", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@169", "$@170", "$@171",
  "window_func_expr", "window_func", "simple_window_func",
  "inverse_distribution_function", "percentile_function", "$@172",
  "inverse_distribution_function_def", "order_by_single_element_list",
  "window_name", "variable", "$@173", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "opt_glimit_clause", "glimit_clause_init", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@174", "cast_type", "$@175", "$@176",
  "$@177", "cast_type_numeric", "cast_type_temporal", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "when_list",
  "when_list_opt_else", "decode_when_list_oracle", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@178", "$@179", "$@180", "$@181", "$@182", "$@183", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident", "$@184", "table_primary_derived",
  "select_derived_union", "$@185", "union_list_derived_part2", "$@186",
  "union_list_derived", "select_init2_derived", "select_part2_derived",
  "$@187", "select_derived", "derived_simple_table",
  "derived_query_specification", "derived_table_value_constructor",
  "$@188", "select_derived2", "$@189", "$@190", "get_select_lex",
  "get_select_lex_derived", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@191",
  "$@192", "index_hints_list", "opt_index_hints_list", "$@193",
  "opt_key_definition", "$@194", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "opt_where_clause", "$@195", "opt_having_clause", "$@196", "opt_escape",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@197",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@198", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause_init", "limit_clause", "limit_options", "limit_option",
  "limit_rows_option", "delete_limit_clause", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "longlong_num", "ulonglong_num",
  "real_ulonglong_num", "dec_num_error", "dec_num", "choice", "bool",
  "procedure_clause", "$@199", "procedure_list", "procedure_list2",
  "procedure_item", "select_var_list_init", "$@200", "select_var_list",
  "select_var_ident", "select_outvar", "into", "into_destination", "$@201",
  "$@202", "do", "$@203", "drop", "$@204", "$@205", "$@206", "table_list",
  "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "opt_if_exists_table_element",
  "opt_if_exists", "opt_temporary", "insert", "$@207", "$@208", "replace",
  "$@209", "$@210", "insert_lock_option", "replace_lock_option", "insert2",
  "insert_table", "insert_field_spec", "$@211", "fields", "insert_values",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "opt_with", "opt_by", "no_braces", "$@212", "no_braces_with_names",
  "$@213", "opt_values", "opt_values_with_names", "values",
  "values_with_names", "expr_or_default", "opt_insert_update", "$@214",
  "$@215", "update", "$@216", "$@217", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "$@218", "opt_delete_system_time", "delete_part2", "delete_single_table",
  "single_multi", "$@219", "$@220", "opt_select_expressions",
  "table_wild_list", "table_wild_one", "opt_wild", "opt_delete_options",
  "opt_delete_option", "truncate", "$@221", "$@222",
  "opt_truncate_table_storage_clause", "opt_table_sym", "opt_profile_defs",
  "profile_defs", "profile_def", "opt_profile_args", "show", "$@223",
  "show_param", "$@224", "$@225", "show_engine_param", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "from_or_in", "binlog_in",
  "binlog_from", "wild_and_where", "describe", "$@226", "$@227",
  "explainable_command", "describe_command", "analyze_stmt_command",
  "opt_extended_describe", "opt_format_json", "opt_describe_column",
  "flush", "$@228", "flush_options", "$@229", "opt_flush_lock",
  "flush_lock", "$@230", "flush_options_list", "flush_option",
  "opt_table_list", "opt_delete_gtid_domain", "delete_domain_id_list",
  "delete_domain_id", "optional_flush_tables_arguments", "reset", "$@231",
  "reset_options", "reset_option", "$@232", "$@233", "slave_reset_options",
  "master_reset_options", "purge", "$@234", "purge_options",
  "purge_option", "kill", "$@235", "kill_type", "kill_option", "kill_expr",
  "shutdown", "use", "load", "$@236", "$@237", "$@238", "$@239",
  "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "text_literal",
  "text_string", "hex_or_bin_String", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "opt_with_clause",
  "with_clause", "$@240", "opt_recursive", "with_list",
  "with_list_element", "$@241", "opt_with_column_list", "with_column_list",
  "query_name", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias", "ident_set_usual_case",
  "ident_sysvar_name", "ident", "ident_directly_assignable", "label_ident",
  "labels_declaration_oracle", "label_declaration_oracle", "ident_or_text",
  "user_maybe_role", "user_or_role", "user", "keyword_table_alias",
  "keyword_ident", "keyword_label", "keyword_sysvar_name",
  "keyword_sp_decl", "keyword_set_usual_case",
  "keyword_directly_assignable", "keyword_sp_var_not_label",
  "keyword_sp_head", "keyword_verb_clause", "keyword_set_special_case",
  "keyword_sp_block_section", "keyword_sysvar_type", "keyword_data_type",
  "keyword_sp_var_and_label", "set", "$@242", "$@243", "$@244",
  "set_assign", "$@245", "$@246", "$@247",
  "set_stmt_option_value_following_option_type_list",
  "start_option_value_list", "$@248", "$@249", "$@250",
  "start_option_value_list_following_option_type", "$@251",
  "option_value_list_continued", "option_value_list", "$@252", "$@253",
  "option_value", "$@254", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "transaction_characteristics",
  "transaction_access_mode", "isolation_level",
  "transaction_access_mode_types", "isolation_types", "opt_for_user",
  "text_or_password", "set_expr_or_default", "lock", "$@255",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@256", "handler", "$@257",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "$@258", "handler_rkey_mode", "revoke", "revoke_command",
  "admin_option_for_role", "grant", "grant_command", "opt_with_admin",
  "opt_with_admin_option", "role_list", "current_role", "grant_role",
  "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@259", "$@260", "$@261",
  "$@262", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@263", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_clause", "union_list",
  "$@264", "union_list_view", "$@265", "union_order_or_limit", "$@266",
  "order_or_limit", "union_head_non_top", "union_option", "simple_table",
  "table_value_constructor", "$@267", "query_specification",
  "query_term_union_not_ready", "query_term_union_ready",
  "query_expression_body", "subselect", "subselect_start", "subselect_end",
  "opt_query_expression_options", "query_expression_option_list",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@268", "query_expression_body_view",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@269", "$@270",
  "$@271", "$@272", "$@273", "udf_tail", "sf_return_type", "$@274",
  "sf_tail", "$@275", "$@276", "sp_tail", "$@277", "$@278",
  "sf_tail_standalone", "sp_tail_standalone",
  "opt_package_routine_end_name", "sp_tail_is", "xa", "opt_format_xid",
  "xid", "begin_or_start", "opt_join_or_resume", "opt_one_phase",
  "opt_suspend", "$@279", "opt_migrate", "install", "uninstall",
  "keep_gcc_happy", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,    61,    62,    60,
     124,    38,    45,    43,    42,    47,    37,    94,   126,  1002,
    1003,  1004,    40,    41,    44,    33,   123,   125,    59,    46,
      64
};
# endif

#define YYPACT_NINF -5488

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-5488)))

#define YYTABLE_NINF -3498

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
   38981,  4670,  1384, 85205, -5488,    59, -5488,  1025, -5488, -5488,
   -5488, -5488,  4539, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,   174,   106, -5488,  1220, -5488, -5488, -5488, 80767,   -32,
    1170, -5488, -5488, 82035, -5488,   -41, -5488, 82035, -5488, -5488,
   85205, -5488,  1281, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488,  2300,   398, -5488, -5488, -5488, -5488, -5488, -5488,
    1394, -5488, -5488, -5488, -5488, -5488,   106, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, 85205, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488,   781, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  1346,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, 85839, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,   607,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
     210, -5488, -5488, 69964, -5488, -5488,   604, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
    1843, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, 85205, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  1220, -5488, -5488,  2045, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,   781, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, 85205, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488,   251, -5488, -5488,   258, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488,  1954, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  3758, -5488, -5488,  2091,  1985, -5488, -5488,  1515, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488,  3279, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, 70598,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,   111, -5488,
   -5488, -5488,   262, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, 85205,  2047, 85205,  1695,
    1755, 85205,  2374,  2493, 81401, 85205, -5488,  1465,   117, -5488,
   -5488,  2241, -5488,  1801, -5488,   106,  2570, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488,  1893, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488,  2464,  2582,   873,  2550,  2728,
   85205, 50881,  1478,  2493,  2761,  1437,  2493,  2493,  2493,  2493,
    2798,  2493,  2493, 85205, -5488,  2493,  2493,  1194, 89643, 36188,
   -5488,  1685,   922,  2787, -5488, -5488, -5488, -5488, -5488, -5488,
    6791,   106, 22988,  2895,   679,  5593,  2264, -5488,  2769, -5488,
   -5488, 85205, -5488, -5488,  6791,  1251, -5488,  2769, 36925, -5488,
   34745,  7738,  2769,   106,  2857, -5488, 22988, -5488, -5488,   781,
   -5488, -5488, -5488,  2686, -5488, 81401, -5488, -5488, -5488,  2273,
   -5488,  3057, 22988,   198, -5488, -5488, -5488,  2675, 85205,  2515,
    1205,  1468, 81401, 85205,  2582,  3026, -5488,  2085,   450, -5488,
    2462,  2582,  2178,  2474,  2582,  2897, 85205,  2582, -5488, -5488,
    2472,  2472,  2472,  2695,  2472, -5488,  2472, -5488, -5488,  2373,
   85205,  3048, -5488, -5488, -5488,  3048,  3048,  2519,  3047,  3066,
    3073,  1103,  2654,  1678,  2752,  2241,   489,  1801,   588, -5488,
   -5488, -5488,  2427, -5488, -5488,   300, -5488,  2850, -5488, 85205,
   -5488,  2496, -5488, -5488,  1667, 51579, -5488, 85205, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488,  1263, -5488,  2947,   272,
   -5488,  2558,  2810,  2502, -5488,  2989, 81401, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,  2485, 85205, -5488,  3187, 22988,  2464,
   -5488,  2994, -5488, -5488, -5488, -5488, 69964, -5488, 85205, -5488,
    3263, -5488, -5488, 89643, -5488, -5488,  1324, -5488, 53655,  1381,
   44663, -5488,  2506,  2517,  2815, -5488,  2524,  1810,  1850, -5488,
    1886, -5488, -5488,  1959,  1968,  1973, -5488, -5488,  3202, -5488,
   -5488, 73149,   687, 85205,  3249, 85205,  2493, 85205, 85205, 85205,
   85205, 85205, 85205, -5488, 81401,  2664, -5488, -5488,  2493,  2493,
   -5488,  3251,  2801,  2780,  2257,  2621,  2962, -5488,  2859, -5488,
   -5488,  2739, -5488, -5488,   208, -5488, -5488, -5488,   115,   116,
     213,   312,  3277,   365,    60,   370,   422, -5488, -5488, -5488,
    3189,  3298,  2708, -5488,  3087, 22988, -5488, -5488, -5488,  3365,
   -5488, -5488,  1561,  3161,   363, 69964, 90277, 73793, 91195, 91195,
   91195, -5488, -5488,   207, 91195, 85205, 90736, 85205,  7871,  2747,
   -5488, -5488, -5488, 40453, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, 85205, -5488, -5488, -5488,   376, -5488, -5488, -5488,
   -5488, -5488,  8668, -5488, -5488, 27512, -5488,  2745,  2755,  2758,
   19218,  2763,  2771,  2776,  2779,  2782,  2621,  2621,  2621,  2795,
    2806,  2836,  2839, -5488,  2849,  2856,  2893,  2901, -5488,  2914,
   -5488,  2919,  2922,  2925, -5488, -5488,   145,   331,  2928,  2934,
   23742,  2940, -5488, 65526,  2946,  2955,  2961,  2964, -5488, -5488,
   22988,  2795,  2970, -5488, -5488,  2973, -5488,  2982,  2984,  2992,
    2996,  2998,  3013,  3020,  3030,  3032,  3366,  3034,  3054,  3056,
    3063,  2795, -5488,  3065, -5488, -5488,  2489,  2621,  2795,  2795,
    3067,  3086,  3091,  3098,  3102,  3104,  3112,  3121, 82669,  3126,
    3131,  3133,  3142,  3146,  3148,  3156,   428,  3162,  3164,  3166,
    3174,  3177,  3179,  3182,  3192,  3208,  3210,  3235,  3241,  3252,
    3261,  3268,  3270,  2867,  3274,  3281,  3282,  3285,  3290,  2913,
    3300,  3303,  3305,  3310,  3312,  3324,  3327,   503,  3331,  3335,
     552,  3342,  3347,  3353,  3358,  3361,  3363,  3364,  3367, 28266,
   29020, 27512, 22988, -5488, 85205, 86473, -5488,  3280,  1321, -5488,
    4451, 27512, -5488, -5488, -5488,  3528, -5488,  3410, -5488, -5488,
   -5488, -5488, -5488, -5488,  3462, -5488,  3465, -5488, -5488,  3481,
    3017, -5488,  3548, -5488, -5488, -5488, -5488, -5488,  3021,  3369,
    3642,  3686, -5488, -5488, -5488, -5488,  3452, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
    3222,  3294, -5488,  3548, -5488, -5488, 52272, 69964,  5690, -5488,
   -5488, -5488, 66160, -5488, -5488,  2801,  3485,  3948, -5488,  4040,
   -5488,  3964, 57067,  3908,  1683,   448,  3383,   551,   578, 43936,
     224, 78231,   665,   314,  3388, 61722, 46822,  3391,   131,  3392,
   -5488,  3395,  3396,  3397,  3399,  3400,  3403,  3406, -5488, -5488,
   -5488,  3490,  3394,  3509,  1925, -5488, -5488,   356,   875,  3504,
   -5488,  3759, -5488,  1925, -5488, 37585,  4044,  2057, -5488,   976,
   -5488,  4090, -5488, -5488,  3512,  3497,  3525, -5488,  3362, -5488,
    2582, -5488,  1284, -5488,  4044,  1925,  2057, -5488,  3692,  3777,
    1531,  4102, -5488,  -105, -5488, -5488,  3365, -5488,  2371, 85205,
   -5488, -5488, -5488,  3432, 69964, 69964, 85205,   984,   177,  3280,
    3436, -5488, 22988,  3920,  6347, 41156, -5488,   237, -5488, -5488,
   85205, -5488,  3544, -5488, -5488,  1056, -5488,  3866, -5488,  3449,
   -5488, 87107,   177, -5488, -5488,  1461,  3840, -5488,  3453, -5488,
   -5488, -5488, -5488, 69964, -5488, -5488, -5488, -5488, -5488, -5488,
    3454, -5488, -5488,  3657,  3540, -5488,  3487, -5488, -5488,   602,
    4157, -5488,  2300, 85205, -5488, -5488,  3048, -5488,  3048,  3048,
    3048,  3048,  3048,  2457, -5488, -5488, -5488,  3508,  3793, -5488,
   -5488,  2989,  2570, 48840,  2841,  3578,  3484,   300,  3477,  3961,
    4019, -5488, -5488, -5488,  2717, -5488, -5488,  1904, 16956,  4017,
    4191,  3863, -5488, -5488, -5488, -5488,  2621,  3488, -5488, -5488,
   -5488, -5488, -5488,  4249, -5488, 69964,  3693,  3872,  3872,  3872,
    4259, -5488, -5488, -5488, 69964, -5488, -5488, -5488,   272, -5488,
   51579,  2021, 85205, 69964,  3538, -5488, 69964, 22988, -5488, -5488,
   22988, -5488,  3861,  3280, -5488, -5488, 69964,  2270, -5488, -5488,
   -5488,  4249,  3872, -5488,  3942,  1381,  3513,  3514, -5488,  3518,
    3518,  3518, -5488,  3522,  4085,  3522, -5488,  3912,  2098,  1203,
    3912, -5488,  2098,  3522, -5488,  3526, -5488,  3912, -5488,  2098,
    3518, -5488,  3518, -5488, -5488,  2098,  3518, -5488,  3529,  3522,
   -5488, -5488,  3912, -5488, -5488, -5488, -5488,  1253,  2079,  3522,
   -5488, -5488, -5488,  3518,  3531,  3518,  3518,  3518,  3518, -5488,
    3518,  4094,  3534,  4256, -5488, -5488, -5488, -5488, -5488,  3522,
     108,  3518,  3518,  3518,  3518,  3532,   445, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,  4208, 85205,  4212, -5488, 69964,  4292,
   69964,  4012, -5488,  3545, -5488,  3539, -5488, -5488, -5488,  4134,
   85205, -5488, -5488, -5488, -5488,  3543,  2664, 52964, -5488,  1643,
    3901, 52272, 69964, -5488, -5488,  4170,  3689, -5488, -5488, -5488,
   -5488, -5488, -5488,  3633, -5488, -5488,  3560, -5488, -5488, -5488,
    3563, -5488,  3563,  3563, -5488, -5488,  3563, 52272, -5488, -5488,
   51579,  2036,  6167,  4215,  2746, -5488, 66160, -5488,  3864, 24496,
   -5488, -5488, -5488,  3835,   311,  1644, -5488, -5488, -5488, -5488,
   -5488,  4036, -5488, -5488, -5488, -5488, -5488, 85205,  4241,  4218,
   -5488, -5488, -5488,  4101, -5488, -5488,  4049,  3583,  4199,  3582,
   -5488, -5488, -5488,   263, 22988,  3588, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, 69964,  3592, 27512, 27512, -5488,
    4356,  4356,  4356, 22988,  3293,  1424,  3953, 22988, 22988, 22988,
    2754,  3603, -5488, -5488, -5488,   289, -5488,  3622, 22988, 22988,
   66794,  3623, -5488,  3496, 22988,  4299, 22988, 22988, 22988, 22988,
   22988,  5323, 22988, -5488, -5488, 86473, 66794,  4065,  3624, -5488,
    3621, -5488,  2887, 22988,  2890, 22988, -5488, -5488, 22988, 22988,
    3629, 22988, 22988, 29774,  3632, 22988, 22988, 22988,  3634,  3762,
    4356,  4356, 22988,  2935, -5488, 18464, -5488, -5488, -5488, -5488,
   -5488,  4356,  4356, 22988, 22988,  2956, 22988, 22988, 22988, -5488,
    3635, 22988, 22988, 22988, 22988, 22988, 22988, 22988, -5488, 22988,
   22988, 22988, 22988, 22988, 22988,  1586, 22988, 22988, 69964, 22988,
   22988, 22988, 22988, 22988, 22988, 22988,  4306, 69964, 22988, 22988,
   22988, 22988,  4313, 22988, 22988, 22988,  3643, 22988, 69964, 22988,
   -5488, 22988,  3669,  3669, -5488, 22988, 18464, 22988,  3644, 67428,
   22988, 22988, 22988, 22988, 23742, -5488, 23742, -5488, -5488,  3647,
     345, -5488,  4115, 22988,  3645, 62356, -5488, -5488, -5488, -5488,
   22988, 22988, 22988, 29774, -5488,  1701, -5488, -5488, -5488, -5488,
   -5488, 17710, 29774, 29774,  3653, 29774, 29774, 29774, 29774, 29774,
   29774,  4281, 29774, 29774, 30528, 31282, 29774, 29774, 29774, 29774,
    2672, -5488, 81401, 27512, 71866,  3658,  4320, -5488, 86473, -5488,
    1979,   698,  1299,  5593, 32755, -5488,  3659, -5488,  4154,  3663,
   -5488,   -54, -5488, 69964, -5488, -5488, -5488,  4230,  3671,  4332,
   52272, 51579,  2443,  3672,   695,  3696, -5488, -5488, 52964, 85205,
   -5488, -5488, -5488, -5488, -5488,  4256, 22988, -5488, 52272, -5488,
    1523, 16956, -5488,  1273,    46,   131, -5488, -5488, -5488, -5488,
   -5488, 16956, 85205, 57744,  3697,  3781,  3702,  3048, 49482, 85205,
   69964, 85205, 85205, 85205, 69964, 52272, 69964, -5488, -5488, -5488,
    1157,  1925, 85205,  1925,  2057,  4333, -5488,  2060,  2060, -5488,
   -5488, -5488, 78865, -5488, -5488, -5488,  1925, 85205, 85205,  1925,
   51579, -5488,  2057,  2478, -5488,  3993,  3784, -5488, -5488, -5488,
    4035, -5488, -5488,  4379,  3710, -5488,  4056, -5488, -5488,  3809,
   -5488, -5488, 69964, -5488, -5488,  2057, -5488,  2057,  2057, 22988,
    1925,  1925,  1925,   710, -5488,  3718, -5488,  3722, -5488, -5488,
    4077,  3720,  4371,  3728, -5488, -5488,  4304,   859,  4268, -5488,
    4161, -5488,  4294, -5488, 22988,  3920,  3280, -5488, -5488,  4015,
   -5488,  4018,  4020,  4021, -5488, -5488, -5488, -5488,  4172,  4024,
   -5488,  2582,  4026, -5488, -5488,  3760, -5488, -5488, -5488, 32755,
   81401, -5488,  3761, -5488,  3779, -5488, -5488, -5488, 88375, -5488,
   87741, -5488,  2582, -5488, -5488, -5488, 69964,  4260, -5488,  2582,
    2085, 85205, -5488, -5488, -5488,  2156, -5488, -5488, -5488,  3871,
    2178, -5488, -5488,   -54,  2472,  3958, -5488, -5488, -5488, 81401,
   -5488, -5488, -5488, -5488, -5488,  4450, -5488, 52964, 51579, 81401,
   85205, 85205, 85205, 69964, 69964,  3048, 85205,  3048, -5488, -5488,
    3048, -5488,  3048,  3048,  3814, -5488, -5488, -5488, -5488,   199,
    1186,  4516, -5488,   502, -5488,  3083,   502,  4012,  4044, -5488,
    4452, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488,  3796,  3578, -5488, -5488, -5488,  3788, -5488,
    3790,  2850,  2841, -5488, -5488, -5488, -5488, -5488, -5488, 27512,
    2849, -5488,  3280, -5488, -5488, -5488,   254, -5488, -5488, -5488,
    1868,  4151,  3660, -5488, 81401,  3660,   -56,  1712, -5488,  3794,
    2582,  1101, -5488,  1101, -5488,   -54, -5488,  4093, -5488,  4096,
     133, -5488, -5488, -5488, -5488, -5488, 69964,  3791, -5488,  3979,
    3800,  3802,  3280,  3280, -5488,  6791,  4535,  4274,  5984,   164,
    3851, -5488, -5488, -5488, -5488, -5488, 69964, -5488, -5488,  2396,
    3585,  4291,  3811, -5488,  1381, -5488, -5488, -5488,  1905, -5488,
   -5488, -5488,  3912,  3912,  2652,  1144, -5488, -5488, -5488,  1144,
     131, -5488, -5488,   410, -5488, -5488, -5488, -5488,  1564, 48192,
    4557,  4203,  3908,  3912, -5488,  4286,  2098, -5488, -5488,  1144,
    2472, -5488, -5488,  3912, -5488, -5488, -5488,  2472,  1144, -5488,
    4289, -5488, -5488, -5488,  1144,  3912, 89643,   445,  2098, -5488,
   -5488,  2098,  1144,   101, 85205, 56390, -5488,  4372, -5488,  1564,
    4557,  2098,  3912,  1144,  4410, -5488,  1144, 22988, 22988, -5488,
   -5488, -5488,   391,  4230,  3897, -5488,  3825, -5488, -5488,   494,
   -5488,  4405, 85205,  4500, 74427, -5488, 69964, -5488, 85205,  1643,
    3831, -5488, -5488, -5488, -5488, -5488,   131, -5488,  3832,   200,
   69964, 69964,  6791, -5488,  3837, -5488, -5488, 85205, -5488, -5488,
   -5488, -5488,  4334,   119, 33397, 68062, -5488, 68062, 68062, -5488,
   -5488, -5488, -5488, -5488,    60, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, 50175,  3280, -5488, 69964, -5488,  4489,   307, -5488,
     189, 69964, -5488, -5488, 22988, -5488,  4484, 85205, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, 85205,  2485,  3280, 85205,
   50881, -5488, 89643,  6791,  6791, 22988,  1770, 22988, -5488,  3847,
   -5488,  3853,  3854,  3478,  4202, 22988, 22988, -5488,  3207,  1030,
     323, -5488,  3858,  3868, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488,  3860, -5488, -5488, -5488,   461,   477,  3862, -5488,
    3865, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  4530, -5488,   292, -5488, -5488,   303,   352,   591,   714,
     718,  3873,   771,  3635,  2227,  3867, 66794, 86473,  4356,  3869,
     397,  4356,  3870,   813,   440,  1020, -5488,   455,   509,  3212,
   -5488,  1096,  1161,  1166, -5488, -5488,  3875,  3878,   310,  4356,
    3879, 19972, 20726, 21480,  3570,  3880,  3882,  3883,  1204,   560,
    4356,  3884,  1221,  2269,  1261, 86473,  1227,  1594,  1352, -5488,
    2301,  1597,  1615,  1618,  1728,  1956,  2139,  1779,  1798,  1862,
    2494, -5488, -5488, -5488, -5488,  3885,  2147,  2150,  3886,  3889,
    2509,  2164,  2230,  2255,  2542,  2557,  2596, 69964,  3891,  2278,
    2290,  1871,  2617, 69964,  2305,  2326,  1884, -5488,  2367,  3887,
    1913,   367,  3893,  3903,  2393,  3910,  1941, -5488, 86473, 85205,
    3911,  3913,   373,   295,  1961,  2406,  5323,  5323, -5488, 22988,
    1081,   221, 86473,    46, -5488,  4397,  3389,  1990, -5488, -5488,
   -5488, -5488, -5488, -5488,   492, -5488,  3874, -5488,  3909,  3223,
    3877, 22988,  4344,  3877,   548,  4815,  1191,  1191, 29774,  3620,
    3604, 23742,   548, 23742,   548,  3877,  3877,  3877, -5488, 29774,
    3918, 29774, 29774, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
    4443,  3919,   671,  3925, -5488, -5488, -5488, -5488, -5488, -5488,
      54,  4323, -5488,  4113,   340, 22988,  2582, -5488,  3943,  4429,
    4430,  4435, -5488, -5488, -5488, -5488, 52272, 52272, 69964,  4438,
   22988, -5488,  1757,  3946, -5488, -5488,  4614, 52964,  4620, -5488,
    3952, 34039, 68062, 68062, 68062, 85205, 85205, 16956, 57067,  4625,
    4626,   131, -5488,  3280,   131, -5488,  3962,  3963, -5488, -5488,
    1823,  4231, -5488,  3965,  3966, -5488,  3957,  3959,  3975, 60452,
   22988, -5488,   131,  1273, -5488, -5488, -5488, -5488, -5488,  3968,
   85205, 85205, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  2582, 22988, 85205,  1925, -5488, -5488, -5488,  1925,  2582,
    4638, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  4309, -5488,
   82669,  4510,  1482, -5488,  3977, -5488, -5488, -5488, -5488, -5488,
    1925, -5488, -5488, -5488, -5488, -5488,  4150,  4044,  3362,  4333,
   -5488,  2057, 69964,  1925,  1925,  3280, -5488, -5488, -5488, -5488,
   85205,  4830,  4519, -5488,  3997, -5488, -5488, -5488, 69964, -5488,
    6791, 85205, 85205, -5488,  7587, -5488, 81401, 58421, 69964, -5488,
   -5488, -5488,  2808, -5488, -5488, -5488, -5488, -5488, -5488,  3280,
   -5488, 22234,  4693, -5488, -5488, -5488, -5488,  2582, -5488, -5488,
    5471, -5488, 69964, -5488, 64258, -5488, 64258,  2187, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
     181,   249,  1420,  4012, -5488, -5488, 69964,  1317,   189, -5488,
    4756, -5488, -5488, -5488, -5488, -5488,  4000, -5488,  4057, -5488,
   -5488, -5488,  4009, -5488,  4685, -5488, -5488,   265,   457,   133,
   -5488,   686,  4602,  4603, -5488, -5488, 85205, -5488, 85205, 85205,
   -5488,  3048, -5488, -5488,  3048, 69964,  3048, -5488, 85205, -5488,
   85205, -5488, 85205, -5488,  3048, -5488, -5488, -5488,  4520,  4520,
   -5488, 62990, -5488, -5488,  4504,  4660, -5488, 85205, -5488, -5488,
    2473, -5488,  4686, -5488, -5488,  4405, -5488,  4022, -5488, 22988,
   -5488,  4027,  4025, -5488, -5488, -5488, -5488, -5488, -5488,  2841,
    1082, 16956, -5488,   131,   131,  4248,  4545,  4550,  4158,  2582,
    4551,  4556,  4562, -5488, -5488, -5488,  2582,  2582, -5488, -5488,
     131, -5488,  1589, -5488, -5488, -5488, -5488,  4144,  1371, -5488,
     131,   131, -5488,  3185, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  1885, -5488, -5488,   243,  1449, 51579,  4507,  4635,  4050,
   -5488, 69964,  4721, -5488, -5488, 22988,  4554,  7559, -5488, -5488,
    4274, -5488,  4072,  4073,  4074,  4075,  4081,  4082,  4083,  4084,
    4086,  4087,  4088,  4091,  4092,  4095,  4097,  4099,  4100,  4103,
    4105,  4108,  4112,  4117,  4119,  4120,  4060, -5488, -5488,  4114,
   -5488, -5488, -5488, -5488,   131,   131,   131,   131, -5488,  4194,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  4343,  2959,
   85205,  4716,  4431,  4106,  4111,  4116,  4123, -5488, -5488,  2640,
    4574,  4600, -5488, -5488, -5488, -5488, 85205, -5488, -5488, -5488,
   -5488, -5488, -5488,   131, -5488, -5488, -5488, -5488,  2648, -5488,
   -5488,  2668, -5488, -5488, -5488, -5488,  7049, -5488,  2678, -5488,
   -5488, -5488, -5488, -5488,   445,   445,  4118, -5488, -5488, -5488,
    4135, -5488, -5488, -5488, -5488,  4557, -5488,  4124, -5488,  3280,
    3280, 72500, -5488, -5488, -5488, -5488,  2732, -5488, -5488,  1908,
   85205,  4601, 74427, -5488, 22988,  4752, -5488, -5488,   710, -5488,
    4122,   -54, -5488, -5488, 52964, -5488, 81401, 52272, -5488, -5488,
   -5488,  4132,  1770,  8407, -5488, -5488,  4826, -5488,  2682, -5488,
   51579,  4584, -5488, 68062,  4131, -5488,  4133,  4634,  4636,  4637,
    4641, -5488,  1757, -5488, -5488,  4146, -5488, -5488,  4304,  4520,
    4173,  4421,  4541, -5488, -5488, -5488,  3280, -5488, -5488,  4796,
   -5488, -5488, -5488,  2688,  4017, -5488, -5488, -5488,  4509, -5488,
   91195, 91195, 91195, -5488,  1965, -5488, 22988, -5488, -5488, 22988,
   -5488,  3280,  3888,  4209, 48192, -5488, 48192,  4209, 22988, -5488,
    4156, -5488,  4803,  4809, -5488, -5488, 22988, -5488, 22988, -5488,
   22988, -5488, 22988, 22988, 22988, 22988, 22988, 22988, -5488, 29774,
   -5488,  4162,  4171, -5488, -5488,  4174, -5488, 22988, -5488, 22988,
   -5488, -5488, 22988, 22988, 22988, 22988, -5488, -5488, 22988, 22988,
    4175, -5488, 22988,  3902, 22988,  4211, 22988,  4221, 22988, -5488,
   -5488, -5488, 25250, -5488,  4176, -5488, -5488, -5488, -5488, -5488,
   22988, -5488, 22988, -5488, 22988, 22988, 22988, 22988, 22988, -5488,
   -5488, 22988, 22988, 22988, -5488, 22988, -5488,  4746, 22988, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, 22988, -5488, -5488, -5488, -5488, 22988, -5488,   605, 26004,
   -5488, 22988, 22988, 22988, -5488, -5488, 22988,  4166,  4167, -5488,
   85205, -5488, 22988,  2565,  2966,   189,  4177, 22988, -5488,  4189,
    4190,  3436, -5488,   386,  2726, -5488, -5488, -5488,  2138, -5488,
   -5488, -5488, 89009, 22988, -5488, -5488, -5488, -5488, -5488, 29774,
     434,  4181, 27512, -5488,  4815,  5323,  5323,  3256, 22988,  4344,
    4815, 85205,  4921,  4186, -5488, 22988, 86473, 22988,  4188,  4192,
   -5488,  4197, -5488, -5488, -5488,  4200, -5488,  2748,  2966,  4284,
    4646, -5488,  3280, -5488, 32755,  4702, -5488, -5488, 69964,  3239,
   -5488,  3484,  3484, 64892, -5488, -5488, -5488,  4742, 85205,  4407,
   -5488, 52272, 51579, 68062,  4881,  4885,  4886,  4888,   131,   131,
   -5488, -5488, 39717, 52272, 16956, -5488,  4724,  4725, -5488, -5488,
    1315,  4506,  4782, -5488, -5488, -5488,  4220, -5488, -5488, -5488,
   -5488,  1065, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
    3280, 16956, -5488,  3697,  4233, 35451,  1095, -5488, -5488, -5488,
    3280, -5488, -5488, -5488, -5488,  4242, -5488, 80133, -5488,  4575,
   80133, 80133, 86473, -5488, -5488,  4837, -5488, -5488,  4638,  4012,
    2057, -5488, -5488,  2562,  4250,  4890,  4891, -5488,  4829,  3183,
    4829, -5488, -5488,  4250, 67428,   710,  4230,  8409, -5488,  2702,
   -5488,  5009,  4253,  4714, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,  4262, -5488, 16956,  2849, -5488,  4261,
   -5488,  3280, -5488,  4279, -5488, -5488, -5488,  4132,  1337,  4280,
    4264, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  4044,   168,
   -5488, -5488, -5488, -5488, -5488,  1475, -5488, -5488, -5488,  2156,
    3288, -5488,   495,   189,  4502, -5488, -5488,   267,  4720, -5488,
    4507,  4945,  1707,  1707,  4861, 69964, 69964,  6063,  4144, -5488,
     501,  1785, -5488, -5488, -5488, -5488, 85205, -5488, 85205, -5488,
   -5488,   764, -5488, 69964, -5488, -5488, -5488, 81401,  4277, -5488,
   -5488,  4269, -5488, 22988,   -54,  4392, -5488, -5488, -5488,  2138,
    5017,  4941,  4044, -5488,  3280, -5488,  4276, 22234,  4290,  4285,
   -5488, -5488,   502, -5488,  4293, -5488,  2850, -5488, 56390, 47543,
   -5488,  4662,  4668,  2031, -5488, -5488, -5488, -5488, -5488, -5488,
    3467,  1712, -5488,   131,   131, -5488,   245,   131, -5488, -5488,
     256, -5488, -5488,   587,   486,  4144, -5488,  2582,  2582,  2582,
    2582,   189,  2582,  2582,  2704, -5488,  3467,  3467,  1101, -5488,
    1188, -5488, -5488, -5488, -5488,  6256,   925, -5488, -5488, 81401,
   -5488,  4799,  4804, -5488,  4805, -5488, -5488,   217, -5488,  2972,
   -5488,    79, -5488,  4851, 85205,  5060,  4050, -5488,  1418,  3280,
   -5488, 22988, -5488,  4312,  4314,   189,  4315,   189,   189,  2582,
    2582,  4242,  2582,   189,  2582,  2582,  2582,  2582,  2582,  2582,
    2582,   189,  2582,  1739,  2819,  2582,   189,  5984, -5488,  2582,
    2966,  3467,  3467,  3585, -5488,  4976,   131, -5488,  3744, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  2720, 45390,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  4905, -5488,
   -5488, -5488, -5488,  1564,  2472,  1564, -5488, -5488, 89643, -5488,
   -5488, 85205,  4906, -5488, -5488, -5488, -5488,  4237, -5488, -5488,
   -5488,  4640, -5488, -5488, -5488, -5488, -5488, -5488,   778, -5488,
   29774, -5488, -5488, -5488,  4311,   710,  1106,  3280, 79499,  4862,
    4012,  4327, -5488, -5488, -5488, -5488, -5488, -5488,  1982,  4939,
   -5488,  4339, 22988, -5488, -5488, 85205,   475,  4534,  4823,  4351,
   75061, 51579, 51579, 51579, 51579, -5488,  4931, 69964, -5488,  4995,
   -5488, -5488, -5488, -5488, -5488, 22988, -5488, -5488,  2485,  4776,
   91195,  4964, -5488, -5488, -5488, -5488, -5488, 22988,  3280,  3280,
   22988,  3518,  3518,  3522,  3532, -5488, -5488,  4989,  3518,  3518,
   -5488,  3518,  4991,  3518,  3518,  4352, -5488, -5488,  4354,  4355,
    4357,  3436, -5488, 22988, 22988,  2421,   175,  2437,  2452,  2024,
    2053,   447, -5488,  2467,  4424, -5488, -5488,  2504,  2513,  2531,
    2555,  2065,  2561,   257,   498, -5488,  3280, 22988,  3280, 22988,
    3280, 22988,  3280, 23742,  2598, -5488,  2733,  3991, -5488,  2750,
    4369,  2651,   526,  2665,  2073,  2759,   533,  2670,  2673,  2706,
    2768, -5488,  2630,  4946,  2773, 23742,  2718,  2797,  2093,  2097,
    2800, 86473, 85205,  4358,  2826,  4359,  4359,   387, -5488,  4362,
   -5488, -5488, -5488,  4374, -5488,  2830, 22988, 22988,  4452, -5488,
    2995,   386,  4370,  3961,  4907, -5488,   502, -5488,  2717,  1081,
   -5488,  4366,  3280,  4376, -5488, -5488, 22988, -5488, -5488, -5488,
   -5488, 29774,   564,  4378, -5488,  4443, -5488, 22988, -5488,  4961,
    4382,  3436, -5488,  3280, -5488, -5488, 85205, 29774, -5488, 22988,
    4242, -5488, -5488,  5120,  4387,  4403,  4390,  4200, -5488, 52272,
   -5488,  4938, 67428,  3788,  3788,  1293,  4393,  2790,  4928, -5488,
   -5488, -5488,  4391, -5488,  2833, -5488,  5067,  3832, -5488,  5068,
   51579, 51579, 51579, 51579, 16956, 16956, -5488, -5488, -5488,  4400,
    4402,    57,  4960, -5488, -5488, -5488, -5488, 85205, 85205, 16956,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  3521, -5488,
    4044, -5488, -5488, 80133, -5488, -5488, -5488, -5488, -5488, -5488,
    1925, -5488, -5488,  4404,   334,  2726, -5488, -5488, -5488,   710,
    4115,   399, -5488, -5488, -5488,  5041,  4829,  4829,  4250,  5046,
    4729,  4418, -5488,   131, -5488,  5090,  5037, -5488, 85205,  4434,
   -5488,  4892, -5488,  4437, 83303, -5488, 22234,  4447, -5488,  4985,
   -5488, -5488,  5117, 64258,  4448, -5488,  4652, -5488, -5488, -5488,
    4446, -5488,  4436,  4537,  4538, -5488, -5488, -5488, 51579, -5488,
    4824, -5488, -5488, -5488, -5488, -5488, 69964, -5488, -5488,  4810,
   69964,   131,   131,   131,   131,   131,  4490,   131,   131,   131,
     131,   131,  4813,   131,   131,   131,   131,   131,   131,   131,
     131,   131,   131,   122, 85205,   131,   131, 41858, -5488, -5488,
    5026, -5488,  4920, -5488, -5488, -5488,   131,  5567,  4144,   501,
   -5488, -5488, -5488,  2582, -5488,  1785, -5488, -5488,  4457, 85205,
   -5488,  4050,  4595,  4461,   508, -5488,   441, -5488, 62990, 85205,
    3280,  4460,   563, -5488,  4692,  4464, -5488, -5488, 22988, -5488,
    4494, -5488, -5488, 43215, -5488, 75695, -5488, -5488, -5488, 22234,
   -5488,  2841,  4293,  4466,  1244, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488,   605,   605, -5488, -5488,   605,   605, -5488, -5488,
   -5488, -5488,   605,   605, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488,  1371, -5488, -5488, -5488,  1885, -5488,  5512,
    4864,  5040,  4864,  5042,  4966,  3272,   131,  5045,  5212, -5488,
     211,   131,  5048,  5113,  4553,  5115,  5052, -5488,  4558,  4864,
    5053,  4669,  5057,  5059,  5061, -5488, -5488,  8180, -5488, -5488,
   -5488, -5488,   529, 68696, -5488, -5488, -5488, -5488, -5488,  4990,
    1658, -5488, -5488, -5488, -5488,  1199,   189,   189,   189,  2819,
    2853, -5488,  2972,  2300,  1120,  4987,  1635, -5488,  2844, -5488,
    5244, -5488,   214, -5488, -5488,  3280,   452,   459, -5488,   554,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, 85205,  3467,
    2959, -5488, -5488, 85205,  3518,  3518,  3518,  3531,  3518,   149,
    4256, -5488, -5488, -5488, -5488, -5488,   108,  3518,  3518,  3518,
   -5488, -5488,  4493, -5488, -5488, -5488, -5488, -5488, -5488, 72500,
   -5488, -5488, -5488,  4815, 74427,  4012, -5488,  4833,  5035,  3796,
   -5488, -5488, -5488, -5488,  4115, -5488,  3280, -5488, -5488,  5166,
   -5488, -5488, 51579, -5488, -5488,   133,   133,   133,   133,  2722,
    4856, -5488, -5488, -5488,  4995,  4781, -5488,   446,  3280, -5488,
   -5488, -5488, -5488,  6791,   447,  3280, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  4508,  5323,  5323, -5488,  5247,  5039, -5488, -5488, 22988,
   22988, -5488, 22988, -5488,  1654,  4513,  4980, -5488, -5488, -5488,
   -5488, 22988, -5488, 22988, -5488, -5488, 22988,  3280,  3280,  3280,
    5323, -5488, -5488,  5204, -5488, -5488,  4209, -5488, -5488, 22988,
   -5488, 22988, -5488, 22988, -5488, 22988, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,   562,  5323, -5488, -5488, 22988, 22988,
   -5488, -5488, -5488, 85205, -5488,  2966,  4515,  4791, -5488, -5488,
   -5488,  2966,  4653, -5488, -5488,  2966,   189, -5488, -5488, -5488,
   -5488,  3796,  2995, -5488,  4518,  2533, -5488, -5488, -5488, -5488,
   -5488, -5488,  4521, 85205, -5488,  2851, -5488, -5488, 22988, -5488,
    5102,  4522,   563,  5259,  4524, -5488, 43215, -5488,  4526,  4527,
   -5488, -5488, -5488,  4815,  5323, -5488,  5154,  5101, -5488,  2966,
   85205, -5488, -5488, -5488,  4532, -5488,   131,  4115, -5488,  3023,
    1293, 67428, -5488, 76329,  2632,  3578, -5488, 85205, 51579, 51579,
    3952,  3952,  3952,  3952, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,   131,   131, -5488, 35451, 57067, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488,  4044, -5488, -5488,  3484,  5090, -5488, -5488,
    2138,   502,  3997,  1081, -5488,  4250,  5170,  5172, -5488,  4250,
   -5488, -5488, 67428,  4012, 22234,  2942,  3974, -5488, -5488, -5488,
   -5488,  4892, -5488, 38245, -5488,  4540, -5488,  4536, -5488, -5488,
    2287,  4873,  5163, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, 22234, -5488,
    2582,  2468, -5488, -5488, -5488,  4569, -5488,  4546,  4547,   131,
   -5488,   185,   341,   359,   385, -5488, -5488,  4242,   189,   189,
    2582,  2582,   131,   189, 81401,  2088,   189,  4242,  4242,   406,
    2582,  2012,   185, -5488, -5488, -5488,   189,   185, 71232, 69964,
    5218, 85205,  4549,  4552,  4555, -5488, -5488, -5488, -5488, -5488,
    2044, -5488,  5105,  3048,  2808,  2808, -5488,  4559,   250, -5488,
   -5488,  6858, -5488, 54341, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488,   409,  5145,  5312, -5488, -5488, -5488,  5103,
   -5488, -5488, -5488, -5488,  4675,  4050, 47543, -5488, -5488, -5488,
   22988, -5488, -5488, -5488,   -54,  4566,  1055, 22988, 85205, -5488,
   83937, -5488, -5488, -5488, -5488,  2341, -5488, 22234,  4571,  4576,
   -5488, -5488,   502,  2906,   502,  4578,  2850, -5488, -5488,  2841,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, 69330,  3048,
   -5488,  5218,  4617, -5488, -5488, -5488,  5228,  2761,  1220,  2761,
   38245,   441,   443,  5214,  2493,  5252,  4621,  5148,  2761,  2761,
   59098,  1220, 67428, -5488, -5488, -5488, -5488, 69964, 59775,  1220,
   -5488, -5488, -5488, 85205, -5488,  2761,  1220, -5488,  1220,  1220,
   38245, -5488,  7947, -5488, -5488, 42560,  2022, -5488, -5488, -5488,
    2582, -5488, -5488, -5488, -5488, -5488,  5175,  5176, -5488, -5488,
   -5488,  4763, 22988, 22988,  5179, 85205,  5180, -5488,  4993, -5488,
   85205, -5488,  4115, -5488, -5488, -5488,  4887,  5095,  2878, -5488,
   -5488,  2881, -5488, -5488,  2884, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488,  1564,  5136, 85205,
   -5488,  1564,  4557,  1564,  4557, -5488, -5488,  4122, -5488, -5488,
    4940,  4022, -5488,  4795,   133,  5069,  5069,  5069,  5069, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488,  5245,  4956,  8585,
    1564,  1564,  1564, -5488,  4606,  4607, 22988,  2472,  5234,  2872,
    2100,  2907,  4889,  4841, -5488,  4775, -5488,  2894,  2902,  2920,
    2162,  3522, -5488, -5488, -5488, -5488,  5257,  3518, -5488,  5349,
   -5488,  3518, -5488, -5488, -5488, -5488, -5488, -5488,  4619,  2941,
    3280,  3280,  2986, -5488, -5488, -5488,  2911,  2179,  2990,  3011,
   -5488, -5488, -5488,  4622, -5488, -5488,   419, -5488,  4623,  4022,
   -5488, -5488, -5488,  4452,  2138, -5488, -5488,  2916,  5357,  1846,
   22988, -5488, 22988, -5488, -5488, -5488, 85205,  4628,  4715,  1369,
   -5488,  2929, -5488, -5488,  4630, 67428, 22234,  2138, -5488, -5488,
   -5488,  2632, -5488,  4627,   502,  1904,   502, -5488,  3796, -5488,
   -5488,  3952,  3952, 16956, 16956, -5488, -5488, -5488, -5488,  3578,
    3788,  4673,  1081, -5488, -5488, -5488,  4384,  5104,  4250,  4250,
    4930,  5106, 22988,  4642, -5488,  4405, -5488, -5488,  4836,  1908,
    1908, -5488, -5488, -5488, 72500, -5488, -5488,  4645,  4639, -5488,
   -5488, -5488, 83303, -5488,  2950, -5488, -5488,  5395,  2952, -5488,
   -5488, 81401,  4647, 85205, 85205,  2582, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488,  4648, -5488, -5488, -5488, -5488,
   -5488,  2582, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488,  4651,  4655, -5488,
     172, -5488, 42560,  4657,  5287,  5292,  2808, -5488,  3048, 69964,
   -5488, 71232, -5488,  3048,  3048,  6831, 85205, -5488,  5411, -5488,
   -5488, -5488, -5488, -5488, -5488,   227, 85205,  3338, -5488, -5488,
    2483,  4783, -5488, 85205, -5488, -5488,  2582,  5413, -5488,  5065,
     563, -5488, 22988,  4664,  4671, -5488, -5488, -5488, -5488,  3280,
    5417,  4678, -5488, -5488, -5488, 76963, -5488, -5488, 22234, -5488,
    5310, -5488, -5488, -5488, -5488,  2841, -5488, -5488, -5488,  2300,
    1220, -5488,  2300, -5488, 71232, 38245, 71232, -5488, 47543, 71232,
    2761, 85205, -5488, -5488,  5304, 71232, 71232, -5488, -5488, 38245,
    4679, -5488,   563,  2895, -5488, -5488, -5488,  2966,  5137, 71232,
   38245, -5488, 38245, -5488,  3904,  3271, -5488,  4681, 85205, -5488,
   -5488, -5488, -5488, -5488, -5488,  3280,  5323,  5073, -5488, -5488,
    4792,  2582,  5044, -5488,  1093, -5488, 85205,   235, -5488, -5488,
     189, -5488,   189, -5488,   189, -5488, -5488,   155, -5488, -5488,
   -5488, -5488, -5488, -5488,  5069,  2422, -5488, -5488, -5488, -5488,
   -5488, -5488,  5318,  5188, 91195,  5302, -5488, -5488, -5488, -5488,
   -5488,  4690,   563, -5488, -5488,  4694, 80133, -5488, -5488, 22988,
   -5488,  4922, -5488,  5030, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488,  1564, -5488, -5488, -5488, -5488,  4242, -5488,
   -5488, -5488,  4699, -5488,   189,  4405, -5488, -5488, 22988, -5488,
   -5488,  4701,  6187,   563,   563, -5488, -5488,   189, -5488,  4646,
    4703, 85205, -5488,  5101, -5488, -5488, -5488, -5488, -5488,   502,
   -5488, -5488, 77597, -5488, -5488, -5488, -5488,  4022, -5488, -5488,
    3796, -5488, -5488,  4704, -5488,  5174, -5488, -5488, -5488,  5184,
    3280, 85205,  4752,  1908,  5459,  5206, -5488,  1489, -5488,    89,
   -5488, 85205, -5488, -5488,  4242,  5071, -5488, -5488,  4902, 85205,
    2965,   563,  4717,  3004, -5488, 69964, -5488, -5488, 85205,  2138,
   -5488,  8180, -5488, 22988,  3048, -5488, -5488, 71232,  4728,  5194,
    2005, 71232, 71232, -5488,  5444, -5488,  4718, -5488,   302, 91654,
   -5488, -5488,  5074,   227, -5488,  2655,  4734,  4719, -5488, -5488,
   -5488,  5424,   501, -5488, -5488, -5488,  5324,  1120, -5488,  4736,
    4737,  7534,  3338, -5488, -5488,  2177,  5367, -5488,  3280, -5488,
   -5488,  4745, 85205, -5488, -5488, -5488,  2138,   502,  5425, -5488,
    5427,  1335, -5488, 71232,  2396,  4256, -5488, 71232,  4639, -5488,
   -5488,  1982, -5488, 67428, -5488, -5488, -5488,  5253,  2022, -5488,
   85205, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
    4750,  2850,  5217,  3008, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488,   543, 85205, -5488,  4947, -5488,  2422, -5488,  5236,
   69964, -5488, -5488, 22988, -5488, -5488, -5488,  1504,  3028, -5488,
   -5488, -5488,  4753, -5488,  4755,  4044,  4460, -5488,  4654,  4894,
    4429,  4430,  4435,  4932,  5096, -5488,  4934, -5488, -5488, -5488,
    4761, -5488, -5488,  2109, -5488, -5488, -5488, -5488,  2138,  4022,
    5090, 22988,  4762, 22988,  4764,  3037, -5488, -5488,  1908,  1908,
   -5488,  1541,  4767, -5488, -5488, -5488,  5185,  4772,  3078,   -54,
   85205, -5488,  5362,   -54,  4773,  4778, -5488, -5488,  5026,  3095,
   71232,  5194,  2258, 85205,  5387,  1707, -5488,  1707, -5488, -5488,
    3822, -5488, -5488,  3753, 85205,  5239, -5488, -5488, -5488, 91654,
    1239, -5488, -5488, -5488,  4784,  4785, -5488,  4786, -5488, -5488,
   -5488, -5488,  5354, -5488, 46117, -5488, 85205, -5488, -5488, -5488,
    5179, -5488, -5488,   501, -5488,  5517,  5518,  5467,  5524,  2177,
   -5488,   357, -5488, -5488, -5488, -5488, -5488, -5488, -5488, 71232,
    1413, -5488,  5494,  5497,  2022, -5488, -5488, -5488, -5488,  1220,
   -5488, 69964, -5488, -5488,  4639,  1475,  4893, -5488,  6791,  2632,
    4750,  4797,  2081,  2717, -5488, -5488,  1262, -5488, -5488, 85205,
   84571, -5488, -5488,  5366, -5488, -5488, -5488,  4230, 91195,   563,
   80133, 80133, -5488, -5488, -5488,   502,  1673, -5488,  5551,  1927,
   -5488, -5488,  1178, -5488, -5488, 85205, 29774,  4883, -5488, -5488,
    4878, -5488, -5488,  3387, -5488,  4452,  4673,  3280, 85205,  3280,
   85205, -5488, -5488, -5488, -5488,  2808, -5488,  2808, -5488,  1541,
   -5488, -5488, -5488,  1371,   -54,  1726,   563,  4811,  1803, -5488,
   85205,   250, -5488, -5488, -5488,  1707,  3080, -5488,  1537,  5399,
   -5488,  4814, -5488,  4816,  4817, -5488,  5448, -5488,  2582, -5488,
    4896, -5488,  3822, -5488, -5488, -5488,  4858,  5455,  5414,   131,
   81401, 32035, -5488,  5311, -5488,  5268,  5530, -5488,  5581,  5022,
   -5488, -5488, -5488, -5488, -5488,   226,   234,  2240,  1239, -5488,
   -5488, -5488, -5488, 85205, -5488, 85205, 85205, -5488,  3531,   203,
   -5488, -5488, -5488, 50881, -5488,  1635, -5488, -5488,  2472,  2472,
    5570,  2472, -5488,  5572,  5573,   357, -5488,  5444,  2966,  5101,
   -5488, -5488, 32035, -5488, -5488, -5488,  5478, -5488, 22988,  5192,
   -5488, -5488,  1904,   502,   502,  4838,  2850, -5488, -5488,  2632,
   -5488,  5023,  5580,  5582, -5488, -5488,  3082, -5488, -5488,  4899,
   67428, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  4654, -5488,
   -5488,  4979,  2077, -5488,  3105, -5488, -5488, -5488,  2966, -5488,
    4854, -5488,  5215,   131,   131,  5216,   131,   131,   131,   131,
    4855,  3387, -5488,  5205, -5488, -5488,  3109,  3114,  5531,  5531,
   -5488,  3139,  1133,  5058,  2582,   131,  2013,  1726, -5488, -5488,
     131, -5488, -5488,  2013,  1803, -5488, -5488,  4868, -5488,  4865,
    4872, -5488, -5488, 85205, -5488, -5488, -5488,  1358, -5488, 85205,
    4874, 85205, 85205, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   55027, -5488,  2819,  2819, 22988, -5488, -5488, -5488, -5488, -5488,
    3369,  5468, -5488,  4917,  1649,   131, -5488,  4368,  4871, -5488,
    4875, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  5416,
   85205, -5488, -5488, 69964,  4993, -5488, -5488, -5488,  2472, -5488,
    2472,  2472, -5488, -5488, -5488,  3153, -5488, -5488,  4884,  3280,
   22988, -5488,   502,  2188, -5488, -5488, -5488, -5488,  2632, -5488,
    1904, -5488, -5488,  1093, -5488,  5070,  5078, -5488, 84571, -5488,
    4895, -5488,   131,   441, -5488, -5488, -5488, -5488, -5488, 85205,
    4897, -5488,  4901, -5488, -5488,   113,   131,  2582,  2582,   131,
    3960,  3960,  2966, 81401,  4968, -5488, -5488,   131, -5488, -5488,
    2792, -5488, -5488, -5488,  1707,  1707,  2013,  1133, -5488, -5488,
   -5488,  3376, -5488,   189, -5488,  5508,  5331, -5488, 55713, -5488,
   -5488, -5488, 85205, 85205,  4903, -5488,  1218,  1218,  3197, 85205,
    3218,  3220, -5488, -5488, -5488, -5488, -5488, -5488,  4898,  4908,
   -5488,  1472, -5488, -5488,  4368, -5488, -5488, -5488, -5488,  5242,
   -5488,  4457,  4461, -5488,   222,  5333,  5577,  5264, -5488, -5488,
   -5488, -5488,  5101,  3280, -5488,  2138,   502, -5488, -5488, -5488,
   -5488, -5488, 67428, 22234, -5488,  4883, -5488, -5488, -5488,  3224,
   -5488, 26758, -5488, -5488, -5488,  2582, -5488, -5488,  2582, -5488,
   -5488, -5488, -5488, -5488,  3230, -5488, 81401,  5647, -5488,  5648,
    4913,  4918, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,  3275,  3287, 85205, -5488, -5488,   478,
    5365,  5507,  5510,  1133,  3296,  1726,  1803, -5488,   364, -5488,
    3637,  3637,  1909, -5488, -5488, -5488, 85205, -5488,  5103,   623,
   85205, -5488, -5488, -5488,  3336, -5488, -5488, -5488, -5488,  5463,
   -5488, -5488,  4901, -5488,  4925, -5488,  4815, -5488, -5488, 81401,
   -5488,  4968, -5488, -5488, -5488, 83303, 83303,  5105,  1133,  3343,
   -5488, -5488, -5488,  5415,  5627, -5488,  1133, -5488, -5488, -5488,
    4929, -5488,  3637, -5488, -5488, -5488, -5488, -5488,  2112, 85205,
   85205, -5488,  3338, -5488, -5488, -5488,  5500, -5488, -5488, -5488,
   -5488,  5230,  5065, -5488, 26758,  4933,  3387, -5488, -5488,  4935,
    3350, -5488, -5488,  1133,  1218,  1218, -5488, -5488, -5488, -5488,
    2112, -5488, -5488, -5488, -5488,  3338,  4992,  5285,  5625,  5676,
    5367, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488,  5072,  2472,  5595, -5488, -5488,  5533,  4948,    58,
    1330, 61086,  5476, -5488, -5488, 81401, -5488, -5488, -5488, -5488,
   -5488, 81401,  3355, -5488, -5488, 67428, -5488, -5488,  6791, -5488,
   -5488, 63624,  4949, -5488,   131, -5488, -5488, 67428, -5488, -5488,
   22234, -5488, -5488
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2625,  1238,  2472,     0,   522,     0,  1445,   824,   552,  2326,
    2466,  2467,  2256,     2,   594,   252,  2667,  2668,   470,  2258,
    2533,     0,     0,   590,  1461,   962,   712,  2528,   390,     0,
       0,   597,  2261,   388,   252,  3184,  2374,     0,  3281,  2315,
       0,   592,  2629,  3571,  2890,  2938,  2939,  2966,  2785,  3060,
    3082,  3108,  2872,  2874,  2873,  2875,  2876,  2877,  2878,  2879,
    2880,  2758,  2881,  2882,  2883,  2885,  2884,  2886,  2887,  2888,
    2759,  3426,   548,  2760,  2838,  2889,  2840,  2839,  2891,  2761,
    2762,  2892,  2893,  2894,  2895,  2764,  2763,  2896,  2898,  2897,
    2841,  2842,  2899,  2900,  2901,     0,  2903,  2765,  2766,  2767,
    2768,  2769,  2902,  2770,  2904,  3431,  2905,  2906,  2771,  2907,
    2908,  2909,  2910,  2912,  2911,  2913,  2914,  2916,  2917,  2918,
    2915,  2919,  2920,  2922,  2921,  2844,  2923,  2843,  2924,  2772,
    2925,  2926,  2927,  2928,  2929,  2930,  2931,  2932,  2933,  2934,
    2223,  2935,  2936,  2937,  2958,  2940,  2942,  2941,  2845,  2943,
    2944,  2945,  2947,  2946,  2948,  2950,  2773,  2774,  2775,  2949,
    2951,  2952,  2953,  2954,  2956,  2955,  2960,  2961,  2846,  1461,
    2777,  2778,  2957,  2959,  2756,  2962,  2963,  2847,  2848,  2964,
    2779,  2835,  2965,     0,  2968,  2967,    85,  2969,  2781,  2970,
    2971,  2972,  2973,  2974,  2976,  2978,  2975,  2979,  2980,  2986,
    2782,  2977,  2981,  2982,  2983,  2984,  2985,  2987,  2849,  2988,
    2990,  2989,  2991,  2992,  2993,  2994,  2850,  2995,  2836,  2996,
    2997,  2998,  3011,  3012,  3002,  3003,  3005,  3006,  3009,  3004,
    3010,  3015,  3014,  3016,  3017,  3018,  3019,  3020,  3013,  3000,
    3007,  3008,  3001,  3021,  3022,  2999,  3023,  3025,  3024,  3026,
    2851,  3027,  3028,  3029,  3030,  3031,  3032,  3033,  3034,  3036,
    3035,  3037,  2852,  2853,  2854,  3038,  3039,  3040,  2829,  3041,
    2855,  2856,  3044,  3042,  3043,  3045,  3046,  3051,  3052,  3053,
    3048,  3047,  3049,  3050,  2857,  2858,  2859,  3054,  3055,  3056,
    3057,  3059,  3058,  2784,  2783,  2786,  3061,  3062,  2787,  3063,
    3065,  3064,  2831,  2788,  3066,  3067,  3069,  3068,  2860,  2861,
    2789,  2790,  2791,  3070,  3071,  3072,  3073,  3074,  3075,  3076,
    3077,  3078,  3079,  3080,  3081,  2862,  2863,  3083,  3084,  3085,
    3087,  3086,  3088,  3089,  3090,  3091,  3092,  3093,  3094,  2792,
    3095,  1461,  3096,  3097,  2793,  3099,  3098,  2794,  3100,  3101,
    3102,  3103,  3104,  2830,  3431,  3105,  3106,  3107,  2864,  3109,
    3110,  3111,     0,  3112,  3113,  3114,  2795,  3115,  3116,  2865,
    2837,  2796,  3117,  3119,  2544,  2797,  3118,  2799,  2800,  3120,
    3121,  3122,  2798,  3123,  2801,  3124,  3125,  3127,  3126,  3128,
    3129,  3130,  2802,  3131,  3132,  2803,  3133,  2804,  3134,  3135,
    3136,  3137,  3139,  3138,  3140,  3141,  3142,  3143,  3144,  3145,
    3147,  3149,  3148,  3146,  3150,  3151,  2866,  3152,  2805,  2867,
    3157,  3158,  2868,  3153,  3154,  3155,  3156,  2351,  3159,  3160,
    3161,  2808,  3162,  3163,  3165,  3164,  2806,  2807,  3166,  3167,
    2812,  3168,  3169,  3174,  2869,  2870,  3170,  3171,  3183,  3172,
    3173,  3176,  3175,  3177,  3178,  2757,  2809,  3179,  3180,  2810,
    3181,  2811,  3182,  2871,     0,     3,     8,    21,     0,    43,
      26,    31,    16,    20,    15,    45,    58,    51,    28,  3428,
     466,   467,   468,   469,    41,  3492,    40,    11,    61,    62,
      18,    48,    12,    14,    17,    39,    47,    35,    42,    55,
      24,    25,    32,    49,    66,    22,    63,    59,    23,  2472,
      13,    27,    50,    44,    36,    60,    67,    37,     0,  2626,
    2672,  2685,     0,  2686,  2754,  2752,  2755,  2751,  2753,    56,
      57,    38,    65,    30,    52,    29,     9,    10,    19,    53,
      54,    46,    68,    33,    64,    34,  1272,     0,     0,     0,
       0,     0,     0,  2254,     0,     0,  1354,     0,  1596,  3490,
    3491,  3492,  1462,     0,  1463,     0,  2625,  2833,  2832,  2760,
    2762,  2816,  2763,  2819,  2820,  2813,  2772,  2821,  2834,  2775,
    2776,  2817,  2718,  2779,  2822,  2780,  2782,  2814,  2815,  2823,
    2818,  2791,  2824,  2793,  2825,  2826,  2827,  2802,  2803,  2828,
    2807,  2719,  2811,   280,  2683,   254,  2684,  2715,  2713,  2717,
    2711,  2712,  2716,  2710,  2714,   524,   130,     0,     0,     0,
       0,     0,  2346,  2254,  2252,  2254,  2254,  2254,  2254,  2254,
       0,  2254,  2254,     0,  2257,  2254,  2254,     0,     0,     0,
     515,  2264,  2535,     0,  2551,  2552,  2546,  3271,  3272,  3266,
     477,     0,     0,     0,     0,     0,   375,   387,   390,   383,
     386,     0,   252,  1464,   477,  2324,   389,   390,     0,  3186,
       0,  2446,   390,     0,  2324,  2545,     0,  2630,  2627,  3431,
    1667,  1666,   550,     0,  2673,     0,  1440,  1472,  1398,     0,
    3432,  3433,     0,    73,    75,  2477,   412,     0,     0,     0,
       0,  2666,     0,     0,     0,     0,  1406,     0,  3433,  3443,
       0,   130,  1379,     0,   130,  2357,     0,     0,  3554,  3555,
       0,     0,     0,  3549,     0,  3556,     0,     1,     5,     0,
       0,   822,  1195,  1196,  1194,   822,   822,     0,     0,     0,
       0,     0,  3497,  3490,  3491,  3492,  2953,  2778,  3065,  2459,
    2471,  2457,  2661,  1559,  3464,  1513,  1498,  1500,  3189,     0,
    1241,  1273,  2255,  1244,     0,     0,  1246,     0,  1261,  2694,
    2693,  2692,  1258,  1257,  1256,  1254,     0,   665,     0,  1356,
     252,     0,     0,     0,  3498,  3497,     0,  1417,  2461,  2462,
    2463,  2464,  2465,  2468,   282,     0,   535,   538,     0,   527,
     530,     0,   131,   132,  1443,  1446,     0,   825,     0,   164,
       0,   366,   368,     0,   365,   367,  2741,   553,   331,   333,
       0,   353,     0,     0,     0,   442,   348,   440,     0,   441,
    2738,  2735,  2740,  2736,  2739,  2737,  2350,  2349,     0,  2348,
    2327,     0,  2346,     0,     0,     0,  2254,     0,     0,     0,
       0,     0,     0,   252,     0,  2442,   252,  2236,  2254,  2254,
     595,     0,  3334,  3349,  3350,  1610,  3346,  3351,     0,  3348,
    3340,     0,  3344,  3338,     0,  3370,  3342,  3347,  2946,  2775,
    2960,  3074,  3078,  3094,  3097,  2827,  3140,  3328,  3313,  3329,
       0,     0,  3332,  3336,     0,     0,  2265,  2266,  2267,  1352,
    2536,  2537,  2538,     0,  2555,     0,   490,     0,     0,     0,
       0,   465,   479,   480,     0,     0,   486,     0,   477,     0,
     451,   463,   453,  2625,   481,   462,   455,   454,   456,   457,
     458,   459,     0,   460,   461,   464,     0,   447,   448,   591,
     449,   450,   477,  2689,  1459,     0,  2615,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1610,  1610,  1610,  1607,
       0,     0,     0,  2620,     0,     0,     0,     0,  2611,     0,
    2621,     0,     0,     0,  2613,  2614,  2669,  2670,     0,     0,
       0,     0,  2618,     0,     0,     0,     0,     0,  2594,  1669,
       0,  1607,     0,  2610,  2617,     0,  2602,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1607,  2593,     0,  2612,  2619,     0,  1610,  1607,  1607,
       0,     0,  2873,  2758,  2888,  2816,  2899,  2901,     0,  2765,
    2766,  2767,  2768,  2769,  2813,  2923,  2843,  2924,  2925,  2926,
    2778,  2847,  2964,  2971,  2989,  2991,  2850,  3030,  3032,  3037,
    2852,  2853,  2854,  3042,  3043,  3056,  2831,  2860,  2861,  3072,
    3079,  3104,  2864,  3109,  3114,  3117,  3136,  2867,  3157,  3158,
    2868,  3156,  2828,  3168,  3174,  3177,  3178,  2809,  2871,     0,
       0,     0,  3475,  1668,     0,     0,  1905,   963,  1622,  1628,
    1642,     0,  1741,  1740,  1743,  1745,  1751,  1661,  1772,  1712,
    1713,  1715,  1834,  1714,  1719,  1720,     0,  1882,  1721,     0,
       0,  1718,  2607,  1717,  1716,  2608,  2609,  1711,  2647,  2683,
       0,  2671,   714,   713,  2441,  2440,     0,  2529,   402,   397,
     405,   399,   401,   400,   406,   407,   408,   403,   398,   404,
     391,     0,   376,     0,   384,  3444,     0,     0,   477,   598,
    2325,  2269,     0,  2268,   409,  3334,  2874,  3078,  3302,     0,
    3312,     0,     0,     0,     0,  1116,  2749,  3215,  3216,  2829,
    2831,  2830,  3217,  3153,  2750,     0,     0,  2678,     0,     0,
    2679,  2746,  2744,  2748,  2743,  2747,  2742,  2745,  3185,  3201,
    3197,     0,     0,     0,  2454,  1191,  1190,     0,     0,     0,
    2396,     0,  1116,  2454,  2397,     0,  2145,  2444,  2447,     0,
    3219,  2410,  1192,  3220,  2440,     0,  2382,  2398,  2359,  2403,
     130,  3221,     0,  2443,  2145,  2454,     0,  2375,     0,     0,
       0,     0,  1594,     0,   385,  3282,  1352,   593,     0,     0,
    3427,   555,   549,     0,     0,     0,     0,     0,  3436,  1951,
    2224,    77,     0,    79,     0,     0,  2663,  2079,  3285,  3284,
       0,    86,     0,  3568,    73,     0,  2521,     0,  2519,  2516,
    2518,     0,  3436,  1386,  1386,     0,     0,  1378,  1380,  1381,
    1386,  1386,  2358,     0,  3569,  3570,  2601,  2599,  2600,  2674,
    3551,  2598,  2597,  3560,  3562,  3545,     0,  3548,  3547,  3557,
       6,    69,     0,     0,   252,   252,   822,   166,   822,   822,
     822,   822,   822,   822,   151,   149,   153,     0,     0,   157,
     155,  3497,  2625,  2474,  1562,  1567,     0,  1513,     0,     0,
       0,  3447,  3446,  3445,  3459,  1501,  1502,     0,     0,     0,
    1132,     0,   257,  3495,  3496,  3494,  1610,  2695,  2698,  3493,
    2699,   257,  1255,     0,   666,     0,     0,     0,     0,     0,
       0,   668,   667,   604,     0,  1360,  1361,  1355,  1357,  1359,
       0,     0,     0,     0,     0,  2473,     0,   284,   281,   253,
       0,   327,     0,   525,   531,    87,     0,  1447,  2245,  2247,
     163,     0,     0,   356,     0,   338,     0,     0,  1056,  1078,
    1076,  1076,  1042,  1062,  1058,  1062,  1052,  1097,   992,   992,
    1097,  1055,   992,  1062,  1057,     0,  1054,  1097,  1053,   992,
       0,  1046,  1078,   986,   987,   992,  1076,  1013,     0,  1062,
    1035,  1034,  1097,  1038,  1039,  1037,  1041,     0,  1043,  1062,
    1048,  1036,  1040,     0,     0,  1076,  1076,  1076,     0,  2741,
    1076,     0,   340,  1128,   972,   974,   973,   975,   976,  1062,
    1078,  1078,     0,     0,  1076,  1084,   444,   440,  2738,  2736,
    2739,  2737,   334,   336,     0,     0,     0,   355,     0,  2328,
       0,  2086,  2330,  2334,  2340,  2344,  2347,  2228,  2253,     0,
       0,  2229,  2233,  2239,  2238,  2232,  2442,     0,  2242,   679,
       0,     0,     0,  2243,  2225,     0,   568,   570,  3335,  3333,
    3367,  3366,  3371,     0,  3368,  3364,     0,  3327,  3372,  3357,
    3399,  3361,  3399,  3399,  3358,  3365,  3399,     0,  3363,  3362,
       0,  3330,     0,     0,     0,  1353,     0,  2539,  2540,     0,
    1482,  2557,  2556,  2553,  2079,  3268,  3273,   484,  2725,  2724,
    2687,   491,  2688,  2721,  2723,  2720,  2722,     0,  3042,     0,
     496,   495,   494,     0,   512,   484,   487,   505,     0,     0,
     325,   472,   478,   473,     0,   511,   513,   545,   543,   584,
     580,   588,   582,   452,  2690,     0,     0,     0,     0,  1746,
    2084,  2084,  2084,     0,     0,  1959,     0,     0,     0,     0,
    2084,     0,  1778,  1757,  1758,     0,  1779,     0,     0,     0,
       0,     0,  3475,     0,     0,  1911,     0,     0,     0,     0,
    3475,     0,     0,  2669,  2670,     0,     0,     0,  1953,  1955,
    2647,  2671,  2084,     0,  2084,     0,  1615,  1788,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2084,  2084,     0,  2084,  1796,     0,  2595,  2616,  1800,  1802,
    1801,  2084,  2084,     0,     0,  2084,     0,     0,     0,  2604,
    2603,     0,     0,     0,     0,     0,     0,     0,  2622,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2624,     0,     0,     0,  2623,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1748,     0,  1747,  1749,     0,
     965,   964,  2625,     0,     0,     0,  1665,  1664,  1663,  1662,
       0,     0,     0,     0,  1671,     0,  1673,  1675,  1670,  1672,
    1674,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1750,     0,     0,     0,     0,     0,  2596,     0,  1844,
       0,   726,     0,     0,     0,   374,  1466,  2700,     0,  1465,
    1469,  3268,   577,     0,  2272,  2262,  2271,  1991,  3333,     0,
       0,     0,  3330,     0,     0,  3187,  3195,  1115,     0,     0,
    1118,  1120,  2289,  2288,  1119,  1128,     0,  1117,     0,  3256,
       0,     0,  3241,     0,  3222,     0,  1124,  1126,  1125,  3236,
    1123,     0,     0,     0,  3206,     0,     0,   822,     0,     0,
       0,     0,     0,     0,     0,  2425,     0,  1594,  1594,  2376,
       0,  2454,     0,  2454,  2444,  2450,  2409,     0,     0,   878,
    2147,  2402,     0,  2146,  2448,  2449,  2454,     0,     0,  2454,
       0,  2416,  2444,  2454,  2371,     0,     0,  2363,  2368,  2364,
       0,  2370,  2369,  2372,  2360,  2361,     0,  2389,  2418,     0,
    2401,  2408,     0,  2388,  2395,     0,  2406,  2444,  2444,     0,
    2454,  2454,  2454,  1996,   575,  2628,  2631,  2635,  2639,   323,
       0,     0,     0,  1474,  1476,  1475,  1492,  1400,     0,  3435,
       0,  3437,     0,  3439,     0,    79,    74,    80,    76,     0,
    2502,     0,     0,     0,  2496,  2498,  2501,  2497,     0,     0,
    2503,   130,     0,  2499,  2478,  2481,  2488,  1594,  2479,     0,
       0,   410,   413,   415,     0,   418,  2080,  2081,     0,  3283,
       0,  2662,     0,    72,  1404,  1407,     0,  2526,  2523,   130,
       0,  2826,  3442,  3440,  1374,  1390,  1372,  1384,  1385,     0,
       0,  1377,  1376,  3268,     0,     0,  3546,  3563,  3544,     0,
    3558,  3559,  3543,     7,     4,     0,   143,     0,     0,     0,
       0,     0,     0,     0,     0,   822,     0,   822,  1596,  1596,
     822,   159,   822,   822,     0,  2460,  2458,  2475,  2476,  1996,
    2209,     0,  1499,  1586,  1551,  1563,  1586,  2086,  2145,  3457,
    1562,  1554,  3489,  3483,  3486,  3485,  3481,  3484,  3482,  3487,
    1585,  3488,  1584,  1596,  1568,  1582,  1583,  2298,  3465,  2284,
       0,  1503,  1562,  1559,  3461,  3460,  3450,  3455,  3264,  3265,
    3262,  3263,  3261,  3190,  3191,  1133,  1132,   816,   819,   818,
       0,     0,  1245,  2697,     0,  1247,     0,  2442,  1262,     0,
       0,  2442,   615,  2442,   669,  3268,  1358,  2698,  3398,     0,
    3404,  3386,  3499,  3500,  1252,  1250,     0,  1418,  1419,  1422,
       0,   285,   287,   536,   539,   477,     0,     0,     0,  1457,
       0,  1455,  1454,  1452,  1453,  1451,     0,  1442,  1448,  1449,
    2442,   607,   360,   555,   339,   332,   335,   337,     0,  1079,
     998,  1077,  1097,  1097,     0,  1066,  1064,  1063,  1059,  1066,
    1095,  1022,  1098,  1141,  1135,  1139,  1136,  1028,  1137,     0,
    1143,   993,  1042,  1097,  1030,     0,   992,  1021,  1027,  1066,
       0,  1017,  1025,  1097,   985,  1029,  1016,     0,  1066,  1031,
    1044,  1047,  1049,  1051,  1066,  1097,     0,   444,   992,  1015,
    1014,   992,  1066,     0,     0,     0,  1113,  1060,  1045,  1137,
    1143,   992,  1097,  1066,     0,  1085,  1066,     0,     0,   349,
     358,   443,  2165,  1991,     0,  2331,  2336,  2249,  2251,  2661,
    2087,  2136,     0,     0,     0,  2342,     0,  2230,     0,   679,
    2235,  3325,   682,   681,  2240,   680,  2290,  3384,  2234,  1362,
       0,     0,   477,   569,   498,  3360,  1611,     0,  3341,  3345,
    3339,  3343,     0,  3323,     0,     0,  3331,     0,     0,  3369,
    3352,  3356,  3355,  3353,     0,  3354,  3359,  3337,   471,   516,
    2259,  2541,  3168,  2542,  2534,     0,  2554,     0,     0,  3270,
    2165,     0,  3267,   492,     0,   484,     0,     0,   508,  2691,
     488,   484,   498,   507,   574,   326,     0,   282,   482,     0,
       0,   555,     0,   477,   477,     0,  3268,     0,  2085,     0,
    1926,     0,     0,     0,     0,     0,     0,  1727,     0,     0,
       0,  1865,     0,  1926,  1888,  2195,  2196,  2176,  2177,  2175,
    2178,  1608,     0,  2179,  2194,  1812,     0,     0,     0,  1886,
       0,  2055,  2056,  2057,  2058,  2059,  2060,  2061,  2062,  2063,
    2064,  2065,  2066,  2068,  2073,  2069,  2070,  2071,  2072,  2067,
    2074,     0,  2054,     0,  1912,  1878,     0,     0,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,  2084,     0,
       0,  2084,     0,     0,     0,     0,  1887,     0,     0,     0,
    1885,     0,     0,     0,  1884,  1770,     0,     0,     0,  2084,
       0,     0,     0,     0,  1703,     0,     0,     0,     0,     0,
    2084,     0,     0,     0,     0,     0,     0,     0,     0,  1696,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2077,  2075,  2078,  2076,     0,     0,  1951,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1826,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1774,     0,     0,
       0,  2652,     0,  1161,     0,     0,     0,     0,  1742,     0,
       0,     0,     0,  3222,  1906,  1908,  1613,  1612,  1614,  1625,
    1618,  1623,  1616,  1620,     0,  1676,  2880,  1626,     0,     0,
    1658,  3475,  2093,  1659,  1647,  1640,  1645,  1646,     0,  1643,
    1644,     0,  1649,     0,  1648,  1655,  1656,  1657,  1660,     0,
       0,     0,     0,  1744,  1127,  1752,  2106,  1880,  1881,  1904,
    2110,     0,  2648,  1596,  1699,  1698,  1700,  1701,  1702,   727,
       0,   721,   724,   738,     0,     0,     0,  2530,     0,  2843,
    2867,  2868,   392,   395,   394,   396,     0,     0,     0,     0,
       0,  2270,  2625,     0,  2248,  1992,     0,     0,     0,  3388,
    3310,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3239,     0,  3238,  3237,     0,  3258,     0,     0,  3243,  3242,
       0,     0,  3200,  3244,  3245,  3248,     0,     0,     0,     0,
       0,  3229,     0,  3153,  3202,  3203,  3208,  3198,  2417,     0,
       0,     0,  2422,  2420,  2413,  2424,  2434,  2421,  2415,  2426,
    2414,     0,     0,     0,  2454,  2429,  2431,  2427,  2454,     0,
    2452,  2439,  2438,  2437,  2386,  2385,  2158,  2159,     0,  2157,
       0,  2148,  2151,  2156,  2154,  2379,  2445,  2432,  2428,   252,
    2454,  2384,  2383,  2365,  2366,  2367,     0,  2145,     0,  2450,
    2419,  2444,     0,  2454,  2454,  2435,  2436,  2405,  2407,  2024,
       0,  1966,     0,  1968,  1965,  1964,  1963,  1994,     0,  1995,
     477,     0,     0,  2633,   477,   551,     0,     0,     0,   711,
    1492,  1478,  1494,  1402,  1401,  1399,  3193,  3434,  3438,  1952,
      78,     0,  2507,  2490,  2489,  2491,  2495,   130,  2500,  2492,
       0,  2504,  2505,   423,     0,   419,     0,     0,  2709,  2676,
    2083,  2677,  2706,  2704,  2708,  2702,  2703,  2707,  2701,  2705,
    2961,  3042,     0,  2086,  3287,  3567,     0,  1408,  2165,  2522,
    2524,  2517,  3441,  1375,  1392,  1391,  1387,  1388,  1393,  1383,
    1382,  2352,  3552,  3561,  3565,  3550,   823,  1132,  3321,  3404,
     221,  1211,     0,     0,   133,   135,     0,   274,     0,   255,
     152,   822,   150,   154,   822,     0,   822,   158,     0,   202,
     255,   201,     0,   156,   822,  1566,  1564,  1565,     0,     0,
    2222,     0,  2217,  2138,     0,     0,  1535,     0,  1552,  1556,
    1557,  1533,  2094,  3456,  1563,  2136,  1591,  1560,  1590,     0,
    1581,  1596,     0,  1517,  1504,  1505,  1514,  1545,  1544,  1562,
       0,     0,   817,  2290,  2290,     0,     0,     0,     0,     0,
       0,     0,     0,   258,   267,  2696,     0,     0,   613,   614,
    2290,   612,   655,   656,   659,   660,   661,     0,     0,   662,
    2290,  2290,   609,   635,   636,   639,   640,   641,   642,   643,
     605,     0,   610,  1239,     0,     0,     0,  3416,  1264,  3501,
    1248,     0,     0,  1421,   283,     0,     0,   477,   523,   532,
     526,   528,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    88,    89,   110,     0,
    1444,  1456,  2246,  1450,  2290,  2290,  2290,  2290,   611,   644,
     645,   648,   649,   650,   651,   654,   652,   653,     0,  2442,
       0,     0,     0,     0,     0,     0,     0,  1018,  1019,     0,
    1068,  1069,  1067,   988,   984,  1099,     0,  1142,   995,  1138,
    1134,  1144,  1140,  1095,   994,  1023,  1024,   990,     0,  1236,
    1002,     0,   991,  1050,   989,  1003,     0,   345,     0,   343,
     352,  1026,  1000,  1012,   444,   444,   341,  1131,  1130,  1129,
       0,  1020,   996,   997,   999,  1143,   982,     0,   983,   445,
     446,  2165,  2170,  2166,   354,   373,     0,   372,  2332,  1569,
       0,     0,     0,  2664,     0,  2161,  2137,  2341,  1996,  2345,
    2344,  3268,  2231,  2241,     0,  2291,     0,     0,  1364,  1363,
    2237,  2244,  3268,   477,   362,   501,   572,  3403,     0,  3402,
       0,     0,  3320,     0,  3380,  3383,  2661,     0,     0,     0,
       0,   327,  2625,  2543,  1483,  1485,  1486,  1484,  1492,     0,
       0,  3276,  3277,  3275,  3269,  3274,   485,   493,   509,     0,
     489,   499,   503,     0,   475,   474,   514,   546,     0,   585,
     540,   540,   540,  1460,     0,  1860,     0,  1861,  1862,     0,
    1728,  1960,     0,     0,     0,  1755,     0,     0,     0,  1864,
       0,  1609,     0,     0,  1731,  1723,     0,  1890,     0,  1895,
       0,  1893,     0,     0,     0,     0,     0,     0,  1954,     0,
    1956,  2648,     0,  1870,  1900,     0,  1868,     0,  1889,     0,
    1901,  1902,     0,     0,     0,     0,  1874,  1872,     0,     0,
       0,  1876,     0,     0,     0,     0,     0,     0,     0,  1773,
    1873,  1875,     0,  1808,     0,  1858,  1809,  1810,  1811,  2651,
       0,  1805,     0,  1806,     0,     0,     0,     0,     0,  1759,
    1760,     0,     0,     0,  1836,     0,  1761,  1816,     0,  1736,
    1837,  1818,  1766,  1767,  1838,  1839,  1840,  1733,  1734,  1820,
    1821,     0,  1842,  1735,  1822,  1825,     0,  1769,  2165,     0,
    1753,     0,     0,     0,  1771,  1799,     0,     0,     0,  1732,
       0,  1828,     0,     0,     0,  2165,     0,     0,  1775,     0,
       0,   966,  2013,  1528,  1586,  3463,  3462,  3471,  3472,  3476,
    1724,  2649,     0,     0,  1619,  1624,  1617,  1621,  3475,     0,
       0,     0,     0,  1638,  1637,     0,     0,     0,  3475,  2093,
    1641,  2108,     0,     0,  1898,  1949,     0,     0,     0,  1854,
    1855,     0,  1596,   720,   719,     0,   723,   799,     0,   740,
     728,   717,  2532,  2531,     0,     0,  1467,  1470,     0,     0,
    2276,     0,     0,  2625,  2282,  2263,  2273,     0,     0,     0,
    3311,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3226,  3196,  2625,     0,     0,  3257,     0,     0,  3250,  3251,
       0,     0,     0,  3223,  3224,  3225,     0,  2733,  2734,  2680,
    2682,     0,  2681,  2731,  2729,  2732,  2727,  2728,  2726,  2730,
    3232,     0,  3205,  3206,  3207,     0,     0,  2412,  2423,  2455,
    2456,  2433,  2430,  2380,  2451,  2165,  2390,     0,  2603,     0,
       0,     0,     0,  2411,  2381,     0,  2404,  2362,  2452,  2086,
    2444,  2377,  2378,  2024,  1996,     0,     0,  1986,  2027,     0,
    2027,  1988,  1989,  1996,     0,  1996,  1991,   477,  2632,     0,
    2637,     0,     0,   562,  1441,  1481,  1473,  1480,  1477,  1492,
    1490,  1479,  1187,  1186,     0,  1493,     0,  2309,  2310,    81,
      83,  2308,    84,     0,  2493,  2494,  2487,  2506,  2482,     0,
     414,   424,   416,   420,   421,   422,   417,  3298,  3299,  3291,
    3294,  3292,  3293,  3297,  3300,  3301,  3288,  3295,  2145,  1415,
    1413,  1412,  1414,  1403,  1409,  1410,  2527,  2525,  2520,  1390,
       0,  1373,  2354,  2165,     0,  3564,   144,  1132,     0,   162,
    3416,     0,     0,     0,     0,     0,     0,   826,   203,   274,
       0,   272,  3534,   256,  3538,  3522,     0,   145,     0,   160,
    3531,   254,  3537,     0,  2675,  2218,  2221,     0,  2210,  2212,
    2213,  2692,  2215,     0,  3268,     0,  2202,  1553,  1558,  3448,
       0,  2089,  2145,  1596,  1597,  1597,  2647,     0,     0,  2303,
    2296,  2283,  1586,  1559,  1520,  3451,  1507,  3192,     0,     0,
    1243,     0,     0,     0,   261,   264,   262,   263,   664,   663,
       0,  2442,   657,  2290,  2290,   217,  2290,  2290,   216,   218,
       0,   212,   209,   219,  2290,  1263,   205,     0,     0,     0,
       0,  2165,     0,     0,     0,   223,     0,     0,  2442,   637,
     616,   617,   620,   621,   622,  1132,     0,  3391,  3390,     0,
    3406,     0,     0,  3408,     0,  3407,  3405,  3373,  3387,     0,
    1260,     0,  1266,  1268,     0,     0,  3501,  1420,     0,   286,
     327,     0,   529,     0,     0,  2165,     0,  2165,  2165,     0,
       0,  2165,     0,  2165,     0,     0,     0,     0,     0,     0,
       0,  2165,     0,     0,     0,     0,  2165,     0,  1458,     0,
       0,     0,     0,  2442,   646,     0,  2290,   606,   623,   624,
     627,   628,   629,   630,   631,   634,   632,   633,     0,     0,
     291,   292,   362,   554,  1074,  1072,  1075,  1073,     0,  1070,
    1071,  1096,  1100,  1137,     0,  1137,   344,   347,     0,   351,
     350,     0,     0,  1001,   382,   381,   379,   477,   369,   377,
     371,     0,   378,  2173,  2174,  2171,  2169,  2172,  1571,  1570,
       0,  2329,  1573,  2250,  2344,  1996,  2662,  2088,     0,  2338,
    2086,     0,  2343,  2227,  3326,   678,   877,  3385,  1362,     0,
     363,     0,     0,   498,  3400,     0,  3420,     0,     0,     0,
       0,     0,     0,     0,     0,   517,  2311,     0,  1492,  1496,
    2547,  3279,  3280,  3278,   510,     0,   506,   498,   282,     0,
     540,     0,   579,   581,   541,   589,   583,     0,  1927,  1957,
       0,  1076,  1076,  1062,  1084,  1944,  1938,  1941,     0,  1076,
    1946,  1076,  1939,  1076,     0,     0,  1936,  1937,     0,     0,
       0,  1866,  1863,     0,     0,     0,  1915,     0,     0,     0,
       0,     0,  1652,     0,  1849,  1871,  1869,     0,     0,     0,
       0,     0,     0,     0,     0,  1877,  1709,     0,  1707,     0,
    1708,     0,  1710,     0,     0,  1859,     0,  1678,  1697,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1952,     0,
       0,  2181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2653,     0,     0,     0,  1150,  1156,  1159,
    1160,  1162,  1154,     0,  1830,     0,     0,     0,  1562,  2012,
    3477,  1528,     0,     0,     0,  3469,  1586,  3473,  3459,     0,
    3474,  1909,  1907,     0,  1635,  1631,     0,  1629,  2092,  1651,
    1650,     0,     0,     0,  1639,  2110,  2109,     0,  1897,     0,
       0,  1950,  2650,  1597,  1845,  1596,   730,     0,   722,     0,
    2165,   725,   739,     0,   751,     0,     0,     0,   393,     0,
    1471,     0,     0,  2280,  2281,  2625,     0,     0,     0,  2279,
    2641,  2640,  2652,   805,     0,  2052,     0,  3309,  3389,     0,
       0,     0,     0,     0,     0,     0,  3188,  3240,  3231,     0,
       0,     0,     0,  3255,  3249,  3246,  3247,     0,     0,     0,
    3230,  3204,  3210,  3209,  3212,  3214,  2400,  2399,     0,  2453,
    2145,  2160,  2150,     0,  2153,  2152,  2155,  2373,  2392,  2394,
    2454,  2026,  2019,     0,  3454,  1586,  2016,  2017,  2025,  1996,
       0,     0,  1990,  1987,  2028,     0,  2027,  2027,  1996,     0,
    1970,  2316,  2319,     0,  1969,  1575,     0,  2636,     0,     0,
     324,     0,   561,     0,  2046,  3194,     0,     0,  2485,     0,
    2480,  2483,     0,     0,     0,  3286,     0,  1405,  1411,  1389,
       0,  1396,  1394,     0,     0,  2353,  3553,  3566,     0,   161,
       0,  1227,  1229,  1228,  1212,  1213,     0,   139,   141,     0,
       0,  2290,  2290,  2290,  2290,  2290,     0,  2290,  2290,  2290,
    2290,  2290,     0,  2290,  2290,  2290,  2290,  2290,  2290,  2290,
    2290,  2290,  2290,     0,     0,  2290,  2290,   923,   134,   693,
     707,   827,   830,   871,   855,   856,     0,  1132,   204,     0,
    3542,  3541,  1596,     0,   270,   273,   275,   269,   318,     0,
     232,  3501,     0,   318,     0,   147,  1121,  2214,     0,     0,
    2646,  2139,  2142,  1587,     0,     0,  1534,  3449,     0,  2090,
    2101,  1555,  1589,  1599,  1592,     0,  1597,  2299,  1596,  2300,
    1516,  1562,  1520,     0,     0,  1508,  1509,   876,   875,   266,
     265,   278,   279,  2191,  2192,  2189,  2190,   670,   683,  2193,
     684,   658,  2165,  2165,  2295,  2294,  2165,  2165,   211,   208,
    2293,  2292,  2165,  2165,   206,   227,   226,   228,   229,   231,
     230,   225,  1259,     0,   671,   672,   638,     0,   618,  1350,
    1350,     0,  1350,     0,     0,  1350,  2290,     0,     0,   711,
    1368,  2290,     0,     0,     0,     0,     0,  1334,     0,  1350,
       0,     0,     0,     0,     0,  1280,  1333,   828,  1240,  1279,
    1281,  1293,   707,     0,  1311,  1336,  1337,  1335,  3394,     0,
    3396,  3379,  3378,  3377,  3374,     0,  2165,  2165,  2165,     0,
    2165,  3415,  3417,  3429,     0,     0,   237,  3503,     0,  3505,
       0,  1424,     0,  1423,   537,   533,  2165,  2165,   103,  2165,
      95,    96,    91,   123,   124,    93,    94,    99,    98,   100,
     101,   104,   105,   102,    97,    92,   127,   129,   128,   106,
     125,   126,    90,   677,   676,   675,   674,   647,     0,     0,
    2442,   625,   361,     0,  1082,  1080,  1080,     0,  1080,     0,
    1128,   977,   979,   978,   980,   981,  1082,  1082,  1080,  1080,
     293,   357,     0,  1033,  1237,  1032,   346,   342,  1061,  2165,
     359,   380,  1572,  1574,     0,  2086,  2665,     0,  2162,  1596,
    2333,  2335,  2226,   596,  2625,   573,   502,   571,  3401,     0,
    3319,  3324,     0,  3382,  3381,  3404,  3404,  3404,  3404,   519,
       0,  2260,  1487,  1492,  1496,     0,  1488,  2558,   500,   504,
     476,   555,   544,   477,     0,  1958,  1928,  1929,  1943,  1945,
    1942,  1931,  1948,  1935,  1940,  1947,  1933,  1726,  1756,  1730,
    1729,     0,     0,     0,  1786,     0,  1913,  1896,  1894,     0,
       0,  1763,     0,  1765,     0,     0,  1851,  1819,  1892,  1789,
    1823,     0,  1768,     0,  1795,  1793,     0,  1706,  1704,  1705,
       0,  1776,  1803,     0,  1695,  1804,     0,  1835,  1782,     0,
    1784,     0,  1785,     0,  1814,     0,  1787,  1817,  1841,  1722,
    2183,  2182,  2180,  1737,  2165,     0,  1790,  1754,     0,     0,
    1827,  2654,  2655,     0,  1829,     0,     0,  1161,  1147,  1148,
    1149,     0,  1151,  1153,  1155,     0,  2165,  1843,  1654,  1653,
    3466,  1596,  3478,  3480,     0,  3470,  1529,  2013,  3467,  3458,
    2011,  2007,  2009,     0,  1627,     0,  1636,  1633,     0,  1630,
    2112,  2111,  2142,     0,     0,  1846,  1599,  1856,     0,   731,
     732,   734,  1597,   748,     0,   801,   726,     0,   715,     0,
     730,   718,  1468,   578,  2277,  2286,     0,  2625,  2274,   701,
    2625,     0,   805,     0,  1562,  1567,   711,     0,     0,     0,
    3306,  3305,  3304,  3303,  3228,  3227,  3260,  3259,  3253,  3252,
    3254,     0,     0,  3233,     0,     0,  2187,  2188,  2186,  2184,
    2185,  2391,  2149,  2145,  2387,  2021,     0,  1575,  2001,  2002,
    2004,  1586,  2015,     0,  1967,  1996,     0,     0,  1975,  1996,
    1971,  1973,     0,  2086,     0,     0,  2079,   576,  2638,  1594,
     566,   563,   564,     0,  2049,     0,  2050,  2047,  2048,    82,
    2165,     0,     0,   432,   427,   435,   429,   431,   430,   436,
     437,   438,   439,   433,   428,   434,   426,   425,     0,  1416,
       0,     0,  2355,  2356,  3322,     0,   137,     0,     0,  2290,
     694,  2165,  2165,  2165,  2165,   853,   874,  2165,  2165,  2165,
       0,     0,  2290,  2165,     0,     0,  2165,  2165,  2165,  2165,
       0,     0,  2165,   861,   862,   860,  2165,  2165,  1234,     0,
    2788,     0,     0,     0,   893,   894,   896,   897,   898,   899,
       0,   924,   900,   822,  1188,  1188,   926,  2657,  2558,   706,
     708,  1132,   831,     0,   136,  1596,   167,   268,   271,   316,
     322,   321,   259,     0,     0,     0,   314,   320,   319,     0,
     891,   892,   890,   889,     0,  3501,     0,  2219,  2211,  2216,
       0,  2143,  2144,  2141,  3268,  1596,  2098,     0,     0,  1561,
       0,  1593,  1603,  1602,  2644,  2648,  2307,     0,     0,  2301,
    2305,  1506,  1586,  1563,  1586,     0,  1510,  1559,  1521,  1562,
     210,   215,   214,   207,   220,   213,   224,   619,  1234,   822,
    1351,     0,     0,  1315,  1318,  1316,   820,  2252,  1461,  2252,
       0,     0,  2252,     0,  2254,     0,     0,     0,  2252,  2252,
       0,  1461,     0,   709,  1371,  1369,  1370,     0,     0,  1461,
    1327,  1275,  1328,     0,  1276,  2252,  1461,  1295,  1461,  1461,
       0,   829,  1132,  1277,  1278,   923,  1365,  3395,  3393,  3392,
       0,  3375,  3411,  3409,  3410,  3413,     0,     0,  3412,  3414,
    3430,     0,     0,     0,  1265,     0,   240,   238,   248,  3502,
       0,  1251,  2625,  3505,  1426,  1427,     0,     0,     0,   116,
     118,     0,   120,   122,     0,   112,   114,   608,   673,   626,
     290,  1083,  1006,  1081,  1010,  1011,   298,  1137,     0,     0,
    1114,  1137,  1143,  1137,  1143,  1065,   370,  2344,  2337,  2163,
       0,  2339,   364,     0,  3404,  3418,  3418,  3418,  3418,   327,
     515,   518,  2312,  1489,  1497,  2560,  2559,     0,     0,   477,
    1137,  1137,  1137,  1867,     0,     0,     0,     0,  1919,     0,
       0,     0,     0,     0,  1725,     0,  1847,     0,     0,     0,
       0,  1062,  1685,  1687,  1683,  1686,     0,  1076,  1689,     0,
    1043,  1076,  1692,  1694,  1679,  1680,  1681,  1682,     0,     0,
    1961,  1962,     0,  2201,  2200,  2199,     0,     0,     0,     0,
    2656,  1145,  1832,     0,  1158,  1152,  1150,  1157,     0,  2014,
    3479,  1532,  3468,  1562,     0,  1910,  1632,     0,     0,  2114,
       0,  2097,     0,  1899,  1857,   735,     0,     0,   802,     0,
     755,     0,   753,   729,     0,     0,     0,     0,  3454,  2275,
    2278,  1562,  2642,  2653,  1586,  1563,  1586,   810,  1596,  1993,
    2053,  3308,  3307,     0,     0,  3211,  3213,  2393,  2018,  1567,
    2020,  2079,     0,  2006,  2005,  3476,     0,  1963,  1996,  1996,
       0,  1963,     0,     0,  2318,  2136,  2320,  1578,     0,  1569,
    1569,  1576,  2044,  3475,  2165,   565,  1296,     0,  1297,  1308,
    1310,  1495,     0,  2512,     0,  2510,  2486,  2513,     0,  1395,
    1397,     0,     0,     0,     0,     0,  2198,  2197,   850,   843,
     842,   845,   844,   847,   846,     0,   839,   836,   848,   838,
     863,     0,   851,   833,   887,   888,   886,   857,   864,   834,
     835,   841,   840,   837,   879,   884,   882,   881,   880,   885,
     883,   852,   870,   849,   865,   925,  1235,     0,     0,  2660,
     689,   685,   923,     0,     0,     0,  1188,   916,   822,     0,
     901,  1234,  1189,   822,   822,     0,     0,   687,   812,   832,
     869,   868,   866,   867,   169,   195,   299,  3535,   599,   600,
       0,     0,  3505,   288,  3529,   259,     0,     0,  1122,  2561,
    2142,  1588,     0,     0,  2205,  2207,  2099,  2100,  2095,  2091,
       0,  2102,  2104,  1601,  1600,     0,  1597,  2297,     0,  1538,
    1557,  1536,  1522,  1511,  1512,  1562,  1519,  1547,  1546,     0,
    1461,  1338,     0,  1313,     0,     0,     0,  1287,     0,     0,
    2252,     0,  1340,  1339,     0,     0,     0,  1348,  1349,     0,
    2132,  2134,  2142,     0,  1331,  1346,  1347,     0,     0,     0,
       0,  1303,     0,  1292,  1350,  1350,  1312,     0,     0,  1367,
    1314,  3397,  2168,  2167,   247,   236,     0,     0,  1267,  1269,
       0,     0,  1270,  3504,     0,  1249,  1432,     0,   327,   108,
    2165,   109,  2165,   107,  2165,  1008,   296,     0,  1004,  1005,
    1007,  1009,  2164,  3421,  3418,     0,  3317,  3316,  3315,  3314,
     521,   520,     0,     0,   540,     0,  1930,  1932,  1934,  1780,
    1781,  1916,  2142,  1914,  1921,     0,     0,  1920,  1813,     0,
    1764,     0,  1848,     0,  1824,  1794,  1792,  1777,  1688,  1684,
    1691,  1044,  1690,  1137,  1807,  1783,  1815,  1738,  2165,  1791,
    1797,  1798,     0,  1831,  2165,  2136,  2010,  1634,     0,  2117,
    2116,     0,     0,  2142,  2142,   733,   736,  2165,   800,   728,
       0,     0,   752,     0,   716,  2285,  2287,   703,   705,  1586,
     808,   807,     0,   700,   811,   809,   698,   806,  3235,  3234,
    1596,  1998,  2003,     0,  1976,     0,  1980,  1985,  1981,     0,
    1972,     0,  2161,  1569,     0,     0,  1997,  2041,  1595,     0,
    1491,     0,  2051,  2508,  2165,     0,  2484,  3296,     0,     0,
       0,  2142,  1232,     0,   859,  2505,   858,   695,     0,     0,
    3454,   826,   895,     0,   822,  1184,  1185,  1234,  1166,  1209,
    2657,  1234,  1234,   930,   918,   928,  2659,   813,  2625,     0,
     497,   497,     0,   196,   197,   309,     0,   300,   302,   276,
     260,     0,     0,   603,   601,   602,     0,     0,   146,     0,
     289,     0,  3532,  3528,  3505,     0,  2569,  2140,  1597,  2203,
    1596,     0,     0,  2645,  2306,  2304,  3448,  1586,     0,  1298,
       0,     0,  1286,     0,  1447,  1128,  1323,     0,  1282,  1325,
    1326,  1362,  1284,     0,  2135,   710,  1291,     0,  1365,  1283,
    1305,  1289,  1317,  1366,   234,   239,   249,   250,  1253,  1559,
    1525,  3508,  3514,     0,  1433,  1429,  1430,  1425,   534,   117,
     121,   113,     0,     0,  3318,     0,  3425,  3419,  3423,     0,
       0,   547,   586,     0,  1918,  1879,  1922,  1923,     0,  1850,
    1852,  1693,     0,  1146,     0,  2145,  2113,  2107,     0,     0,
       0,     0,     0,     0,  2126,  2118,     0,  2096,  1903,   803,
       0,  1596,   741,   758,   757,   754,   804,  2643,  3448,  2022,
    1575,     0,     0,     0,     0,     0,  2317,  1577,  1569,  1569,
    2045,     0,     0,   327,  1309,  2511,     0,     0,     0,  3268,
       0,  1231,     0,  3268,     0,     0,   690,   692,   707,     0,
    1234,  1209,  2657,     0,  1170,     0,   902,     0,   906,   908,
     932,   927,   919,   940,     0,   872,   497,   497,   170,   175,
     176,   180,   178,   189,     0,     0,   182,     0,   182,  1598,
     198,   312,   310,   311,     0,   317,     0,   277,   556,  1596,
     245,   315,  3530,     0,   148,     0,     0,     0,     0,  2562,
    2564,     0,  2220,  2208,  2206,  2105,  2103,  1537,  1518,     0,
    1300,   821,     0,     0,  1365,  1288,  1332,  1324,  1322,  1461,
    2133,     0,  1321,  1304,  1306,  1408,   241,  1271,   477,  1562,
    1525,     0,     0,  3459,  3510,  3509,     0,  3506,  1428,     0,
    1435,   297,   294,     0,  3424,  3422,  2313,  1991,   540,  2142,
       0,     0,  1762,  1739,  1833,  1586,     0,  2123,     0,     0,
    2121,  2120,     0,  2115,  2122,     0,     0,   749,   765,   761,
       0,   763,   764,   786,   699,  1562,  2079,  1977,     0,  1982,
       0,  1974,  1580,  1579,  2034,     0,  2033,     0,  2039,  2043,
    2634,   567,  2514,     0,  3268,  1199,  2142,     0,  1201,   854,
       0,  2558,   920,   914,   910,     0,     0,  1169,     0,  1174,
    1210,     0,   904,     0,     0,  1164,   958,  1111,     0,   961,
       0,   931,   933,  1104,  1105,   935,     0,     0,     0,     0,
       0,     0,  1088,     0,  1091,     0,     0,   929,     0,   941,
    1087,  1094,  2658,   697,   873,     0,     0,     0,   177,   179,
     181,   194,   200,     0,   199,     0,   255,   313,     0,     0,
     303,   301,  3536,   329,  3523,   237,   246,   556,     0,     0,
       0,     0,  2563,     0,     0,  2570,  2572,     0,     0,     0,
    1299,  1330,     0,  1320,  1285,   711,     0,  1290,     0,   243,
     251,  3507,  1563,  1586,  1586,     0,  3511,  1559,  1526,  1562,
    3452,     0,     0,     0,  1434,  1439,     0,  1436,  1438,     0,
       0,  2548,   587,  1917,  1925,  1924,  1531,  2124,     0,  2125,
    2128,     0,     0,  2129,     0,   745,   747,  1597,     0,   742,
       0,   759,     0,  2290,  2290,     0,  2290,  2290,  2290,  2290,
     779,   787,   789,     0,  2023,  1999,     0,     0,  2029,  2029,
    2040,     0,  1197,     0,     0,  2290,  1341,  1200,  1225,  1207,
       0,  1230,  1233,  1341,  1202,  1224,  1205,     0,   686,     0,
       0,   912,  1167,     0,  1171,  1172,  1173,     0,  1165,     0,
       0,     0,     0,   959,   960,  1112,   934,  1110,  1103,  1102,
       0,  1093,     0,     0,  3475,   970,   971,  1089,   968,   969,
       0,     0,   949,     0,     0,  1095,  1086,   942,     0,   497,
       0,   497,   555,   173,   171,   185,   183,   168,   308,     0,
       0,   557,   330,     0,   248,  3533,  2567,  2568,     0,  2565,
       0,     0,  2571,  1319,  1302,     0,  1329,  1294,     0,   242,
       0,   235,  1586,  1539,  1542,  1527,  3513,  3512,  1562,  1524,
    1563,  1548,  1549,     0,  3515,     0,     0,  1431,     0,   295,
    2314,  2322,     0,  1121,  2119,  2127,  2131,  2130,   743,     0,
       0,   750,   772,   762,   768,     0,  2290,     0,     0,  2290,
       0,     0,     0,     0,     0,   756,   788,  2290,  1979,  1984,
       0,  2037,  2035,   222,     0,     0,  1341,  1198,  1223,  1222,
    1203,     0,  1217,  2165,   140,  1343,  1342,  1208,     0,   142,
    1206,   917,     0,     0,     0,  1168,     0,     0,     0,     0,
       0,     0,  1109,  1108,  1106,  1107,  2606,  2605,     0,  1604,
    1092,     0,   944,  1101,   943,   188,   192,   187,   190,     0,
    1598,   318,   318,   306,     0,     0,     0,     0,  2566,  2574,
    2573,  1301,     0,   244,  1543,     0,  1586,  1550,  3453,  3516,
    3517,  1437,     0,     0,  2549,   749,   746,   737,   772,     0,
     770,     0,   766,   760,   767,     0,   798,   792,     0,   794,
     795,   793,   790,   783,     0,   781,     0,     0,  2030,     0,
       0,     0,  1214,  1215,   138,  1204,  1226,  1216,  1345,  1344,
    1221,  1220,  1218,  1219,     0,     0,     0,  1180,  1179,     0,
       0,  1176,  1175,  1197,     0,  1199,  1201,   967,     0,  1090,
     936,   936,   950,   556,   556,   174,   255,   259,     0,     0,
       0,   555,  1596,   250,     0,  1541,  1523,  2321,  2323,  2575,
     744,   769,     0,   777,   773,   775,   778,   797,   796,     0,
     780,     0,   791,  2032,  2031,  2046,     0,     0,  1197,     0,
    1183,  1181,  1182,     0,     0,   903,  1197,   907,   909,  1605,
       0,   947,   937,   939,   946,   952,   953,   951,   954,  3539,
    3539,   172,   186,   259,   307,   304,     0,   558,  3524,   233,
    1307,     0,  2561,   771,     0,     0,   786,   785,   782,     0,
       0,   915,   911,  1197,     0,     0,   905,  1606,   938,   945,
     955,   957,  3540,   193,   191,   184,     0,     0,     0,     0,
    2569,   776,   774,   784,  2038,  2036,   913,  1178,  1177,   956,
     305,   559,     0,     0,  2577,  3525,  2576,     0,  2581,  3520,
       0,     0,  2588,  3518,  3519,     0,  3526,  2579,  2580,  2578,
    2583,     0,     0,  2585,  2586,     0,  2550,  3521,   477,  2587,
    2582,     0,  2589,  2591,     0,  3527,  2584,     0,  1596,  2590,
       0,  1597,  2592
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5488, -5488, -5488, -5488,  2432,  4793, -5488, -5488, -5488,  4454,
   -5488, -5488, -5488, -5488,  3795, -5488, -5488,  1759, -5488, -5488,
   -5488, -5488, -5488,  2134, -5488,   598, -5488,   603, -5488,   608,
   -3225,  -543,  4503, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488,   268,   261,   274, -5488,
     277, -5488, -3447, -5488, -5488, -5488, -5488,   275, -5488, -5488,
   -3673, -5488, -5488,  2286, -3015, -5488, -5488,   152,  1623, -5488,
   -5488,   442, -5488,    82, -5488, -5488, -5488, -4481,   -76,  -282,
   -5488,    91,     9, -2712,  4394, -4824,   820,  1709, -5488, -5488,
    2312, -5488, -5488, -3104, -5488, -5488, -2114, -5488, -5488, -5488,
     723, -3671,  1530, -5488, -5488,   279, -5488, -5488, -5488, -5488,
   -5488, -3934,  -173,  -171, -5488,  -581, -2968, -5488, -5488, -2245,
   -5488, -5488,  4367, -5488, -5488, -5488,  2133, -5488, -4062, -5488,
   -4758,  4950, -5488,  -639, -5488, -5488, -5488,  2151, -5488, -5488,
     840,  1517,  3565,  3002, -5488, -5488, -5488, -5488,  3117, -5488,
    2527, -5488, -1765,  3986, -5488, -5488, -5488, -5488, -5488,  3064,
   -2525, -5488, -5488, -5488,  1808, -5488,  -819, -5488, -1956,  -913,
    4831, -5488,    52, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -1321, -5488, -5488, -5488, -5488, -5488, -5488, -3898,
   -2108,  2075, -5488,  2101, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488,   995, -5488, -5488, -5488, -5488,    65, -5488, -5488,
   -5488, -5488, -5488, -5488,  2909, -5488, -5488,  4977, -5488, -5488,
   -5488, -3531, -5488, -5488, -5488, -5488, -5488, -5488,    71, -5488,
   -5488, -5488, -5488, -4383, -5488, -5488, -5488, -2099, -5488, -5488,
   -5488,  1279, -5488, -5488,  3491, -5488,  3492,  3495, -5488,  3498,
   -5488, -2958, -5488, -5488, -5488, -5488, -5488, -5488, -5488,    72,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,  4408, -5488, -5488, -5488, -3236, -5488,
   -5488, -3298,  3712, -5488, -2573, -5488, -5488, -2656, -5488, -5488,
   -2497,  1819, -5488, -5488,   -23,  1812, -5488, -1710, -2668, -2642,
   -5488, -5488, -5488, -2732, -2726,  -811,  3574, -1382, -3098, -5488,
   -5488, -5488, -5488, -5488,   205,   520, -5488, -5488, -5488,   362,
    1650,  2268, -5488, -3965, -5488, -5488,   722, -5488, -5488, -5488,
   -5488, -5488,  1378,   610,  1376, -5488,   941,  3283, -2931, -5488,
   -5488, -5488, -5488, -5488, -5488,   -49,   255,  -143, -5488, -3763,
     612, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -3212,
   -5488, -5488, -5488,  -271, -5488, -5488,  -221, -5488, -5488,  -265,
   -5488,    94, -5488, -5488,  1805,  1382, -5488, -5488,   945, -4439,
   -5488, -5488,  3081, -1891, -5488,  -726, -5488, -3845,  1682, -3472,
   -3346, -5488, -5488,   377, -1224, -1189,  -145, -5488, -5488, -5488,
   -5488,  1128, -5488,   842,  1686, -3914, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -3913, -3912, -5488, -4865, -5488, -5488, -5488,
   -4587, -5488, -5488, -5488, -5488, -5488, -5488,  -176, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5487, -5488, -5488,    56,    42,
   -5488,   166,   836, -5488, -3498,  -987, -5488, -5488, -3487, -3455,
   -3452, -5488, -1396, -3488, -1386, -3448, -5488, -5488, -5488, -1354,
   -1366,  1693, -1180, -1287,  1840,  -994,  -654,  2130,    48, -5199,
   -2881, -1107, -1038, -5488, -5488, -3386, -3318, -5488,  2892, -3369,
    -656, -1911, -3334,    -7, -5488, -5488, -1739, -1777,  2361, -5488,
    3707, -2094, -1014, -2124,  2058, -5488, -5488,  1473, -5488, -1142,
    1471, -5488, -5488, -5488,  1480, -5488,  -188, -5488, -5488, -5488,
   -5488, -4525, -5488, -2621, -3347, -5488, -5488,  5375,  5376, -3067,
    -141,  -140, -5488, -5488, -5488,   424, -5488, -5488, -3046,   -19,
     121,   123, -3325, -4748,   449, -3138,  3704, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488,  1717, -2104, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -4638, -4128, -5488, -5488,
    1171, -3642, -3468, -3429, -3910,  4644, -5488, -5488, -5488, -5488,
    4514, -3545, -3951, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
    3896,  2090, -5488, -5488,  2458, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,   366,  2469, -5488, -5488, -5488, -5488,
   -5488,  3022, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
      37, -5488, -5488, -5488, -5488, -5488,   565,  3773, -5488, -5488,
   -5488, -5488,   -20, -5488, -5488, -5488, -5488,  3345, -5488, -5488,
   -5488, -5488,  3216, -5488, -5488, -5488, -5488, -5488, -5488,  2209,
   -5488,  2860, -5488, -2556, -5488, -5488,  1616,  -526, -5488, -5488,
    4572, -5488, -5488, -5488,  1829, -5488, -5488,   382, -5488,  2092,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  3099,   852,
      75,  4585, -3867, -2018, -5488, -1307, -1308, -5488, -5488, -3655,
   -5488, -3096, -4261, -5488, -5488,  3876, -1998, -4048,  2444, -1766,
   -5488,  -550, -3327,   -11,  1494, -5488,  2339,  1570, 11255, -5488,
   -1624, -1622, -5488, -5488,   -43, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488,  2777,  2783, -5488, -5488,  4210, -2778,
   -5488, -5488,  -795, -5488, -2902, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488,  2083, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  4160,
   -1618, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -1293, -5488, -2901, -5488, -5488, -5488, -5488, -5488, -5488,
    -624, -5488,  4305, -5488,  4336, -5488, -3154, -1863,  2577,  2007,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488,  2589, -5488, -2155,
   -5488, -3730, -5488, -5488, -5488, -5488, -5488,  1037, -5488, -4107,
   -5488,  1543, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  2600, -5488, -5488, -2681,   202, -5488,   368, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488,   -99,  1017,   -96, -3706, -1564,
    2307, -5488, -5488, -1524,  4375, -1912, -5488, -5488, -5488,  2723,
   -5488,  1896, -5488, -5488, -5488,   639,   647, -5488, -5488,  2124,
   -5488, -5488, -5488, -5488,   770,   260, -5488, -5488, -5488,   636,
   -2706, -2156, -5488,   786, -4068, -1222, -5488, -1160, -5488, -1819,
    2063,   745, -2946, -5488,   581, -1583,  -653, -3153, -4415, -3374,
   -5488, -2158, -5488,  3188, -5488, -5488, -5488,   669, -5488, -5488,
   -5488,  1933, -5488, -1965, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488,  -674, -1116, -5488, -5488,  2993, -1300,  -535,
    5504,  -319, -5488, -5488,  -316, -5488, -5488, -5488, -5488,  4449,
    4198,  2958, -5488, -5488, -3342, -3076, -5488,  1117, -1139,   439,
    2488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  1476, -5488,
   -3408, -5488, -5488, -5488,  -312, -5488, -5488, -5488,  1516, -5488,
      61,  5335,  -311, -5488, -5488, -5488,  5169, -5488, -5488, -5488,
   -5488, -5488,  3799, -1415,  5177, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488,  3368, -5488, -5488, -5488, -5488, -5488, -5488,
    4159,  5343,  -668, -1684, -5488,  -842,  3371,  2680,  -812, -5488,
   -5488, -5488,  4705,  5350, -5488, -5488,  5519, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488,  3326,   775, -5488, -5488,
     787, -5488, -5488, -5488, -5488,  4062, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,  1746,
     -48, -5488,   546,   -74, -5488,   372, -5488, -5488, -5488, -5488,
   -5488,  -113, -5488, -5488,  -117, -5488, -1317,  5025, -1821, -5488,
   -1758, -3466, -5488, -1683,  2113, -5488, -5488, -5488,  3373, -5488,
   -5488, -5488, -5488,  1601, -5488, -5488, -3634,  -821, -1666, -3210,
      93, -5488, -5488, -5488,  -452,     0,    47,  1855, -1259, -5488,
   -5488,  2834,  4155,    50,  2903, -5488,  5108,   721,  -457,  -718,
   -1066, -5488,  8706, -5488, -5488, -5488, -5488, -5488,    34,  -594,
    -584,   128,  -634,    73,   194,    11, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  2738, -5488, -5488, -5488,  1588, -5488,  5383, -5488,  3584,
   -1759,  5388,  3466,  2774,  2770, -5488, -5488, -5488, -5488, -1719,
   -5488, -5488, -1693,   209, -5488,  3789, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488, -5488, -5488,  4066,  -561,  -555,  4265,  5400,  4914, -5488,
    4542, -5488, -5488, -5488, -5488, -5488,  1907, -5488, -1973,  2799,
   -1453, -1531, -5488, -5488,  3217,  1491, -5488,  2400, -2547, -3213,
   -5488,  2646, -2720, -5488, -5488,   711, -5488, -5488, -5488,  1906,
      21,  5369,  4808, -5488, -5488, -5488, -5488, -3129, -4768,  -750,
   -5488, -5246, -5488, -1995, -5488, -1295,  2158, -3708, -5488,  -499,
   -5488, -5488, -3622, -3619,  1600, -1558,  2742,  1182, -5488, -5488,
   -3422,  1527,  5603,  5604,  5605,  -294, -5488, -3358, -5488, -4203,
   -5488,   259, -5488, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
   -5488,  3332,    74, -5488, -5488, -5488, -5488, -5488, -5488, -5488,
    4098, -5488,    30, -3900, -5488, -5488,  2694, -5488, -5488, -5488,
   -5488, -5488, -5488, -5488, -5488, -5488
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,   464,   729,  1994,   465,   466,   467,   468,   469,  1251,
    1252,   470,  1253,  1925,  1928,  2691,  3379,  3380,   471,   702,
     472,  2108,  2896,  2897,  4744,  4745,  4738,  4739,  4741,  4742,
    2898,   801,   802,   473,  3437,  3438,  4942,  4537,  4538,  2747,
    4041,  4615,  2008,  2007,  2009,  2013,  2012,  2766,   737,  5015,
    5279,  5637,  5930,  5804,  5458,  5459,  5460,  5643,  5467,  5932,
    5465,  5931,  5461,  5800,  6014,  5798,  6013,  5462,  5282,  5283,
    5463,  2767,  4027,  3515,  3516,  1307,  3431,  3524,  3525,  2763,
    4604,  4724,  5516,  4728,  5679,  5831,  5655,  3552,  5112,  5517,
    5518,   639,  3443,  3444,  2072,  5017,  5289,  4034,  4035,  4036,
    3440,  3441,  5290,  2824,   474,   794,  1378,  2100,  2101,  5299,
    3608,  3609,  3610,  5286,  5287,  5288,  5474,  4607,  5023,  4600,
    5016,  4601,  4609,  4602,  2674,   918,  2104,  2105,  5811,   817,
    1395,   818,   819,  2125,  1451,  2956,  2957,  2958,  2177,   820,
     821,   822,  2122,   823,  2981,  2921,  3670,  3671,  4264,   824,
    3637,  3638,  3639,  2985,  1143,  3640,   475,   476,   658,   667,
     659,  1140,  2542,  1141,   477,   478,   697,  1951,  1952,  1953,
    1954,  3396,  2704,  3390,  3391,  4526,   825,   826,  2199,   919,
     920,   479,   921,   640,  1572,  2287,  3698,   922,   923,   924,
     925,  1574,  2273,  2274,   926,   927,   928,   929,   930,  5466,
    3015,  3052,  3695,  3016,  3672,  3053,  2283,   931,   932,   933,
     934,  1575,   894,   895,  3031,  4279,  4781,   935,   615,   797,
     798,  2107,  2870,   799,  2871,  3561,  4737,   800,  1380,  2866,
    1382,  3702,   936,   937,  2291,  2290,  3699,   682,   938,  1241,
     621,  1394,  1909,  5652,  5653,  5935,  6107,  1910,  3363,  3952,
    4501,  4502,  4924,  2234,   860,  1507,   939,  1237,  2670,  1149,
    2550,  3703,   940,  2293,  2295,  2292,  3701,  5538,  2294,   941,
     650,   676,   638,  1505,   664,  5020,  5296,   773,   774,   809,
    2919,   775,  1390,  1352,  2077,  2850,  2851,  3530,  3531,  3597,
    3598,  3599,  2842,  2843,  2844,  2908,  2909,  2910,  2831,  2832,
    2833,  2081,  2828,  2829,   776,  1353,  1363,  2845,  2846,  2847,
    3603,  2912,  2913,  2914,  2915,  2848,  2224,  2849,  4087,  4018,
    5261,  5259,  5260,  4019,  5007,  3264,  5408,  4877,  4878,  4588,
    4589,  4590,  5083,  3370,   484,   653,  1123,  1781,  2533,  3857,
    3245,  3247,  2534,  3856,  4418,  4419,  4420,  3243,  3244,  5402,
    3249,  3854,  5557,  5955,  5714,  5715,  4422,  5719,  4428,  4871,
    4872,  5201,  5403,  5563,  5865,  5720,  5963,  5863,  5959,  5864,
    5961,  6085,  6034,  6035,  5875,  5974,  5975,  6039,  6086,  5730,
    5731,  5732,  3851,  5198,  3866,  4444,  4445,  5209,  4884,  5213,
    5278,  3426,  2066,  2067,  5063,  1303,   485,  4020,  4146,  4021,
    4022,  4955,  5633,  4023,  4024,  4025,  3665,  1858,  4981,  4967,
    4614,  4573,  4574,  4575,  4576,  4577,  5601,  5770,  5603,  5604,
    5760,  5904,  5759,  4578,  4579,  5451,  4997,  4677,  4580,  4581,
    4582,  5005,  5274,  5453,  5450,  5611,  5612,  6061,  6062,  5627,
    6012,  5628,  6068,  6099,  6100,  5613,   486,   652,  1729,  5785,
    5786,  5787,  1453,  4230,  1454,  2147,  1455,  4232,  1456,  1457,
    1458,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  2971,  2135,
    2136,  2933,  2131,  2132,  2130,  4754,  4752,  2196,  5629,  5630,
    2935,  2141,  2142,  2944,  5797,  5614,  5631,  5616,  1466,  4240,
    2149,  1814,  1815,  4617,  1828,  1829,  2968,  2186,  2969,  2070,
    2150,  2938,  2939,  2942,  4376,  5182,  4382,  4383,  4384,  3797,
    3798,  3799,  3800,  3801,  3196,  5617,  5000,  5444,  5596,  5599,
    5768,  6001,  4998,  4583,  5003,  1226,   738,  4584,  4585,  5886,
    5746,  5753,  5887,  5754,  5747,  5446,  3434,  5888,  5889,  5890,
    5756,  5749,  3984,  5250,  5251,  4985,  2948,   487,   556,  3535,
    1340,  1342,  1351,  3556,  2859,  2858,  1356,  1355,  2837,  3553,
    4176,  5348,   760,  4148,  5509,  5324,  5515,  4149,  4927,  4150,
    5500,  5670,  4151,  5340,  5513,  5676,  4928,  4929,  4152,  4153,
    4154,  5894,  5895,  5896,  4666,  1536,   778,   779,  1367,  1368,
    1369,  3010,  5100,  4687,   488,  2738,  2733,   489,  1277,  1278,
    1279,  1974,  1975,  2736,  2737,  3421,  3972,   490,  1245,  2685,
    1965,  2726,   491,  1265,  3413,  3414,  3415,  3967,   492,  1376,
    2097,  2098,  2863,  4183,  4736,  5116,  5357,  5530,  5353,  5696,
    5697,   493,   805,  1386,   494,   617,  2117,  2118,  2119,  2900,
     495,  1585,   565,   496,  1147,  1786,  1789,  1790,   497,  1244,
    1912,  1913,  1914,  1915,  3366,   498,  2265,  3034,  3035,  3036,
    3037,  2680,  3953,  2681,  2682,  3375,  4286,   499,   756,  3485,
    1328,  1329,  1330,  4648,  4073,  4074,  5688,  5521,  5522,  3812,
    3813,  3814,  2022,  3469,  4641,  5316,  5681,  5945,  2806,  5056,
    5839,  2807,  2024,  1324,  1325,  2794,  2808,  2027,  2776,  2043,
    3650,  3651,  4496,  4921,  2044,  2045,  5214,  2797,  2798,  1900,
    5422,  2799,  4063,  5646,  4631,  6009,  1606,  1517,  1249,  1088,
    1089,  1090,  1741,  1742,  5618,  1091,  1751,  2488,  4344,  4824,
    4825,  4826,  4827,  5173,  2409,  2410,  2528,  1092,  2395,  1093,
    1094,  1095,  1096,  1097,  1098,  1099,  1100,  1101,  1102,  1103,
    2523,  4325,  4326,  4806,  3238,  3239,  3240,  1104,  3078,  4311,
    3088,  1105,  1106,  1107,  1108,  1109,  3839,  1110,  4414,  5040,
    1111,  1735,  2474,  2355,  4798,  4316,  5151,  5155,  5156,  5157,
    5376,  2299,  3066,  3725,  4790,  4791,  4792,  3726,  3727,  3840,
    3201,  1627,  1628,  1595,  1596,  3775,  2661,  2662,  2663,  2664,
    2665,  4912,  4913,  5411,  5225,  5413,  5229,  3352,  3353,  2554,
    2555,  2666,  2667,  2668,  2669,  3923,  4902,  4400,  4854,  3817,
    3808,  3809,  3810,  3924,  3925,  3926,  3927,  4476,  4898,  4899,
    5565,  3343,  3929,  4475,  3935,  5881,  5577,  5578,  5981,  5980,
    5579,  5420,  5421,  5236,  5237,  4505,  4506,  4507,  3874,  2351,
    2352,  2425,  1958,  1959,  2300,  2211,  2994,  4060,  4627,  3223,
    3471,  4411,  5038,  4629,  5041,  5042,  2518,  3231,  3835,  3233,
    4859,  5191,  5192,  5394,  5547,  5548,  5553,  4157,  5080,  5081,
    2995,  2028,  3463,  4051,  4623,  1861,  1862,  2029,  2631,  3911,
    3912,  3659,  2986,  4718,  2987,  3802,  3784,  4933,  4088,  2323,
    2324,  4948,  4836,  2788,  4055,  5033,  5034,  5035,  2780,  2781,
    3458,  3459,  3460,  2030,  2782,  4046,  5029,   500,   692,   501,
    2231,  1502,  2230,  3387,  1388,  1794,  2206,  2207,   845,   557,
     637,   502,   641,  3032,   503,   665,  2552,   899,  1152,  1795,
    1796,  3265,  3862,  3867,  3266,  2048,  4434,  4435,  3005,  4101,
    4102,  4096,  3481,  4069,  2049,  2801,  4638,  3478,  4639,  3479,
    3382,  4281,  5142,  5700,   504,   674,  4493,  3941,  3942,  5850,
    5851,  1153,   505,   622,  2205,   840,  1479,  1482,  2213,  2991,
    4260,  1483,  1484,  2993,   841,   842,   506,   715,  3422,  3975,
    1283,  1883,  1884,  1885,  2647,   507,   671,  1227,  3910,  4473,
    2624,  1126,  1500,  1866,  1230,  1867,  2620,  3326,  1849,   508,
    1323,  1322,   793,   509,   510,   749,   566,  2016,   511,  1254,
    1944,  2702,  3960,  3961,  4511,  1945,  1946,  3388,  3384,  4934,
    4935,  5246,   512,   707,  1269,  1270,  1969,  1967,  3418,  2729,
     513,   654,  1127,  2537,   514,   642,   902,  1539,  2264,   515,
     516,   517,   904,  4287,  5853,  6029,   646,  2267,  1543,  5008,
    5306,  5489,  5490,  5492,  5665,  5666,  6082,  6128,  6139,  6132,
    6142,  6143,  6146,  6152,  6153,  1112,  1290,  1291,  1113,  5789,
    1114,  1115,  1116,   518,   519,  1239,   678,  1905,  1906,  3361,
    2673,  3359,  1907,  3869,  3870,  3475,  4052,  1117,  3871,  4986,
    1389,  2208,   700,   520,  1118,   604,   770,  1292,  3455,  2710,
    1178,  3301,  1120,   828,  3704,   942,   943,  1347,  1787,  2088,
    2089,  2711,   606,  1552,  3302,   829,  1180,   523,   607,   608,
     609,   610,   611,   612,   613,   614,   529,   670,  1162,  2569,
     530,  1338,  2811,  3376,  1805,  1188,  1834,  1823,  1833,  2594,
    3313,  2597,  3314,  3315,  4464,  3903,  4465,  3904,  1233,  2589,
    1806,  3905,  2582,  2583,  2584,  2585,  3894,  1820,  2578,  2063,
     531,   905,  2272,   649,  1545,  1546,  3043,   532,   673,   533,
    1960,  2723,  2724,  3406,  3964,  3407,   534,  1158,  1159,   535,
     888,  3429,  3022,  2220,  1350,  2221,  2248,   891,  1509,   892,
     893,  1523,  1520,  1526,  1522,  4165,  3546,  3547,  3027,  2228,
    2090,  2560,  3539,  4710,  2091,  2238,  3018,  3019,  2857,  5366,
    4172,  3550,  5136,  4270,  5367,  5368,   536,   679,   537,  5291,
     691,  1248,  1923,   538,   539,   540,   541,  1334,  4056,  4057,
    2810,  5524,  5843,  1336,  1337,  2031,  3819,  2056,  3204,  3205,
    1326,  3206,  3207,  3208,  3209,  1731,  1732,  3820,  4391,  4392,
    2046,   558,   559,   560,   561,   783,   784,  3555,  4178,  4731,
    4732,  5352,  5527,  6135,  6136,  2762,  4039,  5813,  6108,  6129,
    6148,  2769,  5025,  5301,  2770,  4043,  5483,  2759,  4038,  5292,
    2771,  2760,  6103,  4032,   542,  1297,  1293,   726,  1992,  1986,
    1988,  2744,  3425,   543,   544,   545
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     521,  1452,  1890,  1229,   651,  1569,  2017,  1335,   782,  1304,
    1305,   528,   603,  2155,  1176,  1225,  2026,  2025,   768,   757,
    2268,  2379,  2322,  2156,  2922,  2786,  2544,   831,  2791,   683,
    1816,  1819,  1821,  2513,   524,  2809,  1184,   832,  2572,  1831,
     788,  2633,  2057,  2632,  1499,  3057,  1863,  1349,  2988,  2470,
     522,  2139,   480,  2460,  2330,  2996,  2805,  2361,  3452,  2159,
    2789,  3374,  3622,  3685,  1863,   481,  2973,  4155,  1250,  4066,
    2215,   482,   483,   526,  2595,  2168,  1182,  2243,   889,  3818,
    1788,  2611,  2612,  1148,   890,  2174,  1183,  3652,   843,  3472,
     847,   848,   849,   850,   851,  2972,   853,   854,  2549,  2195,
     856,   857,  2579,  3705,  3706,  2187,  4156,   889,  3985,  4608,
    4399,  4231,  2591,  1160,  2133,  2792,  2068,  2225,  4209,  2479,
     686,  4237,  4233,  4262,  3371,   668,  4089,  2487,   525,  4595,
    2489,  2490,  1387,  2492,  2493,  2494,  2495,  2496,  2497,  2166,
    2499,  2500,  2502,  2504,  2505,  2506,  2507,  2508,  4064,   695,
    1589,  2069,  4089,  4089,  4234,  4078,  2777,  4235,  2178,  2179,
    2180,  4239,  1629,  2182,  4683,  4756,  2543,  1983,  1274,  4292,
    2618,  1281,  3909,  3055,  3051,  2812,  3730,  2193,  5011,  3389,
    1397,  2701,  4594,  3533,  2703,  3863,  3864,  3604,  2640,  4147,
    3931,  2544,  3058,  3605,   527,  3971,  5253,  4401,  4180,  3940,
    4402,  5302,  3430,  4412,  4642,  4663,  4664,  4665,  4488,  3534,
    4667,  4771,  4669,  2653,  2654,  4679,  4901,  4089,  4089,  2129,
    4734,  2960,  4684,  2137,   831,  2137,   831,  4164,  3008,  4695,
    1736,  1737,  3783,  2137,   832,  1569,   832,  4030,  2940,   663,
    2163,  5355,  2129,  5108,  2280,  4030,  4946,   789,  1956,  2137,
     790,  3601,  -688,  3594,   791,   792,  2899,   710,  1524,  2137,
    2099, -3289,  3966,  2175,   713,  5962,  1736,  1737,  2181,  3536,
    3529,  4094,  3028,  2775,  3029,  3030,   699,  3602, -2976,  2137,
    2129,  2129,  2191,  2192,  1725,  1727,  1728,  -483,   643,  2982,
    2741, -3369, -3352,  2982,  4118,   688,  1771, -3376,  2301,  2302,
    4221,  1736,  1737,  2157,  1736,  1737,  3193,  2312,  1348,  -691,
    2161,  1490,  1736,  1737,  3848,  2065,  1818, -2082, -3289,  1736,
    1737,   706,  1956,  1503,  1504,  2169,  2065,  2964,  2065, -3290,
    -696,  2543,  1736,  1737, -1242,  3502,  4171,  4037, -2667,  2369,
     753,  2372,  4758,  4849,  4861,  -814,  2315,  -815,  5362,  4333,
    2855,  4031,  5423,  -691,  1736,  1737,  4315,  2386,  2387,  4031,
    2390,  1736,  1737,  4785,   781,  1812,   647,  2834,  2396,  2397,
    2148,  2148,  2401,  4903,  2148,   708,  1736,  1737,  2316,  3908,
    1850,  2148,  1736,  1737,  1892,  1365, -3290,  2148,  4393, -3356,
    1921,  1856,  2853,  2317,  2151,  2151,  5809,   754,  2151,  4378,
    2188,  1738,  4949,  1739,  3118,  2151,  1736,  1737,  4098,  5452,
    2911,  2151,  1528,  1891,  3241,  6019,  3021,  1331,  4194,  3009,
    4951,  2315,  2154,  5018,  4412,  2158,  4458,  5280,  4114,  4115,
    5796,  4378,  2162,  5328,  2318,  2227,  1577,  1738,  2165,  1739,
    5836,  3345,  1163,  1736,  1737,  2982,  4953,  5216,  1317,  1736,
    1737,  4173,  4379,  2316,  1332,  3040,  1736,  1737,  1812, -2082,
    1247,  2242,  2319,  2982,  1736,  1737,  4786,  4971,  2317,  3250,
    1736,  1737,  1738,  1163,  1739,  1738, -3289,  1739,  4685,  1812,
   -2976,  4889,  3689,  1738,  4379,  1739,  1736,  1737, -3355,  2982,
    1738,  1374,  1739,  4215,  4216,  2982,   758,   758,  6133,  2586,
    4104,  5428,  5338,  1738,  2269,  1739,  2197,  1736,  1737,  2318,
    2982,  1541,  4030,  3041, -3376,  3346,  4416, -2082,  1736,  1737,
   -3199,  5464,  1740,  4438, -2668,  1738,  3347,  1739,  4563, -1515,
    5115,  1630,  1738,  3348,  1739,  1736,  1737,  2319,  2587,  6050,
    3537, -3353,  1736,  1737, -3290,  2749, -3354,  1738,  5497,  1739,
    4592,  2826, -2469,  1738,   844,  1739,  2982,   763,  1740,  4785,
     766,  2320,  3349,  2982,   644,  5088,  4610,  1901,  3973,  1736,
    1737,  1917,   616,  1736,  1737,  4621,  1670,  1738,  3214,  1739,
    1999,  6101,  2000,  2001,  2002,  2003,  2004,  2006,  3274,  3275,
    3276,  3277,  4184,  1740,  2784,   696,  1740,   810, -3359,    42,
    1736,  1737,   751,  3063,  1740,  3076,  5663,   661, -2469,  1333,
     855,  1740,  -411,  6119,  1738, -1530,  1739,  1753,  5664,  1902,
    1738,   827,  1739,  3350,  1740,  3908,  4031,  1738,  4622,  1739,
     669,  4611,   835,  1734,   656,  1738,  2320,  1739,   521,  2996,
    5564,  1738,  -922,  1739,  2785,  6134,  1740,  4564,  4833,   528,
    6051, -2470,  1119,  1740,  3351,   830,  2827,  1738,  2982,  1739,
     684,  4640,  4786,   803,  3215,  2567,  2982,  2742,  1740,  3939,
    1177,  1232,   524,  5281,  1740,  2270,  1119,  1886,  1738,  2198,
    1739,  1187, -2816,  4605, -2780,  2219,  2590, -2776,   861,  1738,
    1678,  1739,  1119,  2588,   834,  2836,  1124,  4425,  1740,  6025,
    1240,  5464,  5514,  4715,  1181, -2469,  1738, -2470,  1739,  1756,
    1578,   526,  2109,  1738,  1529,  1739,  4612,  1271, -2469,  4174,
    1812,  4129,  2795,  1736,  1737,  5796,  5019,  1736,  1737,  1990,
    2790,  1922, -2290,  2144,  2558,  1740,  5504,  1542,  2917,  4636,
    1738,  1740,  1739,  1185,  1738,  2025,  1739,  5186,  1740,   833,
    3781,  1263,  2574,  1146,  3428,  4907,  1740,  1202,   803,  4911,
   -2290,   803,  1740,  3216,  1285,  1710,   525,  4459, -2469,  5531,
    5406,  1738,  4269,  1739,   787, -2469, -2344,   562,  1740,  2609,
    1736,  1737,  5057,  4100,  3194, -2835, -2469,  4099,  1202,  2328,
    4888, -3199,  1725,  1727,   648,  3818,   788,  3251,  1119,  1740,
     836,  4147,  5823,  1955, -2470,  1629,  2793,  4586,  2965,  3281,
    1740,  3408, -2836,   521,  1714,   527,  3242, -2470,   827,  5298,
    1467,  1812,  1736,  1737,   528,  3468,   806,  1740,  2229,   835,
    2052,  1471,   527,  4834,  1740,   837,  2529,  2225, -2780,  1366,
    5217, -2776,  2068,  2949, -3497,  4089,   859,   524,  3280,  6074,
    2949,  3633,   830,  4249,  1468,  4823,  1491,  1492,  1493,  1494,
     944,  1740,  3533,  1393,  1186,  1740,  3604, -2470,  1863,  3267,
    2128,  1370,  3605,   755, -2470,  5958,  3224,  2069,  1813, -3369,
   -3352,  4657,  1235,  2856,  4100, -2470,   526,  3227,  3534,  3229,
    3230,   834,  1740,  1470,  1738,  1119,  1739,  2856,  1738, -2837,
    1739,  2530,  3199,  3200,  3908,   711,  1550, -2667,  1550,  1550,
    1550,  2296,   714,  2087,  1550,   645,  1550,  1556,  4759,  1556,
    1556,  1556,  4749,   521,  5363,  1556,  4431,  1556,  2116,  1812,
    3601,  4037,  2116,  3221,   528,  1525,   889,  4217,  2983,  1924,
    -688,   525,  2983,  4586,  1497,  1119,   833,  1501,  1469, -3289,
    1119,  1738,   712,  1739,  3047,  4116,  3602,   524,  4686,  4719,
    3050,  2659,  5307,  2545,  2116,  2660, -2976,  3339,  3432,  3538,
    4850,  1813,  5810,  1573,  2309,  -483,  4735, -3356,  2515,  1554,
    1119,  1554,  1554,  1554,  1957, -3376,  5030,  1554,  3210,  1554,
    1119,  6020,  1813,  1738,  5642,  1739,   526,  5356,  1544,  5656,
    2902,  2936,  5644,   789,  4091, -2082,   790,   527,  3629,  3630,
     791,   792,   527,  4104,  5334,  1740,  4380, -3290,  -696,  1740,
    4334,  5908, -1242,  5910,  5911,  2927,  2928,  2014,  1851,  1736,
    1737,   759,  2286,  -814,  1553,  -815,  1553,  1553,  1553,  2615,
    4252,  2617,  1553,  2403,  1553,  3042,  2945,  1770,  4380, -2082,
    3678,   525,  2321,  2652,  2635,  3087,  2950,  2638,  1957,  3195,
    2420,  2641,  1327,  2428,  4437,  2430,  3089,  3090,  2955,  2434,
    2435,  2436,  1740,  2087,  3119,  3102, -3355,  2442,  3105,  1119,
    1119,  1119,  1119,  2559,  5374,  2975,  4916,  3077,  2656,  2657,
    2658,  1119,  3487, -2668,  2983,  4867,  3120, -2000,  4879,   564,
    1555,  5484,  1555,  1555,  1555,  1736,  1737,  3134,  1555,  2469,
    1555,  2600,  2983,  5424,  1740,  3091,  3092,   527,  2148,  5009,
    4640,  4748,  2834,  3974,  2146,  5397,  5398,  6059,  2545, -3353,
    3180,  3181,  4284,   647, -3354,  3660,  3191,  3192,  2983,  4381,
    2148,  3532,  2151,  2148,  2983,  4141,  3783,  3783,  3811,  5566,
    3783,  3783,  2639,  2148,  5994,  5995,  3783,  3783,  1630,  2983,
    3104,  6004,  5152,  3728,  2151,  3729,  4484,  2151,   685,  2946,
    1736,  1737,  5409,  2363,  1630,  1736,  1737,  2151,  5226,  5227,
    4663,  4664,  4665,  5431,  4613,  4679, -3359,  4158,  5057,  2531,
    1679,  2961,  1125,  6072,  2962, -2816,  3033,  3825,  3826,  2911,
    1738,  3945,  1739,  3108,  2974,  2983,  3815,   618,  3217,  3600,
    4321,  4322,  2983,  1736,  1737,  -115,  -115, -2816,  3110,  4089,
    2143,  3004,  -119,  -119,  4717,  3082,  5193,  1991,  5194,  5046,
    1736,  1737,  1852,  1813,  4155,  2152,  1736,  1737,  5004,  2856,
    1791,  3083,    16,    17,  5220,  1797,  5997,   889,  6049,  6105,
    5532, -2469,  1119,  2570,  1947,  4486,  4487,  5027, -2344,  1995,
    1753,  4335,  4336,  2992,  1589,  1711,  2835,   803,  1357,   803,
    1736,  1737,  3111,  4156,  5815,   772,  1738,  5710,  1739,  2756,
    4401,  2758,  5028,  4402,  2765,  2170,  2768,  2772,   839,  4348,
    4349,  2683,  2727,  4702,  1358,  5691,  4354,  4355, -2835,  1812,
    3879,  2804,  1766,  1767,  1768,  1769,  4940,  2983,  3663,  2916,
    3202,  3483,  3074,  2535,  1715,  2983,   647,  -111,  -111,  3668,
   -2835,  1740,  5349,  3133,  2716, -2836,  2522,  4407,  4408,  1919,
    6075,  4906,  1630,  1868,  1813,  4910,  1359,  1916,  1119, -2290,
   -2290,  1738,  5284,  1739,  1348,  5285,  1738, -2836,  1739,  3267,
   -2470,  3818,  1756,  5036,  5037,  3093,  4147,  3782,  2983, -2757,
     887,  1736,  1737,  1311,  2713,  5913, -2780,   754,   754, -2776,
    1757,  2778, -2780, -2780,  2714, -2776, -2776,  1119,   900,   754,
    1119,  2094,  6002,  5468,  1738,  2532,  1739,  5512, -2344,   887,
     562,  4044,  5478,  3433,  4956,  1997,  1998,  1740,  2698,  1150,
    4900,  1738,  1743,  1739,  4969,  4970,  1243,  1738,  5502,  1739,
    2634,  1258, -2837,  1348,  2814,  5884,  5438,  1744,   811,   812,
    3517,  5906,  2930,  1261,  4181,  3336,  2730,  3919,  2840,  3958,
     647,  1360,  3284,  3235, -2837,  3285,   889,  5998,  3389,  5456,
    3236,  1738,  1813,  1739,  4722,  4828,  1745,  2931,  2078,  3533,
    2836,  5999,  1746,  3311,   647,  5969,  5970,  2085,  2761,  2764,
    2684,   846,  1740,  1948,  2566,  4071,  2095,  1740,  5206,  6137,
    1361,  5703,  2659,  4647,  1966,  3534,  2660,  3744,  3094,  2580,
    3255,  3256,  3095,  5991,  4070,  1397,  1747,  1863,  3604,  3858,
     677,  4076,  2153,  1421,  3605,  4586,  2544,  1630,  5199,  2217,
    2305,  5744,  2025,  4159,  4678,  1740,  2633,  1375,   687,  2633,
    2633,  3914,  3915,  3906,  2613,  2840,  3397,   690,  5751,   619,
    3456,  3891,  1740,  2068,  2867,  5415,  2144,  2917,  1740,  4243,
     754,  4245,  1738,   795,  1739,  3097,  2812,  3607,  1920,  1119,
    1711,  2087,  4723,  2171,  2145,  3100,   684,  1853,   547,  3541,
    1202,  3398,  3601,  5673,   562,  6138,  3011,  3012,  2069,  5468,
    1259,   648,  1740,  5711,  3908,  3888,  2536,  3676,  5503,  6117,
    6118,  2203,  2830,  2203,  1119,  1498,  2140,  3107,  3602,  3261,
    3868,  2143,   901,  5657,  4290,  3662,  5808,  1119,  1119,  3051,
      42,   836,  3900,  1119,  2779,  3824,  1163,  1119,  1119,  1119,
     804,  3908, -2042,  1736,  1737,  5692,  1736,  1737,  1119,  1119,
    5470,  3908,  3908,  5371,  1119,  5745,  1119,  1119,  1119,  1119,
    1119,  2841,  1119,  2116,  1736,  1737,   837,  1736,  1737,  1797,
    6069,  6070, -2757,  1119,  3959,  1119,  2543,  5907,  1119,  1119,
    5315,  1119,  1119,  1119, -1461,  1119,  1119,  1119,  1869,  5266,
    1151,  3013,  1119,  1740,  5574,  1119,  3920,  3955,  2222,  2830,
    3823,  3829,  3830,  1119,  1119,  3852,  1119,  1119,  1119,  4708,
    3833,  1119,  1119,  1119,  1119,  1119,  1119,  1119,  3542,  1119,
    1119,  1119,  1119,  1119,  1119,  5457,  1119,  1119,  3943,  1119,
    1119,  1119,  1119,  1119,  1119,  1119,   831,  3540,  1119,  1119,
    1119,  1119,  2484,  1119,  1119,  1119,   832,  1119,  2841,  1119,
    5827,  1119,   564,  1148,   620,  1119,  1119,  1119,  2306,  5314,
    1119,  1119,  1119,  1119,  1119,  3818,  1119,  3689,  4775,  4776,
    4777,  4778,  5712,  1119,  5325,  5799,  5801,  1736,  1737,  5539,
    1119,  1119,  1119,  1119,   648,  2099,  1887,  1312,  4261,  3410,
    2581,  1119,  1119,  1119,  5693,  1119,  1119,  1119,  1119,  1119,
    1119,  3362,  1119,  1119,  1119,  1119,  1119,  1119,  1119,  1119,
   -2042,  4053,  6000,  1119,  1738,  1223,  1739,  1738,  4182,  1739,
    3690,  2429,  4586,  1964,  3109,  2575,  5508,  2480,  1736,  1737,
    2438,  2834,  4255,  3075,  1924,  1738,  2932,  1739,  1738,  3541,
    1739,  2449,  3322,  4231,  2936,  5285,  3323,  1736,  1737,   814,
     815,  5140,  1813,  4237,  4233,  5690,  1119,  4802,  4398,  4860,
    3532,  1119,  5575,  5234,  5235,  3907,  5200,   563,  3334,  2614,
    2223,  1119,  3518,   896,  3898,    16,    17,  2633,   858,  4258,
    5885,  3341,  3342,  3203,  3484, -2685,  4234,  2602,  2603,  4235,
    2605,  2606,  2607,  4239,  5321,  5350,  5323,  3399,   648,  5326,
    3113,  2616,  5736,  5269,  5737,  5330,  5331,  1362,   680,   681,
   -2344,  1736,  1737,  2481,  5713,  3661,   564,  2637,  3544,  4586,
    1736,  1737,   648,  2911,  6010,  1476,  1797,  2144,  3600,   662,
    1817,  1895,  1822,  1736,  1737,  1740,  1825,  1830,  1740,  1119,
    1163,  5926,  2813,  5928,  3400,  2145,  5825,  3410,  1738,  3816,
    1739,  1202,    16,    17,  1630,  3101,  1740,  2146,  3411,  1740,
    2642, -2754,  1736,  1737,  1119,  3114,  1859,  4480,  3542,  4478,
    3115, -2042,  5482,  2604,  3892,   -70,  1537,  2608,   838,  2610,
    4709,  3667,  3519,  1764,  1765,  1766,  1767,  1768,  1769,  3520,
    1736,  1737,  4117,  3139,  1569,  3307,  1888,  3521,  2709,  1738,
    3893,  1739,  2923,  5002,  5002,  1736,  1737,  3401,  3132,  2719,
    1736,  1737,  2482,  3237,  1736,  1737,  4231,  2421,  1738,  2422,
    1739,  5493,  5764,  5576,  3136,  2651,  4237,  4233,   803,  5668,
    3260,  3140,  2712,  4803, -2752,  3304,   889,  1318,  4608,  1736,
    1737,  3543,  3270, -2755, -2442,  3305,  3187,  4214, -2753,  2725,
    3008,  3402,   742,  5640,  3262,  2757,   803,  3652,  3652,  4234,
    3211,  2835,  4235,  5743,  3138,  5382,  4239,  1977,  4253,  1740,
    3522,  2717,  2818,  1736,  1737,  3445, -2661,  3412,  3446,  4726,
    3448,  1860,  1738,  3261,  1739,  3330,  4727,  3981,  3453,  5189,
    2924,  1738,  3409,  1739,    42,  4437,  5137,  5138,  5139,  1119,
    2830,  1847,  1736,  1737,  1738,   728,  1739,  5540,  1748,  1749,
    1750,  5190, -1461,  4974,  1736,  1737,  3411,  4993,  2925,   839,
    1740,  2116,  1736,  1737,   897,  2021,  2715,  2576,   785,  3357,
    3523,   727,  2633,  1738,  5744,  1739,  2754,  2755,  2916,  1740,
    1569,  2577,  1736,  1737,   730,  5650,  1736,  1737,  3606,  1736,
    1737,  5899,  5765,  4586,  5707,  2143,  3142,  5507, -2685,  2836,
    5600,  1738,  5602,  1739,  1319,  4206,  1896,  2839,  3544,  5441,
    1163,   762,  5615,  5448,  5449,  4994,  1738,  5417,  1739,  3884,
    3885,  1738,  6011,  1739,   898,  1738,  2222,  1739,  1736,  1737,
    5358,  1864,  2718,  4033,  3385,  4126,  1736,  1737,  1477,  1736,
    1737,  1538,  3899,  1740,  3982,  4454,  4455,  3403,  3404,  3405,
    5558,  5744,  1740,  1736,  1737,  5669,   521,  2926,  3328,  6024,
    4463,  1865,  3267,  2830,   780,  1740,  3965,   528,  3545,  2860,
    5766,  5640,  4788,  1343, -2754,  3412,  4436,  1119,  1119,  1978,
    2222,  3009,  2269,  2068,  1738,  2227,  1739,  4406,  5745,  5232,
     524,  2917,  2840,  4236,  1740,  1202,  3607,  3887,   887,  1897,
    1848,  1331,  5523,  4238,  2244,  4423,  2959,  5134,  4275,  4276,
    4277,  4278,  3908,  1738,  1898,  1739,  2245,  1260,  2069,  1736,
    1737,  4256,  1740,  4995,  5984,  1738,  3331,  1739,  1863,   526,
    4061,  3477,  1955,  1738,  1955,  1739,  5485,  1740,  1332,  5486,
    5856,  5551,  1740,  1223,  1736,  1737,  1740, -2752,  5541,  2222,
    5761, -1540,  1321,  1738,  1119,  1739, -2755,  1738,  2146,  1739,
    1738, -2753,  1739,  2423,  5921,  5745,  2424,  1736,  1737,  5667,
     827,  1740,   521,  4207,  5776,  1119,  2246,  1119,  3908,  1736,
    1737,   835,  5593,   528,   525,  1119,  1119,  4244, -1540,  3001,
    5687,  3486,  1863,  1808,  1736,  1737,  5916,  5917,  2223,  1738,
    4996,  1739,  5572,  5573,   830,  1740,   524,  1738,  2269,  1739,
    1738,  3652,  1739,  4131,  3868,  1736,  1737,  3025,  3025,  5098,
    3025,  3025,   861,  4768,  1738,  3983,  1739,  3476,  2195,  4450,
    4451,  4452,  4453,  3501,  1740,  5487,  2830,  3141,  3038,  4298,
    1344,  3145,  2110,   834,  1544,   526,  1740,   754,  5709,  2172,
     527,  2173,  2223,  2270,  1740,  5002,  1736,  1737,  1345,  3146,
    1736,  1737,  3147,  4975,  1275,  4976,  1223,  5857,  5606,  3288,
    5860,  1119,  1119,  1119,  1740,  4208,  5559,  5560,  1740,  2087,
    4852,  1740,  1736,  1737,  4982,  2841,  4089,  3532,  2271,  4984,
    1738,  5784,  1739,  1333,  5364,  1736,  1737,  2483,   833,  2092,
     525,  2144,  4977,  2524,  4296,  4297,   703,  3828,  5989,  4081,
    1736,  1737,  4302,  2545,  4303,  1738,  4305,  1739,  5488,  2145,
    1740,  2223,   764,   889,  1569,  1202,  1736,  1737,  1740,  3664,
    4978,  1740,  1809,  4760,  3731,  5581,  2475,  2525,  1738,  5099,
    1739,  1736,  1737, -1540,  3736,  1740,  5988,   680,   681,  1119,
    1738,  2140,  1739,   767,  4678,  1276,  1736,  1737,  3262,  5385,
    5608,  2005,  2247,  4904,   527,  1738,   527,  1739,  2110,  6065,
    1286,  1119,  3148,  2514,  5561,  2093,  4089,  4089,  1119,  2270,
    4390,  1119,   765,  1119,   704,  4082,  1738,  1286,  1739,  1119,
    3600,  1119,  1119,  1736,  1737,  5554,  3652,  3652,  1904,  3263,
    5365,  3769,  1736,  1737,  4089,  4964,  1602,  1603,  1604,   887,
    3167,  1740,  2526,  2137,  2116,  1119,  3173,   716,  4301,  5748,
    1736,  1737,  5755,  3151,  4306,  6028,  5293,  1738,   786,  1739,
    1119,  1738,  3780,  1739,  3878,  2621,  1740,  5523, -2515,  5982,
    5983,  3289,  3152,  2087,  1736,  1737,  5067,  1119,  1302,  5562,
    1736,  1737,  4965,  1738,  5802,  1739,  1287,  1288,  3307,  1740,
    5702,  4915,  3795,  3253,  6066,  4979,  1738,  1658,  1739,  3299,
    1119,  1740,  5609,  1287,  1288,  2020,  5093,  3796,  1266,  2622,
    3309,  1738,  5294,  1739,   547,  3648,  1740,  1736,  1737,  3649,
    3318,  3841,  1119,  2527,  1847,   717,  2111,  1738,  3304,  1739,
    1391,  4980,  3321,  3303,  6063,  6063,  3153,  1740,  3305,  5055,
    4481,  2561,  1738,     9,  1739,  3171,  3300,  6067,  5129,   550,
    5131,  1791,  4966,  2562,  5049, -2515,  5051,  1738,  3176,  1739,
    5960,  5054,  5803,  5964,  3025,  3025,  3025,  3025,  3319,  1176,
    1736,  1737,   795,  5125,  1496,  3006,  3324,  5128,  1740,  5130,
   -3454,  2705,  1740,  2787,  1736,  1737,  6098,  3179,  2789,  1736,
    1737,  1184,  1736,  1737,  1738,  1267,  1739,  2509,  4471,    19,
    2835,  1119,  3847,  1738,  1740,  1739,  5146,  5147,  5148, -2515,
    1947,  5748,  2112,  2246,  2113,  3186,  4896,  1740,  5755,  2923,
    2745,  1738,  5447,  1739, -3454,  1736,  1737,  3306,   887,  3149,
    2750,  1182,  1740,  2054,  4250,  3197,  2019,  1736,  1737,  3707,
    3333,  1183,  2623,  4923,  1289,  1738,  4075,  1739,  1740,  1268,
     684,  1738,  2111,  1739,   803,  3340,  3393,  3394,  4794,  4795,
    1863,  1656,  6161,  1740,  3868,  1736,  1737,  3267,   796,  2996,
    2298,  3356,  5295,  4644,  4643,  3439,   807,  3442,  1740,  1860,
    2734,  3369,  5471,  1848,  5006,  4360,  4810,  3450,  1738,  5472,
    1739,  3450,  2916,  3308,  3842,  2055,    32,  3606,  4319,  3643,
    4229,  3921,  4841,  4432,  2114,  2825,  2510,  2924,  4779,  1119,
    4780,  4837,  1630,  4361,  4494,  1740,  1736,  1737,  2511,  1736,
    1737,  1119,  2146,  2021,  1740,  1348,  5523,  4320,  2784,  4774,
    6083,  3644,  2311,  3395,  2735,  2929,  3943,   808,  2112,  4331,
    2113,  1738,  1740,  1739,  6162,  1736,  1737,  4351,  3607,  1736,
    1737,  5473,  1313,  5788,   684,  1738,  4873,  1739,  3922,    39,
    1738,  3044,  1739,  1738,  1314,  1739,  1740,  4368,  3447, -3475,
    4868,  4369,  1740,  1860,  5159,  1119,  3494,    42,  2785,  3849,
    1817,  2115,   844,  3498,  3499,  2634,   963,  3645,  2634,  2634,
    3916,  1736,  1737,  5208,  2512,  3850,  1738,  4593,  1739,  2563,
    1511,  5977,  2823,  2298,  5788,  2823,  2298,   852,  1738,  1740,
    1739,   781,  3150,  1736,  1737,  3646,  2514,  2021,   970,   903,
    3156,  1736,  1737,  3157,  5923,  3096,  2073,  4891,  4892,  5978,
    2114,  1122,  3372,  1315,  2926,  5167,  1738,  3161,  1739,  1736,
    1737,  5031,  3096,  1331,  5807,  2019,  6055,  3373,  3641,  4166,
    4167,  2298,  5179,  4168,  4169,  4170,  1512,  4822,  4917,  1513,
    1736,  1737,  1740,  4918,  5738,  2368,  5739,  4919,  2371,  5748,
    5755,  5322,  2298,  2020,   982,  5595,  1740,  1777,  2879,  2880,
    1332,  1740,  4922,  5979,  1740,  5332,  1514,  1738,  1860,  1739,
    1738,  6092,  1739,  2892,  1515,  1142,  5339, -3454,  5341,  6096,
    3098,  2366,   994,  3162,  1119,  1736,  1737,  2115,  1785,  1736,
    1737,  2032,   655,  2389,  3647,  1150,  1738,  1740,  1739,  2259,
    1738,  1242,  1739,  2239,  2240,   831,  5082,  2241,  3163,  1740,
    1736,  1737,  2021,  2315,  2400,   832,  6116,  5006,  2020,  2996,
     657, -3454,  3137,  1924,  2116,   657,  4920,  1736,  1737,   657,
    2983,  3169,  1246,  1860,  4751,  4753,  4753,  1740,  4753,  5114,
   -2509, -2509,  1738,  3170,  1739,  2316,  4751,  4751,  4753,  4753,
    1550,  1550,  1550,  2033,  3143,  3144,  1119,  1247,  3174,  1119,
    2317,  1556,  1556,  1556,  1738,  1316,  1739,  1255,  1119,  5381,
    2894,  2895,  1738,  1257,  1739,  3468,  1119,  2021,  1119,  3175,
    1119,  1015,  1119,  1119,  1119,  1119,  1119,  1119,  1740,  1119,
    1738,  1740,  1739,  3235,  1736,  1737,  -702,  1119,  4474,  1119,
    5045,  2318,  1119,  1119,  1119,  1119,  3025,  1273,  1119,  1119,
    1264,  1738,  1119,  1739,  1119,  1333,  1119,  1740,  1119,  1280,
    3177,  1740,  1119,  1554,  1554,  1554,  4886,  4885,  1296,  2319,
    1119,  1300,  1119,  -702,  1119,  1119,  1119,  1119,  1119,  4887,
     666,  1119,  1119,  1119,   672,  1119,  3184,  1282,  1119,  1302,
    -704,  1308,  2559,  2559,  2559,  2559,  1738,  1306,  1739,  3198,
    1738,  1119,  1739,  1740,  5218,  5219,  1119,  2082,  2083,  1119,
    1309,  1119,  1119,  1119,  4314,  1144,  1119,  1310,  1553,  1553,
    1553,  1738,  1119,  1739,  1154,  1740,  1260,  1119,  1320,  1234,
    4317,  1371,  4405,  1740,  -704,  2020,  2634,  1364,  1738,  4436,
    1739,  2121,  3299,  1119,  1341,  4318,  1736,  1737,  3073,  1119,
    1860,  1740,  1119,  3309,  2087,  2087,  2087,  2087,  1119,  1373,
    4323,  1372,  4755,  3219,  4757,  1119,   781,  1119,  2320,  4844,
    2034,  2035,  1740,  4846,  4763,  4764,  3303,  1377,  1736,  1737,
    2036,  4897,  3488,  3489,  1555,  1555,  1555,  3154,  1924,  3300,
    4534,  1385,  2164,  1381,  2021,  5437,  3831,  4327,  1392,  3500,
    1474,  2037,  3160,  1924,  1472,  1738,  4328,  1739,   887,  3526,
    3527,  1753,   521,  2787,  1119,  1473,  2840,  1740,  1475,  1736,
    1737,  1740,  1753,   528,  4329,  3237,  1478,  4876,  -702,  3346,
    2189,  2190,  1736,  1737,  6071,  3164,  1924,  4672,  4672,  3416,
    3347,  1119,  1740,  1863,  4396,  1177,   524,  3936,  4330,  5498,
    3165,  1924,  4893,  4894,  4332,  1753,  1187,  2904,   731,  1740,
    1637,  5519,   522,  1488,   480,  2633,  3112,  5377,  1223,  4371,
    3306,  5058,  4643,  3589,  3590,  3591,  3592,   481,  5050,  1181,
    1654,  3860,  4256,   482,   483,   526,  5525,  1659,  1660,  3166,
    1924,  4341,  4673,  4673,  1976,  5238,  3025,  5064,  1874,  5066,
    1981,  1982,  5069,  1756,   732,  1506,  1119,  5221,  5075,  5076,
    3172,  1924,  5701,  1516,  1756,  3372,  3372,  1738,  1185,  1739,
    4616,  1757,  3596, -1193,  1508,  5089,  1740,  3364,  1736,  1737,
    3373,  3373,  1757,  3616,  3618, -3429,  3308,  3937,  5812,  3606,
     525,  3623,  3624,  1510,  4347,  1294,  1295,  1756,  1298,  1738,
    1299,  1739,  1518,  1348,  1348,  1348,  1348,  1521,  4350,  1519,
    2830,  3625,  3624,  4356,  5396,  1757,  4357,  4026,  3351,  4650,
    4651,  3627,  3628,  4652,  4653,  3674,  3675,  1759,  1760,  4654,
    4655,  3696,  3697,  1527,  2038,  4040,  1530,  5168,  1759,  1760,
    1738,  2634,  1739,  1119,  4674,  3947,  3948,  4112,  4113,  4358,
    -921,  -921,  1532,  1738,  1531,  1739,   527,  1119,  1535,  2841,
    5153,  4366,  4596,  4222,  4223,    16,    17,  1736,  1737,  4166,
    4167,  1759,  1760,  4168,  4169,  4170,  4342,  3144,  2816,  1533,
    4090,  5722,  3462,  1540,  5336,   680,   681,  1590,  1740,  1186,
    2905,  1955,  2840,  4345,  1924,  1570,  2222,  1591,  4637,   733,
    1592,  1348,  4352,  4353,  2315,  1597,  4090,  4090,  3987,  3988,
    5170,  4359,  1924,  1598,  5172,  4026,  4363,  4364,  1599, -2256,
    1740,  1600,  5344,  2817,  1601,  5185,  4045,  5706,  5506,  2331,
    2332,  2333,  2334,  4440,  4441,   734,  2316,  1605,  1837,  1649,
    4367,  1119,  1772,  4370,  4105,  4106,  4107,  4108,  1607,  4110,
    4111,  4083,  1773,  5211,  4885,  4649,    16,    17,  4466,  1736,
    1737,  1740,  4761,  4762,  2032,  2818,  4887,  1593,  1696,  4374,
    5215,  4090,  4090,  4387,  1740,  3267,  4446,  4447,  1608,   549,
   -2442,  1609,  2335,  2336,  2337,  4716,  2983,  4729,  4730,  1467,
    4467,  1610,  4084,  4635,  4856,  1924,  4192,  4193,  1611,  4195,
    1471,  4197,  4198,  4199,  4200,  4201,  4202,  4203,   521,  4205,
    5549,  2137,  4210,  1223,  1702,  5158,  4213,  4660,  4660,   528,
    4085,  5119,  5120,  1468,  5121,  5122,  2033,  5123,  5124, -1883,
    1119,  3861,  1774,  2338,  2339,  1612,  2830,  5164,  1738,  2039,
    1739,  2041,   524,  1613,  3128,  5165,  4468,  5082,  1775,  5838,
    5160,  1924,  1119,  1753,  5177,  5178,  1614,   550,  2959,  5187,
    1924,  1615,  1470,  5166,  1616,  5833,  5834,  1617,  2223,  1753,
    1618,  5837,  5202,  5203,  4469,  1119,  1619,  1838,  4801,  1875,
    1550,   526,  1622,  5929,  5175,  2841,  2819,  1119,  1632,  1839,
    1119,  1556,  4789,  5243,  5244,  5247,  5048,  1633,  2820,  2633,
    2633,  5704,  5705,  1634,  2340,   887,  1635,  3666,  5429,  5430,
    2559,  2559,  1638,  1119,  1119,  1639,  5585,  1469,  4772,  4086,
    5588,  3069,  2222,  1876,  1640,  1877,  1641,  5058,  4643,  5176,
    1738,  1776,  1739,  5180,  1642,  5723,   525,  1119,  1643,  1119,
    1644,  1119,  5724,  1119,  -948,  1756, -1163,  5433,  5430,  1840,
    5327,  5528,  5529,  1554,  5181,  1645,  3803,  5725,  1841,  1740,
    4283,  1756,  1646,  1757,  4857,  1119,  3970,  5620,  2879,  2880,
    1778,  5542,  1647,  4470,  1648,  1817,  1650,  1817,  2341,  1757,
    5571,  4447, -2442,  2892,   680,   681,  1119,  1119,  1176,  1551,
    1289,  1560,  1561,  1562,  5621,  2087,  1651,  1563,  1652,  1566,
    2816,  2821,   527,  2034,  2035,  1653,  1119,  1655,  1553,  1661,
    1184,  1119,  2934,  2036,  5944,  1780,  5605,  1119,  1878,  1759,
    1760,  5584,  5430,  5762,  5763,  5847,  5848,  1119,  1662,  1119,
    4675,  4675,  2947,  1663,  2037,  1759,  1760,  5001,  5592,  1223,
    1664,  2952,    16,    17,  1665,  2817,  1666,  2954,  5858,  5859,
    1182,  1740,  5878,  4447,  1667,  2963,  1569,  5879,  4447, -2684,
    1183,  5781, -1163,  1668,  1119,  1119,  2976,  1879,  1671,  2978,
    2342,  5742,  2822,  1672,  1555,  1673,  5053,  1736,  1737,  1119,
    2894,  2895,  5883,  4113,  1674,  4236,  5726,  2818,  1675,   735,
    1676,  1736,  1737,  5606,  2223,  4238,  5941,  5203,  1677,  5727,
     680,   681,  6077, -2256,  1680,  5622,  1681,  -165,  1682,  5623,
    1842,    16,    17,  5060,  4423,  1880,  1683,  -923,  5728,  1684,
    4658,  1685,  4092,  4093,  1686,  4095,  4097,  1782,  6026,  3528,
    5549, -1163,  5605,  2904,  1687,  1843,  1119,  4676,  4676,  2343,
    6003,  5430,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1688,   634,  1689,  1762,  1763,  1764,  1765,  1766,  1767,  1768,
    1769,  6005,  5430,  6006,  5430,  1956,  1783,  6031,  6032,   680,
     681,  1348,  1348,  6040,  6041,  -923,  3757,  1690,   736,   732,
    1736,  1737,  4343,  1691,  3976,  5608,  1762,  1763,  1764,  1765,
    1766,  1767,  1768,  1769,  1692,  5068, -2082,  2315,  3372,  2452,
    2453,  5605,  4026,  1693,  2344,  1881,  2345,  4026,  2819,  5606,
    1694,  2346,  1695,  3373,  5852,  4219,  1697,  2038,  6047,  5430,
    2820,  1784,  5735,  1698,  1699,  5014,  1882,  1700,  4603,  2316,
    6048,  5430,  1701,  5607, -2082,  1799,  2830, -2082,  1119,  6056,
    5430,  1223,  1703,  2342,  4083,  1704, -2082,  1705,  1738,  1119,
    1739,  2840,  1706, -2082,  1707,  5032,  5729, -2082,  4236,  4536,
    4597,  5624,  1738,  4540,  1739,  5824,  1708, -2082,  4238,  1709,
   -2082,   718,   719,  1712, -2082,  2347, -2082,  1713,  5606,  6080,
    5203, -2082,  4109,  -923,  1716,  4084,  6093,  5430, -2082,  1717,
    4632, -2082,  2904,  6115,  4932,  1718, -2082,  5609,  6150,  6151,
    1719,  5608,  5607,  1720,  1800,  1721,  1722,  5207,   720,  1723,
    4720,  1779,  2343,  4085,  1801,  5861,  2905, -2082,  2348,  5071,
    1802,  1807,  2222,  2821,   733,  1835,  4188,  4026,  4190,  4191,
   -2082,  3710, -2718,  1844,  4196, -2082,  1836, -2719,   605, -2442,
   -2683,  1832,  4204,  5545, -2715, -2713, -2717,  4211, -2712, -2716,
     721,  1738, -2710,  1739, -2082, -2714,  1854,  3596,  4047,  1855,
    -923,  1860,  1870,   660,  1871,  1872,  1873,  1893,   660,  1740,
    5608,  1894,   660,  2906,  1899,   675,  1911,  2344, -2082,  2345,
    1924,  5625,  1927,  1740,  2346,  1962,  3641, -2082,  1968,  2514,
    1817,  5683,  5682,  1970,  2822,  2830,  1979,  1980,  1984,  4090,
    1736,  1737,  1985,  1987,  5684,  1863,  3711,  2349,  1845, -2082,
    1736,  1737,  4086,  5609,  1989,  2010,  1846,  1993,  2350,  2011,
    2051,  3712,  2039,  2040,  2041,  2042,  2047,   754,  2053, -2082,
     689,  2064,  2065,  2071,  2076, -2082, -2082,  5734,  2074,  1223,
    4160,  2080,  2079,  2084,  2841,  2096,     4,  3713,  2347, -2082,
    4660, -2082,  5267,  2106, -2082,   906,  2123,  5271,  5272,  3714,
    2128,  2126,  2127,  2138,  2134,  2140,  5852,  2183,  2160,  5971,
    2185,  2167,  1740,  2176,  2194,  2905,  3503,     8,  2907,  3715,
    2200,  2222,  5609,  2184,  2202,  3759,  2204,  2210,  2214,  2212,
    2216,  2348,  2218,   694,  2223,  3761,  2226,  2232,  2233,  1119,
    1119,  2235,  1119,  2236,   907,  2237,  2258,  2266,  2261,    14,
    2275,  1119,  3716,  1119,   908,  2277,  1119,  2279,   701,  6036,
    2278,  5816,  5817,  2281,  5819,  2282,  2284,   722,    18,  1119,
    2285,  1119,  2289,  1119,  2297,  1119,  1764,  1765,  1766,  1767,
    1768,  1769,  2298,   909,   723,  2307,  2314,  2354,  1119,  1119,
     910,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1736,  1737,
    4346,  5841,  5840,  2365,    23,  2325,  2329,  5832,  2366,   724,
    2367,  1738,  2376,  1739,  5842,  2380,  2385,  2384,  2437,  5626,
    2349,  1738,  5620,  1739,  2405,  2443,  2447,  2457,  1119,   911,
    2468,  2350,    42,  1753,  2472,  2491, -2082,  2498,  1223,  2521,
    2520,  2547,  2553,  2546,  2557,  6060,  3345,  2548,   725,  5621,
    4541,  4542,  4543,  4544,  4545,  2556,  4547,  4548,  4549,  4550,
    4551,  2565,  4553,  4554,  4555,  4556,  4557,  4558,  4559,  4560,
    4561,  4562,    31,  2598,  4566,  4567,  2599,  2619,   912,   913,
    2568,  2596,  6036,  4632,  1177,  6144,  1752,   705,  2643,  2644,
    2645,  2646,   914,  2223,  2648,  1187,  2649,    16,    17,  6154,
    5780,  2650,  2671,  4661,  2672,  6144,  3504,  3717,  5610,  2675,
    2676,  6154,  2678,  1753,  1119,  2677,  2679, -1163,  1181,  3718,
    3346,  5938,  2686,  5939,  5940,  1756,  2687,  2688,  4220,  5436,
    2692,  3347,  1740,  2693,  2696,  2694,  2695,   709,  3348,  2697,
    1753,  2699,  1740,  1757,  2700,  2706,  2707,  2728,  1119,  2739,
    5841,  5840,  3505,    41,  2746,   680,   681,  1185,  5440,  2743,
    5622,  2774,  2783,  5842,  5623,  5947,  2019,  3349,  4324,  1738,
    2796,  1739,  2802,  2803,  2815,  2861,  2838,  5610, -2700,  2862,
    5224,  2854,  2904,  2864,  2868,  4680,  2865,  5605,  2869,  2901,
    4688,    72,  2918,  2920,  2941,  1754,  2943,  4939,  2188,  1759,
    1760,  2953,  2970,  2977,  2989,  1756,  2021,  1755,   623,  2990,
    4662,  4026,   915,  3842,  2998,  3004,  3007,  4959,  4960,  3014,
    3719,  3020,  3720,  1757,  3039,  5680,  3048,  4973,  3350, -2442,
    3065,  5898,  1756,  3506,  3070,  5351,  3067,  3068,   680,   681,
    1119,  3079,  3080,  3081,  3086,  3084,  3096,  1119,  3085,  3099,
    1757,  3213,  3103,  3106,  1769,  3232, -1677,  1119,  3116,  3351,
    5012,  3117,  3121,  3129,  5606,  3130,  3131,  3135,  5065,  3155,
    3158,  3178,  3159,   624,  3168,  5649,  2936,  3182,  1186,  1759,
    1760,  5079,  4987,  1758,   752,  2830,   916,  3183,  5607,  5087,
    1740,  3218,   946,  3185,  3189,  3507,  5090,  5043,  5091,  5092,
    3228,  3234,  3190,  3241,  1956,   831,  1759,  1760, -1853,  3248,
    3254,  1678,  1710,  3508,  3509,   832,  5624,  1714,  3510,  3511,
    3512,   761,  4026,   605,  2634,  3258,   605, -2082,  3268,   771,
     777,   963,  3269,  5953,  3271, -2082,  3272,  3282,  3283,   546,
    3290,  1957,  1119,  1119,  3286,  3287,  3293,   625,  3294,  3291,
    3292,  3316,  3325,  3327,  5109,  3329,  5608, -2082, -2082,   626,
     968, -2082, -2082,   970,  3295,  2905,  3332,  4712,  4713,  4714,
    3335,  2222,  3354, -2082,  3721,  3383, -2082,  5101,   974,   975,
    5032,  3355,  3417,  3222,  3419, -2082,  3513,  4740,  4743,  3462,
    4746,  3345, -2082,  3423,  3420,   777, -2082,  3424,  3435,  3436,
    5084,   547,  3454,  3464,  3465,  3470,  3473,  3480,   777, -2082,
   -2302,  3490,  3491, -2082,   771, -2082,  1119,  3492,  3495,   982,
   -2082,  3493,  2906,  3496,  3549,   917,  6126, -2082,   627,  3497,
   -2082,  3551,  3554,  3558,  3514, -2082,  1145,  3560,   988,  3563,
    3564,  3565,  3566,   771,  3587,  1179,   993,   994,  3567,  3568,
    3569,  3570,  3588,  3571,  3572,  3573, -2082,  3595,  3574,  3575,
     771,  3612,  3576,  3613,  3577,  3346,  3578,  3579,  5609, -2082,
    3580,  5556,  3581,  1256, -2082,  3582,  3347,   771,  1262,  3583,
    1119,  3722,  1119,  3348,  3584,   831,  3585,  3586,  1223,  3614,
     548,  1284,  3345, -2082,  3615,   832,  1119,  3619,  3620,  3616,
     831,  3641,  3632,  3655,  1753,  1301,  3617,  3631,  3618,  3658,
     832,  3661,  3349,  1119,  1119,  5733,  2116, -2082,  3673,  3677,
    3679,  3681,  3680,  3682,  3683,  4490, -2082,  2907,  3684,  3723,
    3687,  3691,  1119,  3692,  1339,  3693,  1012, -3492,  3694,  3732,
     771,  3700,  1354,  2223,  3733,  1014,  1015,  1016, -2082,  5654,
    3734,  3236,  3724, -1891,  3745,  3791,  3792,  3746,  3755,  3765,
    3804,   771,  3806,  3807,  3827,  4835,  3346,  3837, -2082,  3838,
    1379,  3844, -1132,  3350, -1132, -2082,  3845,  3347,  3593,  3846,
     628,   752,  3242,  1354,  3348,  3853,  3855,  4848, -2082,  3859,
   -2082,  3873,  3345, -2082,  4720,  3880,  1756,  3876,  4945,  3881,
    3882,  2065,  3883,  2581,  3351,   629,  3889,  3890,  2580,  3897,
     549,  4961,  5254,  3349,  1757,  2983,  1485,  3902,  1487,  3913,
    1489,  4249,   605,   605,   605,   605,  1495,  1354,  5256,   771,
    3917,  4491,  2659,  3934,  5626,  6158,  5318,  3932,  3933,  5320,
    3949,  3950,  3951,  5689,  3954,  3956,  3957,  3962,  3963,    16,
      17,  3977,  1119,   630,  3989,  3978,  3980,  3986,  4049,  5389,
    5319,  4048,  4054,  4058,  4059,  4065,  3346,  5390,  1119,  4068,
    1759,  1760,  4079,  4067,  3350,  4072,  5620,  3347,  4080,   831,
     752,  4161,  1559,  5733,  3348,  4175,  4162,  4163,   550,   832,
    1564,  4179,  1567,  5303,  4186,  4218,  4187,  4189,  4242,  4248,
    4254,  2999,  4259,  5621,  4251,  3351,  4263,  1576,  2634,  2634,
    4272, -3492,  5268,  3349,  1762,  1763,  1764,  1765,  1766,  1767,
    1768,  1769,  4265,  5610,  4271,  4273,  5228,  4280,  4285,  3991,
    4291,  4293,  4300,  1761,  4304,  4307,   551,  4308,  4309,  4362,
    4310,  4375,  4947,  4950,  4952,  4954,  4385,  4373,   -71,  4957,
    4958,    16,    17,  4395,  4962,  4403,  4397,  4968,  4386,  4404,
    4972,  4409,  4413,  4947,  1550,  4415,  4426,  4983,  4947,  4427,
    4429, -1163,  4430,  4433,  3350,  1556,  4439,  4442,  5346,  1119,
    4443,  4448,  4449,  4456,   552,  4457,  4460,  4477,  4485,   631,
    3992,  3993,  3994,  4489,  1762,  1763,  1764,  1765,  1766,  1767,
    1768,  1769,  4492,  4495,  4497,  3351,  4500,   632,  1119,   680,
     681,  4512,  4529,  4530,  5622,  3995,  4499,  4616,  5623,  4503,
    4531,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  4510,
    4528,  4532,  4533,  4539,  4535,  4546,  4552,  1554,  4129,  4599,
    3996,  5605,  4044,  4606,  4620,  4624,  4625,  4628,   633,  4646,
    4660,   634,  4668,  4671,  4670,  6155,  1402,  4681,  4682,  1733,
    4689,  4690,  4691,  4692,  4693,  4696,  4697,  4694,  3997,  4698,
    3998,  4699,  4707,  4700,  4725,  4733,  4765,  4769,   635,  4720,
    4770,  4026,  4811,  1119,  4773,  4782,   636, -1132,  4784,  3999,
    4797,  4793,  1553,  4796,  4812,  4963,  4804,  4805,  4842,  1467,
    3194,  4851,  4380,  4858, -2008,  4862,  4860,  4863,  4000,  4865,
    1471,  4866,  2529,  4870,  4813,  4001,  4875,  4908,  5606,  4909,
    4932,   771,   752,  4931,  4936,  4937,  4941,   752,  4943,  4944,
    4002,  4988,  4990,  1468,   553,  4991,  4999,  1804,   554,  4992,
    4003,  5021,  5607,  5022,   771,  5024,   771,  4814,  5006, -2204,
     771,   771,  1736,  1737,  5047,  4004,  5026,  1817,  1555,  5062,
    5048,  5052,  5061,  5070,  5351,  5072,  5073,  5074,  5102,  5103,
    5624,  5391,  1470,  5104,  5392,  5107,  5110,  5117,  5118,   555,
     771,  5111,  5126,  5546,  5132,  5133,  5135,  5143,  5144,  5149,
    5150,  5154,  5161,  1119,  5162,  5163,  2331,  2332,  2333,  2334,
    5169,  5171,  5174,  5188,  5197,  5183, -1978,  5184, -1983, -2254,
    5608,  5196,  4005,  5204,  1908,  5795,  5212, -3492,  5233,   752,
     752,  1918,  4006,  5241,  5231,  5245, -2082,  1469,  5240,  5249,
    5255,  1119,  4815,  1119,  5257,  1961,  5264,  5258,  5733,  5263,
    1957,  5265,  5277,  5297,  5304,  5305,  1972,  5309,  5311,  2335,
    2336,  2337,  2020,  5329,  5337,  5310, -2082, -2082,   752,  4007,
   -2082, -2082,  5312,  5333,  5342,  4173,  5345,  5369,  5370,  5372,
    5619,  5347,  4008,  5619,  5373,  5379,  5412,  5375,  1996,  1467,
    5380,  4513,  5383,  5537,  5387,  5401,  5414,  5410,  4514,  5418,
    1471,  5427,  6078,  5419,  1467,  5426,  5445,  4993,  2018,  5432,
    2338,  2339,  4816,  5476,  4515,  1471,  5469,  5454,  1929,  5674,
    5443,  5477,  4009,  1468,  4516,  4517,  4518,  5475,  4010,  5481,
    5479,  4223,  5609,  1738,  4519,  1739,  5491,  2516,  1468,  5499,
     752,  5501,  5520,  5511,  5526,  5536,  5543,  5534,  5544,   752,
    5551,  5552,  5554,  5555,  5568,   771,  5570,   605,   752,  5550,
    5580,   752,  1470,  5582,  5583,  5587,  5589,  5598,  1550,  3996,
    5647,   752,  5590,  5658,  5659,  -923,  5660,  1470,  4658,  1556,
    5661,  2340,  5641,  5642,  5644,  5671,  1119,  4011,  5672,  5699,
    5686,  5708,  5678,  5718,  4012,  1762,  1763,  1764,  1765,  1766,
    1767,  1768,  1769,  5721,  5752,  5767,  5769,  5773,  5771,  5772,
      16,    17,  5775,  5777,  5778,  5750,  5779,  1469,  5750,  5792,
    5791,  5793,  5794,  5844,  4013,  4817,  5818,  4818,  5820,  5821,
    5828,  5835,  1469,  -923,  5675,  5830,  5849,   732,  6160,  4014,
    4015,  1554,  5619,  5845,  5855,  5846,  5862,  5874,  5866,  5869,
    5877,  5790,  4016,  5880,  1740,  2341,  3372,  5902,  2065,  5619,
    2201,  5901,  5891,   752,  5903,  2209,  5909,  5919,  5920,  5925,
    5949,  3373,  5933,  5927,  4520,   605,  5942,  -826,  5950,  5973,
    4126,  4131,   771,   827,  6015,  5774,   771,   752,  4521,  5952,
    5957,  6007,  5248,  5958,   835,  5996,  1553,  6021,  5626,  6022,
    6008,  6023,  5790,  6043,  6044,  6045,    16,    17,  1119,  6052,
    6046,  3989,   771,  6053,  4591,   771,  6054,   830,  6081,  6084,
    6095,   752,  6097,  6106,  6094,  6109,  6112,  6121,  6114,  6120,
    6122,  4740,  6123,  4743,  4659,  4746,  6130,  6125,  6127,  6145,
    6131,  -923,  2276,  6157,  3886,  4509,  1571,  2342,  1963,     4,
    2690,  4212,  5361,  5359,  4028,  1889,   834,  5638,   906,  5645,
    5360,  5636,  1555,  5635,  5639,  5741,  4656,  5814,  5937,  5480,
     752,  6079,  5750,  4522,  4598,  2075,  5300,  5750,  4819,  4820,
       8,  4029,   733,  4750,  5750,  5651,  3991,  5610,  4523,  6018,
    6017,  4246,  2124,  4241,  5239,  5384,  4766,  2984,  1396,  2538,
    3392,  4527,  4289,  1583,  4267,  5141,  1384,   907,  5399,  3562,
    4925,   833,    14,  3059,  1119,  3060,  2343,   908,  -923,  1817,
    3062,  5892,  3061,  3003,  4524,  2852,  5758,  5619,  5455,  2120,
    5591,    18,  4703,  4145,  4869,  5335,  4874,  5195,  4525,  5400,
    5956,  5717,  6030,  6111,  3246,  5405,   909,  3992,  3993,  3994,
    6088,  6113,  4572,   910,  4881,  5876,  5210,  5914,  3427,  4701,
    1119,  6042,  5634,  5097,  5262,  6064,  5922,    23,  5826,  4706,
    5918,  5275,  3995,   752,  4299,  5924,  5954,   527,  3626,  4077,
    2937,  2344,   752,  2345,  4377,  4845,  4847,  4843,  2346,  6091,
     739,   740,   911,   752,  6057,  5594,  6058,  3996,  5985,  4704,
    5897,  2951,  1930,  5096,  2461,  5900,  2740,  3969,  4660,  5586,
    1903,  5677,  2086,  3557,  3968,  5951,  1931,  5750,  1932,  5505,
     771,  5986,  2903,  3257,  3368,  3997,  4282,  3998,  3688,  2050,
    4783,  4645,  5685,  4394,  4821,    31,  5936,  5317,  3482,  2023,
    4864,   912,   913,  5946,  5966,  5967,  3999,  4062,  1933,  6016,
    2800,  3768,  2347,  3766,  5619,   914,  2455,   771,  4417,  2519,
    2304,  2364,  3944,  1934,  2517,  4000,  4482,  1128,  3938,  5222,
    4853,  5882,  4001,  3928,  1129,  5992,  6089,  5740,   752,  5242,
    6090,  5496,  3834,  1119,  4626,   771,   771,  4002,  5495,  4410,
    1130,  1119,  5395,   771,  2571,  2348,  1935,  4003,  5854,  5510,
    1131,  1132,  1133,   771,  5386,  2313,  4472,  5416,  3467,  5494,
    1134,  4618,  4004,  3653,  1936,  2260,    41,  2592,  1804,   741,
    3686,  2551,  5205,   605,   605,   752,   605,   605,   605,   752,
     771,   752,  4103,  5750,  4938,  5750,  5750,   605,  4914,  1236,
    1481,  2997,  6037,  6027,  1228,  6038,  3337,  2625,  3918,  1486,
    3338,  1231,  2636,   605,    72,   771,  3386,  2015,   750,  4720,
    5434,  5425,  2731,  4787,  6110,  5662,  6124,  5822,  6156,  4005,
    6159,  1657,  4880,  4483,  3358,   915,  3821,   752,  5750,  4006,
    1584,  3901,  4895,  1189,  2349,  2872,  5750,  3212,  1190,  3312,
    3045,  3895,  4720,  2748,  1937,  2350,  3896,  2564,  1161,  1798,
    3877,  1938,  4711,  3548,  2257,  4268,  3979,  1272,  5535,  4721,
    1973,  1939,  4479,  4905,  1119,  3930,  4007,  5223,   743,   744,
     745,  4661,  6073,  5750,  1940, -1132,  2873, -1132,  3449,  4008,
    6104,     0,  5948,     0,     0,   771,     0,     0,     0,     0,
       0,  2773,     0,     0,     0,  2722,     0,     0,     0,   916,
    1135,   752,     0,     0,  2065,  1941,  2732,     0,  1942,     0,
       0,     0,     0,  2874,  1136,     0,     0,     0,     0,  4009,
       0,     0,     0,  1943,   771,  4010,     0,     0,     0,     0,
       0,     0,   771,   771,   771,  2751,  2752,  2753,   752,   752,
    1119,   605,  5867,  5868,     0,  5870,  5871,  5872,  5873,     0,
       0,     0,    16,    17,   863,     0,     0,  3989,     0,     0,
       0,     0,     0,     0,  5893,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4662,  3990,
       0,     0,  5388,     0,  4011,   946,     0,     0,   864,     0,
       0,  4012,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   771,
     866,     0,     0,     0,  1137,     0,     0,     0,     0,     0,
     867,  4013,     0,     0,   963,     0,     0,     0,     0,     0,
       0,   752,  3991,     0,     0,     0,  4014,  4015,   917,     0,
       0,  4119,     0,  4120,  4121,   868,     0,     0,     0,  4016,
    1138,   752,     0,   968,     0,     0,   970,     0,     0,     0,
       0,   869,     0,     0,  1139,     0,   870,  4122,     0,  4123,
       0,   974,   975,     0,     0,  4124,     0,     0,     0,     0,
       0,     0,     0,     0,   771,  5965,     0,     0,  5968,   871,
       0,     0,     0,  3992,  3993,  3994,  5976,  2065,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4125,
       0,     0,   982,     0,     0,  -826, -1274,     0,  3995,  2966,
     771,  2514,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   988,     0,     0,     0,     0,     0,     0,     0,   993,
     994,     0,     0,  3996,  1929,    16,    17,  1485,     0,  3000,
    3989,   752,     0,  3002,     0,     0,     0,     0,   872,     0,
       0,     0,     0,     0,     0,   752,   752,     0,     0,     0,
       0,  3997,  3017,  3998,     0,     0,   873,     0,  4126,  3026,
    3026,     0,  3026,  3026,   874,     0,     0,  1792,     0,     0,
   -1132,     0,  3999,     0,     0,     0,     0,   771,     0,     0,
     752,     0,     0,     0,     0,     0,   752,     0,     0,     0,
       0,  4000,  3049,  4127,     0,     0,   875,  4128,  4001,     0,
       0,  3054,     0,     0,  3056,  3991,   876,   877,  4129,  1012,
    2875,     0,     0,  4002,     0,     0,    16,    17,  1014,  1015,
    1016,     0,     0,  4003,     0,     0,     0,     0,     0,     0,
    4130,     0,     0,     0,  5987,     0,     0,     0,  4004,     0,
    2876,  2877,     0,  2878,  2879,  2880,  2881,  2882,     0,  2883,
    2884,  2885,  2886,  2887,  2888,  2889,  2890,     0,  2891,  2892,
    2893,     0,     0,     0,     0,     0,  3992,  3993,  3994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3995,     0,     0,     0,  4005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4006,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3996,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5389,     0,     0,     0,  4131,     0,     0,     0,
    5390,     0,  4007,     0,  3997,     0,  3998,     0,  2249,     0,
       0,     0,   752,  2250,  5972,  4008,  2894,  2895,   752,     0,
       0,     0,     0,  2251,     0,  3999,     0,   647,     0,     0,
       0,     0,  4132,     0,  3188,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4000,     0,     0,     0,     0,     0,
       0,  4001,     0,     0,     0,  4009,     0,     0,     0,     0,
       0,  4010,     0,     0,     0,     0,  4002,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4003,     0,     0,     0,
    4133,  4134,     0,     0,     0,     0,     0,  4135,     0,     0,
       0,  4004,     0,     0,     0,     0,     0,     0,     0,  4136,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3666,  4137,     0,
    4011,   771,   771,   752,     0,     0,     0,  4012,     0,     0,
       0,     0,   771,     0,     0,     0,  3026,  3026,  3026,  3026,
    3278,  3279,     0,  1804,  4138,     0,     0,     0,  4005,     0,
       0,     0,     0,     0,     0,     0,     0,  4013,  4006,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1930,     0,
       0,     0,  4014,  4015,     0,  3317,   605,     0,     0,     0,
    6087,  2252,  1931,     0,  1932,  4016,     0,     0,   605,     0,
       0,     0,     0,     0,     0,  4007,     0,     0,     0,     0,
       0,     0,  2253,     0,     0,     0,     0,  2254,  4008,     0,
    4139,     0,     0,     0,  1933,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   752,     0,  1934,
       0,     0,     0,     0,     0,  3344,     0,     0,  2255,     0,
       4,     0,     0,   752,     0,  4017,  1908,  3360,  4009,   906,
       0,   771,  3367,   752,  4010,     0,     0,     0,     0,     0,
       0,     0,  1935,     0,     0,     0,     0,  1398,  1399,  2256,
       0,     8,     0,  1400,  1401,     0,  6147,   752,     0,     0,
    1936,  4140,  6149,  1402,     0,     0,     0,     0,     0,     0,
       0,     0,  4141,  4142,  4143,     0,     0,     0,   907,     0,
       0,   752,     0,    14,  5391,     0,     0,  5392,   908,  1403,
       0,     0,     0,  4011,     0,     0,  5393,     0,     0,     0,
    4012,  1404,    18,     0,     0,     0,     0,     0,     0,     0,
       0,   605,     0,   605,   605,     0,     0,   909,     0,  2065,
     752,  1405,     0,  3451,   910,   605,     0,   605,     0,     0,
    4013,     0,     0,     0,     0,     0,  3461,     0,    23,     0,
    1937,     0,  3466,     0,     0,  4014,  4015,  1938,     0,     0,
       0,     0,     0,     0,  1406,     0,     0,  1939,  4016,     0,
       0,  4144,     0,   911,     0,     0,     0,    16,    17,     0,
    1940,     0,  3989,     0,  1407,  1408,     0,  1409,     0,     0,
       0,     0,     0,     0,     0,  1410,  1411,  1412,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1941,     0,     0,  1942,  1413,    31,     0,     0,     0,
       0,   771,   912,   913,     0,     0,   752,     0,     0,  1943,
       0,     0,     0,     0, -1274,     0,   914,     0,     0,     0,
       0,     0,     0,     0,     0,   648,     0,     0,     0,  1414,
       0,     0,     0,     0,     0,     0,     0,  3991,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1415,  1398,  1399,     0,     0,     0,
    1416,  1400,  1401,     0,     0,  3611,     0,     0,     0,     0,
       0,  1402,     0,     0,     0,     0,     0,    41,     0,     0,
       0,  3621,     0,     0,     0,  1417,  1418,  1419,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1403,  3992,  3993,
    3994,     0,     0,     0,     0,     0,     0,     0,     0,  1404,
    1420,  1421,     0,     0,     0,    72,     0,     0,     0,     0,
       0,     0,     0,  3995,     0,     0,  3642,     0,     0,  1405,
       0,     0,     0,     0,     0,  3654,   915,  3656,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3996,   771,
       0,   771,   771,     0,     0,     0,     0,  1422,     0,  1423,
    1424,     0,  1406,     0,     0,   771,     0,     0,  3026,     0,
       0,     0,     0,     0,     0,  1425,  3997,     0,  3998,     0,
       0,     0,  1407,  1408,     0,  1409,     0,     0,     0,     0,
       0,     0,     0,  1410,  1411,  1412,     0,  3999,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     916,     0,  1426,  1413,  1427,     0,  4000,     0,     0,   771,
       0,   771,     0,  4001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1428,  4002,     0,
       0,     0,     0,     0,     0,     0,     0,  1414,  4003,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1429,
       0,     0,     0,  4004,     0,     0,     0,     0,     0,     0,
    1430,  1431,  1415,     0,     0,     0,     0,     0,  1416,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1432,  1417,  1418,  1419,     0,     0,     0,     0,
       0,  1433,     0,     0,     0,     0,     0,     0,     0,     0,
    4005,     0,     0,     0,     0,     0,     0,     0,  1420,  1421,
    4006,     0,     0,     0,     0,  3793,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   917,
       0,     0,     0,     0,     0,     0,     0,  1434,  1435,  1436,
       0,     0,     0,     0,     0,  1437,  1438,  4007,     0,     0,
       0,     0,     0,     0,     0,  1422,  3836,  1423,  1424,     0,
    4008,  1439,  1440,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1425,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   752,     0,  1441,  1442,     0,  3872,     0,
       0,     0,     0,  3875,     0,     0,   771,   771,  3026,     0,
    4009,     0,     0,     0,  1443,     0,  4010,     0,   771,     0,
    1426,     0,  1427,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1428,     0,     0,     0,     0,
    1179,     0,     0,     0,     0,     0,     0,  5273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1429,     0,     0,
       0,     0,     0,     0,     0,  4011,     0,     0,  1430,  1431,
       0,     0,  4012,     0,     0,     0,     0,     0,     0,  2461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1445,     0,     0,  1446,     0,
    1432,  1447,  4013,     0,     0,     0,     0,     0,     0,  1433,
       0,     0,     0,     0,     0,     0,     0,  4014,  4015,     0,
    1398,  4224,     0,     0,  1448,     0,  1400,  1401,     0,     0,
    4016,     0,     0,     0,     0,     0,  1402,     0,     0,     0,
       0,     0,     0,  1450,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1434,  1435,  1436,     4,     0,
     752,   752,  1403,  1437,  1438,     0,     0,   906,     0,     0,
       0,   605,     0,  4042,  1404,     0,     0,     0,   752,  1439,
    1440,     0,   771,     0,     0,     0,     4,     0,     0,     8,
       0,     0,     0,     0,  1405,   906,     0,     0,     0,     0,
       0,     0,     0,  1441,  1442,  -328,     0,  -328,     0,     0,
       0,     0,     0,   771,   771,     0,   907,     8,     0,     0,
       0,    14,  1443,     0,     0,     0,   908,  1406,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,   907,     0,     0,  1407,  1408,    14,
    1409,     0,     0,     0,   908,   909,     0,     0,  1410,  1411,
    1412,     0,   910,     0,   771,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,    23,     0,  1413,  4177,
       0,     0,     0,   909,     0,     0,     0,     0,     0,     0,
     910,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   911,     0,     0,    23,     0,     0,     0,     0,     0,
       0,     0,  1414,  1445,  1191,     0,  1446,     0,     0,  1447,
       0,     0,     0,     0,     0,  1124,     0,     0,     0,   911,
       0,     0,     0,     0,     0,     0,     0,  1415,     0,     0,
    1163,     0,  1448,  1416,    31,     0,     0,     0,  1192,  1193,
     912,   913,     0,     0,     0,     0,  4247,     0,  1194,     0,
       0,  1450,     0,     0,   914,     0,     0,     0,  1417,  1418,
    1419,     0,    31,    10,    11,     0,     0,     0,   912,   913,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   914,  4225,  1421,     0,     0,     0,     0,     0,
    3017,     0,     0,     0,     0,  1961,   771,   771,   771,   771,
       0,     0,   752,     0,     0,     0,     0,    16,    17,     0,
       0,     0,  1195,  -328,     0,    41,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1196,     0,     0,     0,
    1422,     0,  1423,  1424,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    41,     0,     0,     0,     0,  1425,     0,
       0,     0,     0,    72,     0,  -560,     0,     0,     0,     0,
       4,     0,     0,     0,     0,     0,     0,     0,     0,   906,
       0,     0,     0,     0,   915,     0,     0,     0,     0,     0,
       0,    72,     0,     0,     0,  1426,  1197,  1427,     0,     0,
       0,     8,     0,     0,     0,     0,     0,     0,  1198,     0,
       0,     0,   915,     0,     0,     0,     0,  4372,     0,     0,
    1428,     0,  5094,     0,  4120,     0,     0,     0,   907,     0,
       0,     0,     0,    14,     0,     0,     0,     0,   908,     0,
       0,  -328,  1429,     0,     0,     0,     0,     0,  4122,     0,
       0,     0,    18,  1430,  1431,     0,  4124,     0,   916,     0,
       0,     0,     0,     0,     0,     0,     0,   909,  1199,  -560,
       0,  4421,     0,     0,   910,     0,     0,     0,  2065,     0,
       0,     0,     0,     0,   771,  1432,   916,  2461,    23,     0,
    5095,     0,     0,     0,  1433,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   771,   771,   771,   771,     0,
       0,     0,     0,   911,     0,     0,     0,     0,     0,     0,
       0,     0,  4461,  4462,     0,     0,    16,    17,     0,     0,
       0,  3989,     0,     0,  1200,     0,     0,     0,     0,     0,
    1434,  1435,  1436,  1201,     0,     0,     0,     0,  1437,  1438,
       0,     0,     0,     0,     0,  1202,    31,     0,     0,  4126,
       0,     0,   912,   913,  1439,  1440,  1203,     0,     0,     0,
       0,     0,     0,  4498,     0,     0,   914,     0,     0,  4508,
       0,     0,     0,     0,     0,     0,     0,     0,  1441,  1442,
    1204,     0,     0,     0,     0,     0,     0,   917,  4128,     0,
       0,     0,     0,   771,     0,     0,  3991,  4226,     0,     0,
       0,   752,     0,     0,     0,   752,     0,     0,     0,     0,
       0,     0, -2442,  1205,     0,   917,  1206,     0,  1207,     0,
       0,  4130,     0,     0,     0,     0,     0,    41,     0,  4565,
       0,     0,  4587,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1208,  1209,     0,     0,     0,     0,     0,
       0,  1210,  1211,     0,   605,     0,     0,  3992,  3993,  3994,
       0,     0,     0,  3461,  4619,    72,     0,     0,  1212,     0,
       0,     0, -1132,     0, -1132,     0,     0,     0,  4633,     0,
       0,     0,  3995,     0,     0,     0,   915,     0,  1445,     0,
    1213,  1446,     0,     0,  1447,     0,     0,     0,     0,     0,
       0,  2065,     0,     0,     0,     0,     0,  3996,     0,     0,
       0,  1214,     0,     0,     0,     0,     0,  4228,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4131,     0,     0,
       0,     0,     0,     0,     0,  3997,  1450,  3998,     0,     0,
       0,     0,     0,  1568,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,  3989,     0,  3999,     0,     0,     0,
     916,     0,     0,     0,     0,     0,  1215,     0,  4587,     0,
       0,     0,     0,     0,     0,  4000,     0,     0,     0,     0,
    1216,     0,  4001,     0,     0,     0,     0,     0,     0,     0,
       0,  1217,     0,     0,  1218,  1219,     0,  4002,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4003,     0,  1220,
       0,  4133,     0,     0,     0,     0,     0,     0,  4135,     0,
       0,     0,  4004,     0,     0,     0,     0,     0,     0,  3991,
       0,     0,     0,  4747,     0,     0,     0,     0,  3611,     0,
       0,     0,     0,     0,     0,  1221,     0,     0,     0,  4137,
       0,     0,  1222,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3642,     0,     0,     0,     0,  4767,
   -3218,     0,  1223,     0,     0,     0,     0,     0,     0,  4005,
       0,     0,     0,     0,     0,     0,     0,   771,     0,  4006,
    3992,  3993,  3994,     0,     0,     0,     4,     0,     4,   917,
       0,     0,     0,     0,     0,   906,     0,   906,     0,     0,
       0,     0,     0,     0,     0,  3995,     0,     0,     0,     0,
       0,     0, -3218,     0,     0,     0,  4007,     8,  1224,     8,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4008,
    3996,  4139,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   907,     0,   907,     0,     0,    14,
       0,    14,     0,     0,   908,     0,   908,     0,  3997,     0,
    3998,     0,     0,     0,     0,     0,     0,     0,    18,  4009,
      18,     0,     0,     0,     0,  4010,     0, -1132,  4840,  3999,
       0,     0,     0,   909,     0,   909,     0,     0,     0,     0,
     910,     0,   910,     0,     0,     0,     0,     0,  4000,     0,
       0,     0,     0,     0,    23,  4001,    23,     0,  4855,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4002,  4633,     0,     0,     0,     0,     0,     0,     0,   911,
    4003,   911,     0,     0,  4011,  4421,     0,     0,     0,     0,
       0,  4012,     0,     0,     0,  4004,  3872,     0,  4883,     0,
       0,     0,  4890,   771,   771,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     0,     0,     0,     0,  1179,
    1804,  4013,    31,   906,    31,     0,     0,     0,   912,   913,
     912,   913,     0,     0,     0,     0,  4014,  4015,     0,     0,
       0,     0,   914,     0,   914,     8,     0,  2461,     0,  4016,
       0,     0,  4005,     0,     0,     0,     0,     0,  4930,     0,
       0,     0,  4006,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   907,     0,     0,     0,     0,    14,     0,     0,
       0,     0,   908,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     4,     0,  4007,
       0,     0,     0,    41,     0,    41,   906,     0,     0,   771,
       0,   909,  4008,     0,     0,     0,     0,     0,   910,     0,
       0,     0,     0,  4587,   752,     0,  4989,     0,  -542,     0,
       0,     0,    23,     0,     0,     0,     0,     0,     0,     0,
       0,    72,     0,    72,     0,     0,     0,     0,  5013,     0,
       0,     0,  4009,     0,     0,   907,     0,   911,  4010,     0,
    1579,     0,   915,     0,   915,   908,     0,     0,     0,     0,
       0,   771,     0,     0,     0,     0,     0,     0,     0,    18,
       0,     0,     0,  2519,     0,  5044,     0,     0,     0,     0,
       0,     0,     0,     0,   909,     0,     0,     0,     0,     0,
      31,   910,     0,     0,     0,     0,   912,   913,     0,     0,
       0,     0,     0,  4587,     0,  1580,     0,  4011,     0,  3669,
     914,  3946,     0,     0,  4012,  4930,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5078,   916,  2461,   916,     0,
     911,     0,   752,  5086,     0,     0,     0,     0,  4930,     0,
       0,     0,     0,     0,  4013,  4930,     0,     0,     0,     0,
    4587,     0,     0,     0,     0,     0,     0,     0,     0,  4014,
    4015,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     605,    41,  4016,  1581,     0,  5113,     0,     0,     0,   912,
     913,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   914,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5127,     0,     0,     0,     0,    72,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1582,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   917,     0,   917,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5145,     0,     0,
       0,     0,  -542,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   916,     0,     0,     0,     0,     0,
       0,  4421,     0,   915,     0,     0,     0,     0,     0,     0,
    2461,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3642,
       0,     0,     0,     0,     0,     0,     0,  4508,     0,     0,
       0,     0,     0,     0,     0,     0,   771,   916,  5252,  5252,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4587,     0,     0,
       0,     0,     0,   917,   752,     0,  5270,     0,     0,     0,
       0,  5276,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3611,     0,     0,     0,     0,     0,     0,  3611,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4587,
    4930,  4587,     0,   771,  4587,     0,  4930,     0,     0,     0,
    4587,  4587,     0,     0,  4930,     0,   917,     0,     0,     0,
       0,     0,     0,     0,  4587,  4930,     0,  4930,     0,     0,
       0,     0,     0,  5343,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5354,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5404,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,  4840,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,  3875,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4930,     0,  1121,     0,
       0,     0,     0,     0,  5252,     0,     0,     0,     0,     0,
     752,     0,     0,  5435,     0,     0,     0,     0,     0,     0,
       0,     0,  5442,     0,     0,     0,  4587,  4587,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2519,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4587,     0,
       0,     0,  4587,     0,     0,     0,     0,     0,  2461,     0,
       0,     0,     0,     0,     0,  4930,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5533,     0,
       0,     0,     0,     0,     0,   752,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5252,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4587,     0,     0,  5597,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,  5632,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3611,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,  4587,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   752,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5694,  5698,  1121,     0,     0,  1631,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5716,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3875,     0,  3875,     0,     0,     0,     0,
       0,     0,     0,     0,  1631,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5757,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   771,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,  1121,  1121,  1121,     0,
       0,  1631,     0,     0,     0,     0,     0,  1121,  5805,     0,
    5806,   605,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5905,     0,
       0,     0,     0,     0,  5252,     0,  5252,  5252,     0,     0,
       0,     0,     0,     0,     0,  5915,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,  1631,     0,     0,     0,  5934,     0,     0,   752,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5698,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5716,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   771,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,  5993,     0,     0,     0,  5252,  5252,     0,
       0,     0,     0,     0,  5252,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   771,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5252,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   605,     0,     0,     0,  6076,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   771,     0,     0,     0,     0,     0,
    4508,  4508,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  6102,  6102,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,  2461,     0,     0,     0,
     771,     0,     0,  1121,  1121,     0,   771,     0,     0,  1121,
    2461,     0,     0,  1121,  1121,  1121,  2461,     0,     0,     0,
       0,     0,  2461,     0,  1121,  1121,  1631,     0,     0,     0,
    1121,     0,  1121,  1121,  1121,  1121,  1121,     0,  1121,     0,
       0,  1631,  1631,     0,     0,     0,     0,     0,     0,  1121,
       0,  1121,     0,     0,  1121,  1121,     0,  1121,  1121,  1121,
       0,  1121,  1121,  1121,     0,     0,     0,     0,  1121,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,  1121,
    1121,     0,  1121,  1121,  1121,     0,     0,  1121,  1121,  1121,
    1121,  1121,  1121,  1121,     0,  1121,  1121,  1121,  1121,  1121,
    1121,     0,  1121,  1121,     0,  1121,  1121,  1121,  1121,  1121,
    1121,  1121,     0,     0,  1121,  1121,  1121,  1121,     0,  1121,
    1121,  1121,     0,  1121,     0,  1121,     0,  1121,     0,     0,
       0,  1121,  1121,  1121,     0,     0,  1121,  1121,  1121,  1121,
    1121,     0,  1121,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,  1121,  1121,  1121,  1121,
       0,     0,     0,     0,     0,     0,     0,  1121,  1121,  1121,
       0,  1121,  1121,  1121,  1121,  1121,  1121,     0,  1121,  1121,
    1121,  1121,  1121,  1121,  1121,  1121,     0,     0,     0,  1121,
       0,     0,     0,     0,  1631,     0,     0,     0,     0,     0,
    1631,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1631,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1631,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,  1121,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1631,  1631,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,  1121,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1631,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1631,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,  1631,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,  1121,     0,  1121,
       0,     0,     0,     0,     0,  1121,     0,  1121,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1631,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1631,     0,  1631,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,  1121,     0,  1121,     0,  1121,  1121,
    1121,  1121,  1121,  1121,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,  1121,     0,     0,  1121,  1121,
    1121,  1121,     0,     0,  1121,  1121,     0,     0,  1121,     0,
    1121,     0,  1121,     0,  1121,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,  1121,     0,
    1121,  1121,  1121,  1121,  1121,     0,     0,  1121,  1121,  1121,
       0,  1121,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,  1121,     0,     0,  1121,     0,  1121,  1121,  1121,
       0,     0,  1121,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,  1121,     0,     0,     0,  1087,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,  1121,     0,     0,  1121,     0,
       0,  1238,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,  1121,  1631,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1631,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1631,     0,     0,  1631,  1631,  1631,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1383,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1534,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1594,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1621,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1636,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1730,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,  1631,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,  1121,     0,  1121,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,  1631,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1926,     0,     0,
       0,     0,  1121,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,  1121,     0,  2062,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1631,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2102,     0,     0,  2103,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,  1631,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,  1631,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2263,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2288,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2303,     0,
       0,     0,  2308,     0,  2310,     0,     0,     0,     0,     0,
       0,     0,     0,  2326,  2327,     0,     0,     0,     0,  2353,
       0,  2356,  2357,  2358,  2359,  2360,     0,  2362,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2370,     0,
    2373,     0,     0,  2374,  2375,     0,  2377,  2378,     0,     0,
    2381,  2382,  2383,     0,     0,     0,     0,  2388,     0,     0,
    2394,     0,     0,     0,     0,     0,     0,     0,  2398,  2399,
       0,  2402,     0,  2404,     0,     0,  2406,  2407,  2408,  2411,
    2412,  2413,  2414,     0,  2415,  2416,  2417,  2418,  2419,     0,
       0,  2426,  2427,     0,     0,  2431,  2432,  2433,     0,     0,
       0,     0,     0,  2439,  2440,  2441,     0,     0,  2444,  2445,
    2446,     0,  2448,     0,  2450,     0,  2451,     0,     0,     0,
    2454,  2394,  2456,     0,     0,  2462,  2463,  2464,  2465,  2466,
       0,  2467,     0,     0,     0,     0,     0,     0,  2471,     0,
       0,     0,     0,     0,     0,  2476,  2477,  2478,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,  1121,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,  1121,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,  1121,     0,  1121,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2573,     0,     0,  1121,  1121,  2062,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2062,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2655,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2689,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2979,  2980,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3046,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1238,     0,  3064,     0,     0,     0,     0,     0,     0,     0,
    3071,  3072,     0,     0,     0,     0,  1121,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3123,  3125,  3127,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,  3220,     0,     0,     0,
       0,  1631,     0,     0,  1121,     0,  3225,     0,  3226,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3252,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3259,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2062,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3310,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1631,     0,     0,  1121,     0,  3320,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3381,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3474,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2062,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,  1121,
    3559,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1631,  1631,     0,  3657,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3708,     0,     0,  3709,     0,     0,  1631,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3735,     0,     0,     0,  3737,     0,  3738,  3739,  3740,
    3741,  3742,  3743,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3747,     0,  3748,     0,     0,  3749,  3750,  3751,
    3752,     0,     0,  3753,  3754,     0,     0,  3756,  1631,  3758,
       0,  3760,     0,  3762,  1121,     0,     0,  3764,     0,     0,
       0,     0,     0,     0,     0,  2408,     0,  3767,     0,  2408,
       0,  3770,  3771,  3772,     0,     0,  3773,  3774,  3776,     0,
    3777,     0,     0,  3778,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3779,     0,     0,     0,
       0,     0,     0,     0,  3786,     0,  3787,  3788,  3789,     0,
       0,  3790,     0,     0,     0,     0,     0,  3794,     0,     0,
       0,     0,  3805,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3822,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3832,     0,     0,     0,     0,     0,     0,
    1121,     0,  3843,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,  2062,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2062,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2062,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4050,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3381,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4185,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4266,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4288,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4294,     0,     0,  4295,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4312,  4313,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4337,     0,  4338,     0,  4339,     0,  4340,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4365,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4388,  4389,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4050,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4424,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2062,
    2062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2062,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3381,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4050,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3381,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4799,  4800,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4807,     0,  4808,     0,
       0,  4809,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4829,     0,  4830,     0,  4831,     0,
    4832,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4838,  4839,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3381,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3381,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4050,     0,     0,     0,     0,
       0,     0,  5039,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3381,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5105,  5106,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4050,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4050,     0,  4050,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3381,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2062,  2062,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5230,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3381,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5378,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4050,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5439,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4050,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5567,     0,  5569,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5829,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2058,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2059,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,  2060,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1730,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   971,   972,   973,     0,
     974,   975,     0,     0,     0,   976,   977,   978,     0,     0,
       0,     0,     0,     0,     0,   979,     0,   980,     0,     0,
       0,     0,     0,     0,     0,  5943,     0,     0,     0,     0,
     981,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   982,     0,     0,     0,     0,   983,   984,     0,   985,
       0,     0,     0,     0,     0,   986,     0,   987,     0,     0,
     988,     0,     0,   989,   990,   991,     0,   992,   993,   994,
       0,   995,  2061,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   996,     0,     0,     0,
     997,   998,   999,  1000,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,  1003,     0,     0,     0,     0,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,     0,     0,     0,     0,  3381,  1007,
    1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,
       0,     0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1017,
    1018,  1019,     0,     0,     0,     0,     0,  1020,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,  1022,    55,    56,    57,    58,    59,    60,  1023,
      62,    63,    64,    65,    66,    67,    68,  1024,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,  1025,    85,   572,    87,    88,    89,    90,
      91,   573,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,
    1032,  1033,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,  1034,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,  1035,  1036,
    1037,   576,  1038,  1039,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,  1040,
     172,   173,   582,   175,   176,  1041,   178,  1042,   583,   181,
     182,   584,   184,   185,   585,  3381,   187,   188,   189,  1043,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,  1044,  1045,   213,   214,   215,  1046,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,  1047,   255,  1048,   257,   258,   259,
     260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,
     270,   271,   272,  1053,  1054,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
    1055,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,  1056,   303,   304,   305,   306,   307,
    1057,  1058,   310,   590,   311,   591,   313,   314,  1059,   316,
     317,   318,   319,   320,   321,  1060,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,  1061,   353,   594,   355,   356,
     357,  1062,  1063,   360,   361,   595,   363,   364,  1064,   366,
     367,   368,   369,   370,   371,  1065,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,  1066,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,
    1071,  1072,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,  1073,   442,  1074,   444,   445,
     446,   447,   448,   449,   450,   451,   452,  1075,  1076,   601,
    1077,   457,   458,   459,     0,   460,   602,   462,  1078,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1079,  1080,
       0,     0,     0,     0,  1081,     0,  2485,     0,  1082,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     971,   972,   973,     0,   974,   975,     0,     0,     0,   976,
     977,   978,     0,     0,     0,     0,     0,     0,     0,   979,
       0,   980,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   981,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   982,     0,     0,     0,     0,
     983,   984,     0,   985,     0,     0,     0,     0,     0,   986,
       0,   987,     0,     0,   988,     0,     0,   989,     0,   991,
       0,   992,   993,   994,     0,   995,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     996,     0,     0,     0,   997,   998,   999,  1000,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1002,  1003,     0,     0,     0,
       0,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,     0,     0,
       0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,
       0,     0,  1012,     0,     0,     0,     0,     0,     0,     0,
    1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1017,  1018,  1019,     0,     0,     0,     0,
       0,  1020,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,  1022,    55,    56,    57,
      58,    59,  2486,  1023,    62,    63,    64,    65,    66,    67,
      68,  1024,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,  1025,    85,   572,
      87,    88,    89,    90,    91,   573,  1026,    93,  1027,  1028,
      96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
    1034,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,  1035,  1036,  1037,   576,  1038,  1039,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,  1040,   172,   173,   582,   175,   176,  1041,
     178,  1042,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,  1043,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,  1044,  1045,   213,   214,   215,
    1046,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,  1047,   255,
    1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,
     266,   267,   268,   269,   270,   271,   272,  1053,  1054,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,  1055,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,  1056,   303,
     304,   305,   306,   307,  1057,  1058,   310,   590,   311,   591,
     313,   314,  1059,   316,   317,   318,   319,   320,   321,  1060,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,  1061,
     353,   594,   355,   356,   357,  1062,  1063,   360,   361,   595,
     363,   364,  1064,   366,   367,   368,   369,   370,   371,  1065,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,  1066,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,  1067,  1068,  1069,
    1070,   423,   424,   425,  1071,  1072,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,  1073,
     442,  1074,   444,   445,   446,   447,   448,   449,   450,   451,
     452,  1075,  1076,   601,  1077,   457,   458,   459,     0,   460,
     602,   462,  1078,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,  1080,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   945,   946,   947,   948,   949,     0,     0,     0,  2391,
       0,     0,     0,   950,   951,     0,   952,     0,     0,     0,
       0,     0,     0,   953,   954,     0,     0,   955,   956,   957,
     958,     0,   959,   960,     0,   961,   962,     0,     0,     0,
       0,   963,     0,     0,     0,   964,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   966,   967,
     968,     0,   969,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   971,   972,   973,     0,   974,   975,
       0,     0,     0,   976,   977,   978,     0,     0,     0,     0,
       0,     0,     0,   979,     0,   980,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2392,     0,   981,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   982,
       0,     0,     0,     0,   983,   984,     0,   985,     0,     0,
       0,     0,     0,   986,     0,   987,     0,     0,   988,     0,
       0,   989,   990,   991,     0,   992,   993,   994,     0,   995,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   996,     0,     0,     0,   997,   998,
     999,  1000,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
    1003,     0,     0,     0,     0,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,     0,     0,     0,     0,     0,  1007,  1008,     0,
    1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,     0,
       0,     0,  2393,     0,  1013,  1014,  1015,  1016,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
       0,     0,     0,     0,     0,  1020,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
    1022,    55,    56,    57,    58,    59,    60,  1023,    62,    63,
      64,    65,    66,    67,    68,  1024,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,  1025,    85,   572,    87,    88,    89,    90,    91,   573,
    1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,  1034,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,  1035,  1036,  1037,   576,
    1038,  1039,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,  1040,   172,   173,
     582,   175,   176,  1041,   178,  1042,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,  1043,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,  1044,
    1045,   213,   214,   215,  1046,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,  1047,   255,  1048,   257,   258,   259,   260,  1049,
    1050,  1051,  1052,   265,   266,   267,   268,   269,   270,   271,
     272,  1053,  1054,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,  1055,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,  1056,   303,   304,   305,   306,   307,  1057,  1058,
     310,   590,   311,   591,   313,   314,  1059,   316,   317,   318,
     319,   320,   321,  1060,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,  1061,   353,   594,   355,   356,   357,  1062,
    1063,   360,   361,   595,   363,   364,  1064,   366,   367,   368,
     369,   370,   371,  1065,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,  1066,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,  1073,   442,  1074,   444,   445,   446,   447,
     448,   449,   450,   451,   452,  1075,  1076,   601,  1077,   457,
     458,   459,     0,   460,   602,   462,  1078,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1079,  1080,     0,     0,
       0,     0,  1081,     0,     0,     0,  1082,     0,     0,  1083,
    1084,     0,     0,  1085,  1086,   945,   946,   947,   948,   949,
       0,     0,     0,     0,     0,     0,     0,   950,   951,     0,
     952,     0,     0,     0,     0,     0,     0,   953,   954,     0,
       0,   955,   956,   957,   958,     0,   959,   960,     0,   961,
     962,     0,     0,     0,     0,   963,     0,     0,     0,   964,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   969,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   971,   972,
     973,     0,   974,   975,     0,     0,     0,   976,   977,   978,
       0,     0,     0,     0,     0,     0,     0,   979,     0,   980,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   981,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   982,     0,     0,     0,     0,   983,   984,
       0,   985,     0,     0,     0,     0,     0,   986,     0,   987,
       0,     0,   988,     0,     0,   989,   990,   991,     0,   992,
     993,   994,     0,   995,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   996,     0,
       0,     0,   997,   998,   999,  1000,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,  1003,     0,     0,     0,     0,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,     0,     0,     0,     0,
       0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,
    1012,     0,     0,     0,     0,     0,     0,     0,  1013,  1014,
    1015,  1016,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,
       0,  1021,  1593,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,  1022,    55,    56,    57,    58,    59,
      60,  1023,    62,    63,    64,    65,    66,    67,    68,  1024,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,  1025,    85,   572,    87,    88,
      89,    90,    91,   573,  1026,    93,  1027,  1028,    96,  1029,
    1030,  1031,  1032,  1033,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,  1034,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
    1035,  1036,  1037,   576,  1038,  1039,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,  1040,   172,   173,   582,   175,   176,  1041,   178,  1042,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,  1043,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,  1044,  1045,   213,   214,   215,  1046,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,  1047,   255,  1048,   257,
     258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,
     268,   269,   270,   271,   272,  1053,  1054,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,  1055,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,  1056,   303,   304,   305,
     306,   307,  1057,  1058,   310,   590,   311,   591,   313,   314,
    1059,   316,   317,   318,   319,   320,   321,  1060,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,  1061,   353,   594,
     355,   356,   357,  1062,  1063,   360,   361,   595,   363,   364,
    1064,   366,   367,   368,   369,   370,   371,  1065,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,  1066,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,
     424,   425,  1071,  1072,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,  1073,   442,  1074,
     444,   445,   446,   447,   448,   449,   450,   451,   452,  1075,
    1076,   601,  1077,   457,   458,   459,     0,   460,   602,   462,
    1078,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1079,  1080,     0,     0,     0,     0,  1081,     0,     0,     0,
    1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,
     946,   947,   948,   949,     0,     0,     0,     0,     0,     0,
       0,   950,   951,     0,   952,     0,     0,     0,     0,     0,
       0,   953,   954,     0,     0,   955,   956,   957,   958,     0,
     959,   960,     0,   961,   962,     0,     0,     0,     0,   963,
       0,     0,     0,   964,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   967,   968,     0,
     969,   970,     0,     0,     0,     0,  3122,     0,     0,     0,
       0,     0,   971,   972,   973,     0,   974,   975,     0,     0,
       0,   976,   977,   978,     0,     0,     0,     0,     0,     0,
       0,   979,     0,   980,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   981,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   982,     0,     0,
       0,     0,   983,   984,     0,   985,     0,     0,     0,     0,
       0,   986,     0,   987,     0,     0,   988,     0,     0,   989,
     990,   991,     0,   992,   993,   994,     0,   995,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   996,     0,     0,     0,   997,   998,   999,  1000,
       0,     0,     0,     0,     0,     0,  1001,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,  1003,     0,
       0,     0,     0,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
       0,     0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,
    1011,     0,     0,     0,  1012,     0,     0,     0,     0,     0,
       0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1017,  1018,  1019,     0,     0,
       0,     0,     0,  1020,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,  1022,    55,
      56,    57,    58,    59,    60,  1023,    62,    63,    64,    65,
      66,    67,    68,  1024,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,  1025,
      85,   572,    87,    88,    89,    90,    91,   573,  1026,    93,
    1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,  1034,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,  1035,  1036,  1037,   576,  1038,  1039,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,  1040,   172,   173,   582,   175,
     176,  1041,   178,  1042,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,  1043,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,  1044,  1045,   213,
     214,   215,  1046,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
    1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,
    1052,   265,   266,   267,   268,   269,   270,   271,   272,  1053,
    1054,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,  1055,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
    1056,   303,   304,   305,   306,   307,  1057,  1058,   310,   590,
     311,   591,   313,   314,  1059,   316,   317,   318,   319,   320,
     321,  1060,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,  1061,   353,   594,   355,   356,   357,  1062,  1063,   360,
     361,   595,   363,   364,  1064,   366,   367,   368,   369,   370,
     371,  1065,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
    1066,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,  1067,
    1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,  1073,   442,  1074,   444,   445,   446,   447,   448,   449,
     450,   451,   452,  1075,  1076,   601,  1077,   457,   458,   459,
       0,   460,   602,   462,  1078,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1079,  1080,     0,     0,     0,     0,
    1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,     0,
       0,  1085,  1086,   945,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,   964,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
    3124,     0,     0,     0,     0,     0,   971,   972,   973,     0,
     974,   975,     0,     0,     0,   976,   977,   978,     0,     0,
       0,     0,     0,     0,     0,   979,     0,   980,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     981,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   982,     0,     0,     0,     0,   983,   984,     0,   985,
       0,     0,     0,     0,     0,   986,     0,   987,     0,     0,
     988,     0,     0,   989,   990,   991,     0,   992,   993,   994,
       0,   995,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   996,     0,     0,     0,
     997,   998,   999,  1000,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,  1003,     0,     0,     0,     0,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,     0,     0,     0,     0,     0,  1007,
    1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,
       0,     0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1017,
    1018,  1019,     0,     0,     0,     0,     0,  1020,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,  1022,    55,    56,    57,    58,    59,    60,  1023,
      62,    63,    64,    65,    66,    67,    68,  1024,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,  1025,    85,   572,    87,    88,    89,    90,
      91,   573,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,
    1032,  1033,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,  1034,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,  1035,  1036,
    1037,   576,  1038,  1039,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,  1040,
     172,   173,   582,   175,   176,  1041,   178,  1042,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,  1043,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,  1044,  1045,   213,   214,   215,  1046,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,  1047,   255,  1048,   257,   258,   259,
     260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,
     270,   271,   272,  1053,  1054,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
    1055,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,  1056,   303,   304,   305,   306,   307,
    1057,  1058,   310,   590,   311,   591,   313,   314,  1059,   316,
     317,   318,   319,   320,   321,  1060,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,  1061,   353,   594,   355,   356,
     357,  1062,  1063,   360,   361,   595,   363,   364,  1064,   366,
     367,   368,   369,   370,   371,  1065,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,  1066,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,
    1071,  1072,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,  1073,   442,  1074,   444,   445,
     446,   447,   448,   449,   450,   451,   452,  1075,  1076,   601,
    1077,   457,   458,   459,     0,   460,   602,   462,  1078,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1079,  1080,
       0,     0,     0,     0,  1081,     0,     0,     0,  1082,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,  3126,     0,     0,     0,     0,     0,
     971,   972,   973,     0,   974,   975,     0,     0,     0,   976,
     977,   978,     0,     0,     0,     0,     0,     0,     0,   979,
       0,   980,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   981,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   982,     0,     0,     0,     0,
     983,   984,     0,   985,     0,     0,     0,     0,     0,   986,
       0,   987,     0,     0,   988,     0,     0,   989,   990,   991,
       0,   992,   993,   994,     0,   995,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     996,     0,     0,     0,   997,   998,   999,  1000,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1002,  1003,     0,     0,     0,
       0,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,     0,     0,
       0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,
       0,     0,  1012,     0,     0,     0,     0,     0,     0,     0,
    1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1017,  1018,  1019,     0,     0,     0,     0,
       0,  1020,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,  1022,    55,    56,    57,
      58,    59,    60,  1023,    62,    63,    64,    65,    66,    67,
      68,  1024,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,  1025,    85,   572,
      87,    88,    89,    90,    91,   573,  1026,    93,  1027,  1028,
      96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
    1034,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,  1035,  1036,  1037,   576,  1038,  1039,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,  1040,   172,   173,   582,   175,   176,  1041,
     178,  1042,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,  1043,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,  1044,  1045,   213,   214,   215,
    1046,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,  1047,   255,
    1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,
     266,   267,   268,   269,   270,   271,   272,  1053,  1054,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,  1055,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,  1056,   303,
     304,   305,   306,   307,  1057,  1058,   310,   590,   311,   591,
     313,   314,  1059,   316,   317,   318,   319,   320,   321,  1060,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,  1061,
     353,   594,   355,   356,   357,  1062,  1063,   360,   361,   595,
     363,   364,  1064,   366,   367,   368,   369,   370,   371,  1065,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,  1066,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,  1067,  1068,  1069,
    1070,   423,   424,   425,  1071,  1072,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,  1073,
     442,  1074,   444,   445,   446,   447,   448,   449,   450,   451,
     452,  1075,  1076,   601,  1077,   457,   458,   459,     0,   460,
     602,   462,  1078,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,  1080,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   945,   946,   947,   948,   949,     0,     0,     0,     0,
       0,     0,     0,   950,   951,     0,   952,     0,     0,     0,
       0,     0,     0,   953,   954,     0,     0,   955,   956,   957,
     958,     0,   959,   960,     0,   961,   962,     0,     0,     0,
       0,   963,     0,     0,     0,  3377,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   966,   967,
     968,     0,   969,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   971,   972,   973,     0,   974,   975,
       0,     0,     0,   976,   977,   978,     0,  3378,     0,     0,
       0,     0,     0,   979,     0,   980,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   981,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   982,
       0,     0,     0,     0,   983,   984,     0,   985,     0,     0,
       0,     0,     0,   986,     0,   987,     0,     0,   988,     0,
       0,   989,   990,   991,     0,   992,   993,   994,     0,   995,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   996,     0,     0,     0,   997,   998,
     999,  1000,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
    1003,     0,     0,     0,     0,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,     0,     0,     0,     0,     0,  1007,  1008,     0,
    1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,     0,
       0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
       0,     0,     0,     0,     0,  1020,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
    1022,    55,    56,    57,    58,    59,    60,  1023,    62,    63,
      64,    65,    66,    67,    68,  1024,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,  1025,    85,   572,    87,    88,    89,    90,    91,   573,
    1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,  1034,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,  1035,  1036,  1037,   576,
    1038,  1039,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,  1040,   172,   173,
     582,   175,   176,  1041,   178,  1042,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,  1043,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,  1044,
    1045,   213,   214,   215,  1046,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,  1047,   255,  1048,   257,   258,   259,   260,  1049,
    1050,  1051,  1052,   265,   266,   267,   268,   269,   270,   271,
     272,  1053,  1054,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,  1055,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,  1056,   303,   304,   305,   306,   307,  1057,  1058,
     310,   590,   311,   591,   313,   314,  1059,   316,   317,   318,
     319,   320,   321,  1060,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,  1061,   353,   594,   355,   356,   357,  1062,
    1063,   360,   361,   595,   363,   364,  1064,   366,   367,   368,
     369,   370,   371,  1065,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,  1066,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,  1073,   442,  1074,   444,   445,   446,   447,
     448,   449,   450,   451,   452,  1075,  1076,   601,  1077,   457,
     458,   459,     0,   460,   602,   462,  1078,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1079,  1080,     0,     0,
       0,     0,  1081,     0,     0,     0,  1082,     0,     0,  1083,
    1084,     0,     0,  1085,  1086,   945,   946,   947,   948,   949,
       0,     0,     0,     0,     0,     0,     0,   950,   951,     0,
     952,     0,     0,     0,     0,     0,     0,   953,   954,     0,
       0,   955,   956,   957,   958,     0,   959,   960,     0,   961,
     962,     0,     0,     0,     0,   963,     0,     0,     0,   964,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   969,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   971,   972,
     973,     0,   974,   975,     0,     0,     0,   976,   977,   978,
       0,     0,     0,     0,     0,     0,     0,   979,     0,   980,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   981,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   982,     0,     0,     0,     0,   983,   984,
       0,   985,     0,     0,     0,     0,     0,   986,     0,   987,
       0,     0,   988,     0,     0,   989,   990,   991,     0,   992,
     993,   994,     0,   995,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   996,     0,
       0,     0,   997,   998,   999,  1000,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,  1003,     0,     0,     0,     0,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,     0,     0,     0,     0,
       0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,
    1012,     0,     0,     0,     0,     0,     0,     0,  1013,  1014,
    1015,  1016,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,  1022,    55,    56,    57,    58,    59,
      60,  1023,    62,    63,    64,    65,    66,    67,    68,  1024,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,  1025,    85,   572,    87,    88,
      89,    90,    91,   573,  1026,    93,  1027,  1028,    96,  1029,
    1030,  1031,  1032,  1033,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,  1034,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
    1035,  1036,  1037,   576,  1038,  1039,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,  1040,   172,   173,   582,   175,   176,  1041,   178,  1042,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,  1043,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,  1044,  1045,   213,   214,   215,  1046,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,  1047,   255,  1048,   257,
     258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,
     268,   269,   270,   271,   272,  1053,  1054,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,  1055,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,  1056,   303,   304,   305,
     306,   307,  1057,  1058,   310,   590,   311,   591,   313,   314,
    1059,   316,   317,   318,   319,   320,   321,  1060,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,  1061,   353,   594,
     355,   356,   357,  1062,  1063,   360,   361,   595,   363,   364,
    1064,   366,   367,   368,   369,   370,   371,  1065,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,  1066,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,
     424,   425,  1071,  1072,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,  1073,   442,  1074,
     444,   445,   446,   447,   448,   449,   450,   451,   452,  1075,
    1076,   601,  1077,   457,   458,   459,     0,   460,   602,   462,
    1078,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1079,  1080,     0,     0,     0,     0,  1081,     0,     0,     0,
    1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,
     946,   947,   948,   949,     0,     0,     0,     0,     0,     0,
       0,   950,   951,     0,   952,     0,     0,     0,     0,     0,
       0,   953,   954,     0,     0,   955,   956,   957,   958,     0,
     959,   960,     0,   961,   962,     0,     0,     0,     0,   963,
       0,     0,     0,   964,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   967,   968,     0,
     969,   970,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   971,   972,   973,     0,   974,   975,     0,     0,
       0,   976,   977,   978,     0,     0,     0,     0,     0,     0,
       0,   979,     0,   980,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   981,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   982,     0,     0,
       0,     0,   983,   984,     0,   985,     0,     0,     0,     0,
       0,   986,     0,   987,     0,     0,   988,     0,     0,   989,
     990,   991,     0,   992,   993,   994,     0,   995,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   996,     0,     0,     0,   997,   998,   999,  1000,
       0,     0,     0,     0,     0,     0,  1001,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,  1003,     0,
       0,     0,     0,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
       0,     0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,
    1011,     0,     0,     0,  1012,     0,     0,     0,     0,     0,
       0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1017,  1018,  1019,     0,     0,
       0,     0,     0,  1020,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,  1022,    55,
      56,    57,    58,    59,    60,  1023,    62,    63,    64,    65,
      66,    67,    68,  1024,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,  1025,
      85,   572,    87,    88,    89,    90,    91,   573,  1026,    93,
    1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,  1034,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,  1035,  1036,  1037,   576,  1038,  1039,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,  1040,   172,   173,   582,   175,
     176,  1041,   178,  1042,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,  1043,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,  1044,  1045,   213,
     214,   215,  1046,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
    1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,
    1052,   265,   266,   267,   268,   269,   270,   271,   272,  1053,
    1054,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,  1055,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
    1056,   303,   304,   305,   306,   307,  1057,  1058,   310,   590,
     311,   591,   313,   314,  1059,   316,   317,   318,   319,   320,
     321,  1060,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,  1061,   353,   594,   355,   356,   357,  1062,  1063,   360,
     361,   595,   363,   364,  1064,   366,   367,   368,   369,   370,
     371,  1065,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
    1066,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,  1067,
    1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,  1073,   442,  1074,   444,   445,   446,   447,   448,   449,
     450,   451,   452,  1075,  1076,   601,  1077,   457,   458,   459,
       0,   460,   602,   462,  1078,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1079,  1080,     0,     0,     0,     0,
    1081,     0,     0,     0,  1620,     0,     0,  1083,  1084,     0,
       0,  1085,  1086,   945,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,   964,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   971,   972,   973,     0,
     974,   975,     0,     0,     0,   976,   977,   978,     0,     0,
       0,     0,     0,     0,     0,   979,     0,   980,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     981,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   982,     0,     0,     0,     0,   983,   984,     0,   985,
       0,     0,     0,     0,     0,   986,     0,   987,     0,     0,
     988,     0,     0,   989,   990,   991,     0,   992,   993,   994,
       0,   995,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   996,     0,     0,     0,
     997,   998,   999,  1000,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,  1003,     0,     0,     0,     0,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,     0,     0,     0,     0,     0,  1007,
    1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,
       0,     0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1017,
    1018,  1019,     0,     0,     0,     0,     0,  1020,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,  1022,    55,    56,    57,    58,    59,    60,  1023,
      62,    63,    64,    65,    66,    67,    68,  1024,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,  1025,    85,   572,    87,    88,    89,    90,
      91,   573,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,
    1032,  1033,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,  1034,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,  1035,  1036,
    1037,   576,  1038,  1039,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,  1040,
     172,   173,   582,   175,   176,  1041,   178,  1042,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,  1043,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,  1044,  1045,   213,   214,   215,  1046,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,  1047,   255,  1048,   257,   258,   259,
     260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,
     270,   271,   272,  1053,  1054,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
    1055,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,  1056,   303,   304,   305,   306,   307,
    1057,  1058,   310,   590,   311,   591,   313,   314,  1059,   316,
     317,   318,   319,   320,   321,  1060,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,  1061,   353,   594,   355,   356,
     357,  1062,  1063,   360,   361,   595,   363,   364,  1064,   366,
     367,   368,   369,   370,   371,  1065,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,  1066,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,
    1071,  1072,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,  2262,   442,  1074,   444,   445,
     446,   447,   448,   449,   450,   451,   452,  1075,  1076,   601,
    1077,   457,   458,   459,     0,   460,   602,   462,  1078,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1079,  1080,
       0,     0,     0,     0,  1081,     0,     0,     0,  1082,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     971,   972,   973,     0,   974,   975,     0,     0,     0,   976,
     977,   978,     0,     0,     0,     0,     0,     0,     0,   979,
       0,  3763,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   981,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   982,     0,     0,     0,     0,
     983,   984,     0,   985,     0,     0,     0,     0,     0,   986,
       0,   987,     0,     0,   988,     0,     0,   989,   990,   991,
       0,   992,   993,   994,     0,   995,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     996,     0,     0,     0,   997,   998,   999,  1000,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1002,  1003,     0,     0,     0,
       0,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,     0,     0,
       0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,
       0,     0,  1012,     0,     0,     0,     0,     0,     0,     0,
    1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1017,  1018,  1019,     0,     0,     0,     0,
       0,  1020,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,  1022,    55,    56,    57,
      58,    59,    60,  1023,    62,    63,    64,    65,    66,    67,
      68,  1024,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,  1025,    85,   572,
      87,    88,    89,    90,    91,   573,  1026,    93,  1027,  1028,
      96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
    1034,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,  1035,  1036,  1037,   576,  1038,  1039,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,  1040,   172,   173,   582,   175,   176,  1041,
     178,  1042,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,  1043,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,  1044,  1045,   213,   214,   215,
    1046,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,  1047,   255,
    1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,
     266,   267,   268,   269,   270,   271,   272,  1053,  1054,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,  1055,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,  1056,   303,
     304,   305,   306,   307,  1057,  1058,   310,   590,   311,   591,
     313,   314,  1059,   316,   317,   318,   319,   320,   321,  1060,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,  1061,
     353,   594,   355,   356,   357,  1062,  1063,   360,   361,   595,
     363,   364,  1064,   366,   367,   368,   369,   370,   371,  1065,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,  1066,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,  1067,  1068,  1069,
    1070,   423,   424,   425,  1071,  1072,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,  1073,
     442,  1074,   444,   445,   446,   447,   448,   449,   450,   451,
     452,  1075,  1076,   601,  1077,   457,   458,   459,     0,   460,
     602,   462,  1078,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,  1080,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   945,   946,   947,   948,   949,     0,     0,     0,     0,
       0,     0,     0,   950,   951,     0,   952,     0,     0,     0,
       0,     0,     0,   953,   954,     0,     0,   955,   956,   957,
     958,     0,   959,   960,     0,   961,   962,     0,     0,     0,
       0,   963,     0,     0,     0,   964,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   966,   967,
     968,     0,   969,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   971,   972,   973,     0,   974,   975,
       0,     0,     0,   976,   977,   978,     0,     0,     0,     0,
       0,     0,     0,   979,     0,  3785,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   981,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   982,
       0,     0,     0,     0,   983,   984,     0,   985,     0,     0,
       0,     0,     0,   986,     0,   987,     0,     0,   988,     0,
       0,   989,   990,   991,     0,   992,   993,   994,     0,   995,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   996,     0,     0,     0,   997,   998,
     999,  1000,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
    1003,     0,     0,     0,     0,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,     0,     0,     0,     0,     0,  1007,  1008,     0,
    1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,     0,
       0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
       0,     0,     0,     0,     0,  1020,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
    1022,    55,    56,    57,    58,    59,    60,  1023,    62,    63,
      64,    65,    66,    67,    68,  1024,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,  1025,    85,   572,    87,    88,    89,    90,    91,   573,
    1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,  1034,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,  1035,  1036,  1037,   576,
    1038,  1039,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,  1040,   172,   173,
     582,   175,   176,  1041,   178,  1042,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,  1043,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,  1044,
    1045,   213,   214,   215,  1046,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,  1047,   255,  1048,   257,   258,   259,   260,  1049,
    1050,  1051,  1052,   265,   266,   267,   268,   269,   270,   271,
     272,  1053,  1054,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,  1055,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,  1056,   303,   304,   305,   306,   307,  1057,  1058,
     310,   590,   311,   591,   313,   314,  1059,   316,   317,   318,
     319,   320,   321,  1060,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,  1061,   353,   594,   355,   356,   357,  1062,
    1063,   360,   361,   595,   363,   364,  1064,   366,   367,   368,
     369,   370,   371,  1065,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,  1066,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,  1073,   442,  1074,   444,   445,   446,   447,
     448,   449,   450,   451,   452,  1075,  1076,   601,  1077,   457,
     458,   459,     0,   460,   602,   462,  1078,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1079,  1080,     0,     0,
       0,     0,  1081,     0,     0,     0,  1082,     0,     0,  1083,
    1084,     0,     0,  1085,  1086,   945,   946,   947,   948,   949,
       0,     0,     0,     0,     0,     0,     0,   950,   951,     0,
     952,     0,     0,     0,     0,     0,     0,   953,   954,     0,
       0,   955,   956,   957,   958,     0,   959,   960,     0,   961,
     962,     0,     0,     0,     0,   963,     0,     0,     0,   964,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   969,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   971,   972,
     973,     0,   974,   975,     0,     0,     0,   976,   977,   978,
       0,     0,     0,     0,     0,     0,     0,   979,     0,   980,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   981,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   982,     0,     0,     0,     0,   983,   984,
    6033,   985,     0,     0,     0,     0,     0,   986,     0,   987,
       0,     0,   988,     0,     0,   989,     0,   991,     0,   992,
     993,   994,     0,   995,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   996,     0,
       0,     0,   997,   998,   999,  1000,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,  1003,     0,     0,     0,     0,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,     0,     0,     0,     0,
       0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,
    1012,     0,     0,     0,     0,     0,     0,     0,  1013,  1014,
    1015,  1016,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,  1022,    55,    56,    57,    58,    59,
      60,  1023,    62,    63,    64,    65,    66,    67,    68,  1024,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,  1025,    85,   572,    87,    88,
      89,    90,    91,   573,  1026,    93,  1027,  1028,    96,  1029,
    1030,  1031,  1032,  1033,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,  1034,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
    1035,  1036,  1037,   576,  1038,  1039,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,  1040,   172,   173,   582,   175,   176,  1041,   178,  1042,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,  1043,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,  1044,  1045,   213,   214,   215,  1046,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,  1047,   255,  1048,   257,
     258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,
     268,   269,   270,   271,   272,  1053,  1054,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,  1055,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,  1056,   303,   304,   305,
     306,   307,  1057,  1058,   310,   590,   311,   591,   313,   314,
    1059,   316,   317,   318,   319,   320,   321,  1060,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,  1061,   353,   594,
     355,   356,   357,  1062,  1063,   360,   361,   595,   363,   364,
    1064,   366,   367,   368,   369,   370,   371,  1065,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,  1066,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,
     424,   425,  1071,  1072,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,  1073,   442,  1074,
     444,   445,   446,   447,   448,   449,   450,   451,   452,  1075,
    1076,   601,  1077,   457,   458,   459,     0,   460,   602,   462,
    1078,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1079,  1080,     0,     0,     0,     0,  1081,     0,     0,     0,
    1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,
     946,   947,   948,   949,     0,     0,     0,     0,     0,     0,
       0,   950,   951,     0,   952,     0,     0,     0,     0,     0,
       0,   953,   954,     0,     0,   955,   956,   957,   958,     0,
     959,   960,     0,   961,   962,     0,     0,     0,     0,   963,
       0,     0,     0,   964,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   967,   968,     0,
     969,   970,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   971,   972,   973,     0,   974,   975,     0,     0,
       0,   976,   977,   978,     0,     0,     0,     0,     0,     0,
       0,   979,     0,  1586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   981,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   982,     0,     0,
       0,     0,   983,   984,     0,   985,     0,     0,     0,     0,
       0,   986,     0,   987,     0,     0,   988,     0,     0,   989,
       0,   991,     0,   992,   993,   994,     0,   995,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   996,     0,     0,     0,   997,   998,   999,  1000,
       0,     0,     0,     0,     0,     0,  1001,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,  1003,     0,
       0,     0,     0,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
       0,     0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,
    1011,     0,     0,     0,  1012,     0,     0,     0,     0,     0,
       0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1017,  1018,  1019,     0,     0,
       0,     0,     0,  1020,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,  1022,    55,
      56,    57,    58,    59,    60,  1023,    62,    63,    64,    65,
      66,    67,    68,  1024,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,  1025,
      85,   572,    87,    88,    89,    90,    91,   573,  1026,    93,
    1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,  1034,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,  1035,  1036,  1037,   576,  1038,  1039,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,  1040,   172,   173,   582,   175,
     176,  1041,   178,  1042,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,  1043,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,  1044,  1045,   213,
     214,   215,  1046,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
    1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,
    1052,   265,   266,   267,   268,   269,   270,   271,   272,  1053,
    1054,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,  1055,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
    1056,   303,   304,   305,   306,   307,  1057,  1058,   310,   590,
     311,   591,   313,   314,  1059,   316,   317,   318,   319,   320,
     321,  1060,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,  1061,   353,   594,   355,   356,   357,  1062,  1063,   360,
     361,   595,   363,   364,  1064,   366,   367,   368,   369,   370,
     371,  1065,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
    1066,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,  1067,
    1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,  1073,   442,  1074,   444,   445,   446,   447,   448,   449,
     450,   451,   452,  1075,  1076,   601,  1077,   457,   458,   459,
       0,   460,   602,   462,  1078,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1587,  1588,     0,     0,     0,     0,
    1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,     0,
       0,  1085,  1086,   945,   946,   947,   948,   949,     0,     0,
       0,     0,     0,     0,     0,   950,   951,     0,   952,     0,
       0,     0,     0,     0,     0,   953,   954,     0,     0,   955,
     956,   957,   958,     0,   959,   960,     0,   961,   962,     0,
       0,     0,     0,   963,     0,     0,     0,   964,     0,     0,
     965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     966,   967,   968,     0,   969,   970,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   971,   972,   973,     0,
     974,   975,     0,     0,     0,   976,   977,   978,     0,     0,
       0,     0,     0,     0,     0,   979,     0,  1724,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     981,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   982,     0,     0,     0,     0,   983,   984,     0,   985,
       0,     0,     0,     0,     0,   986,     0,   987,     0,     0,
     988,     0,     0,   989,     0,   991,     0,   992,   993,   994,
       0,   995,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   996,     0,     0,     0,
     997,   998,   999,  1000,     0,     0,     0,     0,     0,     0,
    1001,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,  1003,     0,     0,     0,     0,     0,     0,     0,
    1004,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1006,     0,     0,     0,     0,     0,  1007,
    1008,     0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,
       0,     0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1017,
    1018,  1019,     0,     0,     0,     0,     0,  1020,     0,  1021,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,  1022,    55,    56,    57,    58,    59,    60,  1023,
      62,    63,    64,    65,    66,    67,    68,  1024,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,  1025,    85,   572,    87,    88,    89,    90,
      91,   573,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,
    1032,  1033,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,  1034,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,  1035,  1036,
    1037,   576,  1038,  1039,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,  1040,
     172,   173,   582,   175,   176,  1041,   178,  1042,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,  1043,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,  1044,  1045,   213,   214,   215,  1046,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,  1047,   255,  1048,   257,   258,   259,
     260,  1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,
     270,   271,   272,  1053,  1054,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
    1055,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,  1056,   303,   304,   305,   306,   307,
    1057,  1058,   310,   590,   311,   591,   313,   314,  1059,   316,
     317,   318,   319,   320,   321,  1060,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,  1061,   353,   594,   355,   356,
     357,  1062,  1063,   360,   361,   595,   363,   364,  1064,   366,
     367,   368,   369,   370,   371,  1065,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,  1066,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,
    1071,  1072,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,  1073,   442,  1074,   444,   445,
     446,   447,   448,   449,   450,   451,   452,  1075,  1076,   601,
    1077,   457,   458,   459,     0,   460,   602,   462,  1078,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1587,  1588,
       0,     0,     0,     0,  1081,     0,     0,     0,  1082,     0,
       0,  1083,  1084,     0,     0,  1085,  1086,   945,   946,   947,
     948,   949,     0,     0,     0,     0,     0,     0,     0,   950,
     951,     0,   952,     0,     0,     0,     0,     0,     0,   953,
     954,     0,     0,   955,   956,   957,   958,     0,   959,   960,
       0,   961,   962,     0,     0,     0,     0,   963,     0,     0,
       0,   964,     0,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,   967,   968,     0,   969,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     971,   972,   973,     0,   974,   975,     0,     0,     0,   976,
     977,   978,     0,     0,     0,     0,     0,     0,     0,   979,
       0,  1726,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   981,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   982,     0,     0,     0,     0,
     983,   984,     0,   985,     0,     0,     0,     0,     0,   986,
       0,   987,     0,     0,   988,     0,     0,   989,     0,   991,
       0,   992,   993,   994,     0,   995,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     996,     0,     0,     0,   997,   998,   999,  1000,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1002,  1003,     0,     0,     0,
       0,     0,     0,     0,  1004,     0,     0,  1005,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1006,     0,     0,
       0,     0,     0,  1007,  1008,     0,  1009,  1010,  1011,     0,
       0,     0,  1012,     0,     0,     0,     0,     0,     0,     0,
    1013,  1014,  1015,  1016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1017,  1018,  1019,     0,     0,     0,     0,
       0,  1020,     0,  1021,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,  1022,    55,    56,    57,
      58,    59,    60,  1023,    62,    63,    64,    65,    66,    67,
      68,  1024,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,  1025,    85,   572,
      87,    88,    89,    90,    91,   573,  1026,    93,  1027,  1028,
      96,  1029,  1030,  1031,  1032,  1033,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
    1034,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,  1035,  1036,  1037,   576,  1038,  1039,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,  1040,   172,   173,   582,   175,   176,  1041,
     178,  1042,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,  1043,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,  1044,  1045,   213,   214,   215,
    1046,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,  1047,   255,
    1048,   257,   258,   259,   260,  1049,  1050,  1051,  1052,   265,
     266,   267,   268,   269,   270,   271,   272,  1053,  1054,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,  1055,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,  1056,   303,
     304,   305,   306,   307,  1057,  1058,   310,   590,   311,   591,
     313,   314,  1059,   316,   317,   318,   319,   320,   321,  1060,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,  1061,
     353,   594,   355,   356,   357,  1062,  1063,   360,   361,   595,
     363,   364,  1064,   366,   367,   368,   369,   370,   371,  1065,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,  1066,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,  1067,  1068,  1069,
    1070,   423,   424,   425,  1071,  1072,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,  1073,
     442,  1074,   444,   445,   446,   447,   448,   449,   450,   451,
     452,  1075,  1076,   601,  1077,   457,   458,   459,     0,   460,
     602,   462,  1078,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1587,  1588,     0,     0,     0,     0,  1081,     0,
       0,     0,  1082,     0,     0,  1083,  1084,     0,     0,  1085,
    1086,   945,   946,   947,   948,   949,     0,     0,     0,     0,
       0,     0,     0,   950,   951,     0,   952,     0,     0,     0,
       0,     0,     0,   953,   954,     0,     0,   955,   956,   957,
     958,     0,   959,   960,     0,   961,   962,     0,     0,     0,
       0,   963,     0,     0,     0,   964,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   966,   967,
     968,     0,   969,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   971,   972,   973,     0,   974,   975,
       0,     0,     0,   976,   977,   978,     0,     0,     0,     0,
       0,     0,     0,   979,     0,   980,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   981,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   982,
       0,     0,     0,     0,   983,   984,     0,   985,     0,     0,
       0,     0,     0,   986,     0,   987,     0,     0,   988,     0,
       0,   989,     0,   991,     0,   992,   993,   994,     0,   995,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   996,     0,     0,     0,   997,   998,
     999,  1000,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
    1003,     0,     0,     0,     0,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1006,     0,     0,     0,     0,     0,  1007,  1008,     0,
    1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,     0,
       0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
       0,     0,     0,     0,     0,  1020,     0,  1021,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
    1022,    55,    56,    57,    58,    59,    60,  1023,    62,    63,
      64,    65,    66,    67,    68,  1024,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,  1025,    85,   572,    87,    88,    89,    90,    91,   573,
    1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,  1034,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,  1035,  1036,  1037,   576,
    1038,  1039,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,  1040,   172,   173,
     582,   175,   176,  1041,   178,  1042,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,  1043,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,  1044,
    1045,   213,   214,   215,  1046,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,  1047,   255,  1048,   257,   258,   259,   260,  1049,
    1050,  1051,  1052,   265,   266,   267,   268,   269,   270,   271,
     272,  1053,  1054,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,  1055,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,  1056,   303,   304,   305,   306,   307,  1057,  1058,
     310,   590,   311,   591,   313,   314,  1059,   316,   317,   318,
     319,   320,   321,  1060,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,  1061,   353,   594,   355,   356,   357,  1062,
    1063,   360,   361,   595,   363,   364,  1064,   366,   367,   368,
     369,   370,   371,  1065,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,  1066,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,  1072,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,  1073,   442,  1074,   444,   445,   446,   447,
     448,   449,   450,   451,   452,  1075,  1076,   601,  1077,   457,
     458,   459,     0,   460,   602,   462,  1078,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1079,  1080,     0,     0,
       0,     0,  1081,     0,     0,     0,  1082,     0,     0,  1083,
    1084,     0,     0,  1085,  1086,   945,   946,   947,   948,   949,
       0,     0,     0,     0,     0,     0,     0,   950,   951,     0,
     952,     0,     0,     0,     0,     0,     0,   953,   954,     0,
       0,   955,   956,   957,   958,     0,   959,   960,     0,   961,
     962,     0,     0,     0,     0,   963,     0,     0,     0,   964,
       0,     0,   965,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   969,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   971,   972,
     973,     0,   974,   975,     0,     0,     0,   976,   977,   978,
       0,     0,     0,     0,     0,     0,     0,   979,     0,  2501,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   981,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   982,     0,     0,     0,     0,   983,   984,
       0,   985,     0,     0,     0,     0,     0,   986,     0,   987,
       0,     0,   988,     0,     0,   989,     0,   991,     0,   992,
     993,   994,     0,   995,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   996,     0,
       0,     0,   997,   998,   999,  1000,     0,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,  1003,     0,     0,     0,     0,     0,
       0,     0,  1004,     0,     0,  1005,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1006,     0,     0,     0,     0,
       0,  1007,  1008,     0,  1009,  1010,  1011,     0,     0,     0,
    1012,     0,     0,     0,     0,     0,     0,     0,  1013,  1014,
    1015,  1016,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1017,  1018,  1019,     0,     0,     0,     0,     0,  1020,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,  1022,    55,    56,    57,    58,    59,
      60,  1023,    62,    63,    64,    65,    66,    67,    68,  1024,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,  1025,    85,   572,    87,    88,
      89,    90,    91,   573,  1026,    93,  1027,  1028,    96,  1029,
    1030,  1031,  1032,  1033,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,  1034,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
    1035,  1036,  1037,   576,  1038,  1039,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,  1040,   172,   173,   582,   175,   176,  1041,   178,  1042,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,  1043,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,  1044,  1045,   213,   214,   215,  1046,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,  1047,   255,  1048,   257,
     258,   259,   260,  1049,  1050,  1051,  1052,   265,   266,   267,
     268,   269,   270,   271,   272,  1053,  1054,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,  1055,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,  1056,   303,   304,   305,
     306,   307,  1057,  1058,   310,   590,   311,   591,   313,   314,
    1059,   316,   317,   318,   319,   320,   321,  1060,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,  1061,   353,   594,
     355,   356,   357,  1062,  1063,   360,   361,   595,   363,   364,
    1064,   366,   367,   368,   369,   370,   371,  1065,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,  1066,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,  1067,  1068,  1069,  1070,   423,
     424,   425,  1071,  1072,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,  1073,   442,  1074,
     444,   445,   446,   447,   448,   449,   450,   451,   452,  1075,
    1076,   601,  1077,   457,   458,   459,     0,   460,   602,   462,
    1078,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1079,  1080,     0,     0,     0,     0,  1081,     0,     0,     0,
    1082,     0,     0,  1083,  1084,     0,     0,  1085,  1086,   945,
     946,   947,   948,   949,     0,     0,     0,     0,     0,     0,
       0,   950,   951,     0,   952,     0,     0,     0,     0,     0,
       0,   953,   954,     0,     0,   955,   956,   957,   958,     0,
     959,   960,     0,   961,   962,     0,     0,     0,     0,   963,
       0,     0,     0,   964,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   966,   967,   968,     0,
     969,   970,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   971,   972,   973,     0,   974,   975,     0,     0,
       0,   976,   977,   978,     0,     0,     0,     0,     0,     0,
       0,   979,     0,  2503,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   981,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   982,     0,     0,
       0,     0,   983,   984,     0,   985,     0,     0,     0,     0,
       0,   986,     0,   987,     0,     0,   988,     0,     0,   989,
       0,   991,     0,   992,   993,   994,     0,   995,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   996,     0,     0,     0,   997,   998,   999,  1000,
       0,     0,     0,     0,     0,     0,  1001,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,  1003,     0,
       0,     0,     0,     0,     0,     0,  1004,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1006,
       0,     0,     0,     0,     0,  1007,  1008,     0,  1009,  1010,
    1011,     0,     0,     0,  1012,     0,     0,     0,     0,     0,
       0,     0,  1013,  1014,  1015,  1016,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1017,  1018,  1019,     0,     0,
       0,     0,     0,  1020,     0,  1021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,  1022,    55,
      56,    57,    58,    59,    60,  1023,    62,    63,    64,    65,
      66,    67,    68,  1024,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,  1025,
      85,   572,    87,    88,    89,    90,    91,   573,  1026,    93,
    1027,  1028,    96,  1029,  1030,  1031,  1032,  1033,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,  1034,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,  1035,  1036,  1037,   576,  1038,  1039,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,  1040,   172,   173,   582,   175,
     176,  1041,   178,  1042,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,  1043,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,  1044,  1045,   213,
     214,   215,  1046,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
    1047,   255,  1048,   257,   258,   259,   260,  1049,  1050,  1051,
    1052,   265,   266,   267,   268,   269,   270,   271,   272,  1053,
    1054,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,  1055,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
    1056,   303,   304,   305,   306,   307,  1057,  1058,   310,   590,
     311,   591,   313,   314,  1059,   316,   317,   318,   319,   320,
     321,  1060,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,  1061,   353,   594,   355,   356,   357,  1062,  1063,   360,
     361,   595,   363,   364,  1064,   366,   367,   368,   369,   370,
     371,  1065,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
    1066,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,  1067,
    1068,  1069,  1070,   423,   424,   425,  1071,  1072,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,  1073,   442,  1074,   444,   445,   446,   447,   448,   449,
     450,   451,   452,  1075,  1076,   601,  1077,   457,   458,   459,
       0,   460,   602,   462,  1078,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1079,  1080,     0,     0,     0,     0,
    1081,     0,     0,     0,  1082,     0,     0,  1083,  1084,     0,
       0,  1085,  1086,   946,   947,   948,   949,     0,     0,     0,
       0,     0,     0,     0,   950,   951,     0,   952,     0,     0,
       0,     0,     0,     0,   953,   954,     0,     0,   955,   956,
     957,   958,     0,   959,   960,     0,   961,   962,     0,     0,
       0,     0,   963,     0,     0,     0,   964,     0,     0,   965,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   966,
     967,   968,     0,   969,   970,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   972,   973,     0,   974,
     975,     0,     0,     0,   976,   977,   978,     0,     0,     0,
       0,     0,     0,     0,   979,     0,  1586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,   983,   984,     0,   985,     0,
       0,     0,     0,     0,   986,     0,   987,     0,     0,   988,
       0,     0,     0,     0,   991,     0,   992,   993,   994,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,   997,
     998,   999,  1000,     0,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,  1003,     0,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1006,     0,     0,     0,     0,     0,  1007,  1008,
       0,  1009,  1010,  1011,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,  1013,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1017,  1018,
    1019,     0,     0,     0,     0,     0,  1020,     0,  1021,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,  1022,    55,    56,    57,    58,    59,    60,  1023,    62,
      63,    64,    65,    66,    67,    68,  1024,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,  1025,    85,   572,    87,    88,    89,    90,    91,
     573,  1026,    93,  1027,  1028,    96,  1029,  1030,  1031,  1032,
    1033,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,  1034,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,  1035,  1036,  1037,
     576,  1038,  1039,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,  1040,   172,
     173,   582,   175,   176,  1041,   178,  1042,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,  1043,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
    1044,  1045,   213,   214,   215,  1046,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  1047,   255,  1048,   257,   258,   259,   260,
    1049,  1050,  1051,  1052,   265,   266,   267,   268,   269,   270,
     271,   272,  1053,  1054,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,  1055,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1056,   303,   304,   305,   306,   307,  1057,
    1058,   310,   590,   311,   591,   313,   314,  1059,   316,   317,
     318,   319,   320,   321,  1060,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,  1061,   353,   594,   355,   356,   357,
    1062,  1063,   360,   361,   595,   363,   364,  1064,   366,   367,
     368,   369,   370,   371,  1065,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,  1066,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  1067,  1068,  1069,  1070,   423,   424,   425,  1071,
    1072,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,  1073,   442,  1074,   444,   445,   446,
     447,   448,   449,   450,   451,   452,  1075,  1076,   601,  1077,
     457,   458,   459,   946,   460,   602,   462,  1078,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5782,  5783,     0,
       0,     0,     0,     0,     0,     0,     0,  5784,     0,     0,
       0,  1084,     0,     0,  1085,  1086,     0,     0,     0,     0,
       0,     0,   963,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   968,     0,     0,   970,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   974,
     975,     0,     0,     0,  1623,  1624,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     982,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   988,
       0,     0,     0,     0,     0,     0,     0,   993,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1012,     0,     0,
       0,     0,     0,     0,     0,     0,  1014,  1015,  1016,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,  1625,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  2539,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,  3023,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,  2540,   420,   421,  2541,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1085,  1086,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   567,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   568,   569,    74,    75,    76,    77,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
      90,    91,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,   578,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   580,   581,   170,     0,
     171,   172,   173,   582,   175,   176,   177,   178,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     587,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,   358,   359,   360,   361,   595,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,  3273,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     601,   456,   457,   458,   459,     0,   460,   602,   462,   463,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,  3024,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   698,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   567,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   568,   569,    74,    75,    76,    77,    78,
      79,   570,    81,    82,    83,    84,   571,    85,   572,    87,
      88,    89,    90,    91,   573,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   574,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   575,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   576,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   577,   141,   142,   143,
     144,   578,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   579,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   580,   581,
     170,     0,   171,   172,   173,   582,   175,   176,   177,   178,
     179,   583,   181,   182,   584,   184,   185,   585,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   586,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   587,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   588,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   589,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   590,   311,   591,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   592,   342,   343,
     593,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     594,   355,   356,   357,   358,   359,   360,   361,   595,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     596,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   597,
     393,   394,   598,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   599,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   600,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   601,   456,   457,   458,   459,  1163,   460,   602,
     462,   463,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3024,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1164,     0,   698,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,  1165,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,  1166,   175,   176,   177,   178,   179,   583,  1167,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,  1168,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,  1169,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,  1170,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,  1171,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,  1172,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,  1173,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,  1174,   456,
     457,   458,   459,  1163,   460,   602,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1164,     0,     0,  1175,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   567,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   568,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,  1165,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,   578,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     580,   581,   170,     0,   171,   172,   173,  1166,   175,   176,
     177,   178,   179,   583,  1167,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,  1168,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,  1169,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,  1170,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,  1171,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,  1172,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,  1174,   456,   457,   458,   459,     0,
     460,   602,   462,   463,   862,   863,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1175,     0,     0,     0,     0,     0,     0,     0,   864,
       0,     0,     0,     0,   865,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   866,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   867,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   868,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,   869,     0,     0,     0,     0,   870,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   769,     0,     0,     0,     0,     0,     0,
     871,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   872,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   873,     0,     0,
       0,     0,     0,     0,     0,   874,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     684,     0,     0,     0,     0,     0,     0,   875,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   876,   877,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,   571,    85,   572,    87,    88,
      89,    90,    91,   573,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   575,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   576,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   878,
     154,   155,   156,   157,   879,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   880,   167,   168,   580,   581,   170,
       0,   171,   172,   173,   582,   175,   176,   177,   178,   179,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   590,   311,   591,   313,   314,
     315,   316,   881,   318,   319,   320,   882,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   883,   339,   340,   592,   342,   884,   593,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   594,
     355,   356,   357,   358,   359,   360,   361,   595,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   885,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,   400,   401,   402,   403,
     886,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   599,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   601,   456,   457,   458,   459,     0,   460,   602,   462,
     463,  1155,   863,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   864,     0,     0,     0,
       0,   865,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   866,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   867,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   868,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,   869,
       0,     0,     0,     0,   870,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     769,     0,     0,     0,     0,     0,     0,   871,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   872,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   873,     0,     0,     0,     0,     0,
       0,     0,   874,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   684,     0,     0,
       0,     0,     0,     0,   875,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   876,   877,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
    1156,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   878,   154,   155,   156,
     157,   879,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   880,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   881,
     318,   319,   320,  1157,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     883,   339,   340,   592,   342,   884,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   885,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,  1857,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   886,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     769,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   684,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,  4926,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,     1,     2,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     3,     0,
       4,     0,     5,     0,     6,     0,     0,     0,     0,     0,
       0,     0,     7,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     8,     0,     0,     9,     0,    10,    11,     0,     0,
       0,     0,     0,     0,    12,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    14,     0,     0,     0,     0,     0,    15,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,    18,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,    22,     0,     0,     0,     0,    23,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    24,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    25,    26,     0,     0,     0,     0,     0,     0,
       0,     0,    27,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,    30,    31,    32,     0,    33,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    35,     0,     0,     0,    36,    37,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    38,     0,
      39,     0,    40,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    41,    42,     0,
       0,     0,     0,     0,     0,    43,    44,    45,    46,     0,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,     0,    85,
      86,    87,    88,    89,    90,    91,     0,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,     0,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,     0,   170,     0,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,     0,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,     0,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,     0,
     460,   461,   462,   463,     1,     2,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     3,     0,     4,     0,     5,     0,
       6,     0,     0,     0,     0,     0,     0,     0,     7,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     8,     0,     0,
       9,     0,    10,    11,     0,     0,     0,     0,     0,     0,
      12,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    14,
       0,     0,     0,     0,     0,    15,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,    18,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,    22,
       0,     0,     0,     0,    23,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    24,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    25,    26,
       0,     0,     0,     0,     0,     0,     0,     0,    27,    28,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,    30,    31,    32,     0,    33,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      35,     0,     0,     0,    36,    37,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    38,     0,    39,     0,    40,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    41,    42,     0,     0,     0,     0,     0,
       0,    43,    44,    45,    46,     0,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,     0,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,     0,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,     0,   170,     0,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
       0,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,     0,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,     0,   460,   461,   462,   463,
       1,     2,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       3,     0,     0,     0,     5,     0,     6,     0,     0,     0,
       0,     0,     0,     0,     7,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     9,     0,    10,    11,
       0,     0,     0,     0,     0,     0,    12,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    15,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    20,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      24,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    25,    26,     0,     0,     0,     0,
       0,     0,     0,     0,    27,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,    30,     0,    32,
       0,    33,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    35,     0,     0,     0,
      36,    37,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      38,     0,    39,     0,    40,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,    43,    44,    45,
      46,     0,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,     0,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
       0,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,     0,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,     0,   170,     0,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,     0,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,  1949,   460,   461,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1623,  1624,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,   571,    85,   572,    87,    88,    89,    90,
      91,   573,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   575,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   576,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,   171,
     172,   173,   582,   175,   176,   177,   178,   179,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   590,   311,   591,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   594,   355,   356,
     357,   358,   359,   360,   361,   595,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   599,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   601,
     456,   457,   458,   459,  4568,   460,   602,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1950,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   732,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,  3372,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3373,     0,     0,
       0,     0,     0,     0,  4569,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -2625,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   733,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,   571,    85,   572,    87,    88,
      89,    90,    91,   573,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   575,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   576,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,   171,   172,   173,   582,   175,   176,   177,   178,   179,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,  4570,   304,   305,
     306,   307,   308,   309,   310,   590,   311,   591,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   594,
     355,   356,   357,   358,   359,   360,   361,   595,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   599,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   601,   456,   457,   458,   459,  4568,   460,   602,   462,
     463,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4571,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   732,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,  3372,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3373,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     733,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,   571,    85,   572,
      87,    88,    89,    90,    91,   573,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     575,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   576,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,   171,   172,   173,   582,   175,   176,   177,
     178,   179,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,  4570,
     304,   305,   306,   307,   308,   309,   310,   590,   311,   591,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   594,   355,   356,   357,   358,   359,   360,   361,   595,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,  4630,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   599,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   601,   456,   457,   458,   459,     0,   460,
     602,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,  4571,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   684,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,  1810,   460,   602,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1811,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   769,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1812,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   684,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,   571,    85,   572,    87,    88,    89,    90,
      91,   573,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   575,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   576,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,   171,
     172,   173,   582,   175,   176,   177,   178,   179,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   590,   311,   591,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   594,   355,   356,
     357,   358,   359,   360,   361,   595,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   599,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   601,
     456,   457,   458,   459,     0,   460,   602,   462,   463,  1398,
    1399,     0,     0,  1813,     0,  1400,  1401,     0,     0,     0,
       0,     0,     0,     0,     0,  1402,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1403,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1404,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1405,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1406,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1407,  1408,     0,  1409,
       0,     0,     0,     0,     0,     0,     0,  1410,  1411,  1412,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1413,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1414,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1415,     0,     0,     0,
       0,     0,  1416,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1417,  1418,  1419,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1420,  1421,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,     0,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,     0,   569,  1422,
      75,  1423,  1424,    78,    79,   570,    81,    82,    83,    84,
     571,    85,   572,    87,    88,    89,     0,  1425,   573,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   574,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   575,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,  1426,   126,  1427,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     577,   141,   142,   143,   144,     0,   145,   146,   147,  1428,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,  1429,   580,   581,   170,     0,   171,   172,   173,     0,
     175,   176,  1430,  1431,   179,   583,   181,   182,   584,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,  1432,   209,   587,   210,   211,   212,
     213,   214,   215,  1433,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,  1434,
    1435,  1436,   265,   266,   267,   268,   269,  1437,  1438,   272,
     273,   274,   275,   276,   277,   278,   279,   588,   280,   281,
     282,   283,     0,  1439,  1440,   287,   288,   289,   290,   291,
     292,   589,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,  1441,  1442,   310,
     590,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,  1443,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   592,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   594,   355,   356,   357,  1444,   359,
     360,   361,   595,   363,   364,   365,   366,   367,   368,     0,
     370,   371,   372,   373,   596,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,  1445,   417,   418,
    1446,   420,   421,  1447,   423,   424,   425,   426,   599,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,     0,  1448,   446,   447,   448,
     449,   450,   451,   452,   453,   454,  1449,   456,   457,   458,
     459,     0,   460,   602,   462,  1450,  1398,  4224,     0,     0,
       0,     0,  1400,  1401,     0,     0,     0,     0,     0,     0,
       0,     0,  1402,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1403,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1405,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1406,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1407,  1408,     0,  1409,     0,     0,     0,
       0,     0,     0,     0,  1410,  1411,  1412,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1414,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1415,     0,     0,     0,     0,     0,  1416,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1417,  1418,  1419,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4225,
    1421,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,     0,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,     0,   569,  1422,    75,  1423,  1424,
      78,    79,   570,    81,    82,    83,    84,   571,    85,   572,
      87,    88,    89,     0,  1425,   573,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     575,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,  1426,   126,  1427,   128,   576,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,     0,   145,   146,   147,  1428,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,  1429,   580,
     581,   170,     0,   171,   172,   173,     0,   175,   176,  1430,
    1431,   179,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,  1432,   209,   587,   210,   211,   212,   213,   214,   215,
    1433,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,  1434,  1435,  1436,   265,
     266,   267,   268,   269,  1437,  1438,   272,   273,   274,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,     0,
    1439,  1440,   287,   288,   289,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,  1441,  1442,   310,   590,   311,   591,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,  4226,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   594,   355,   356,   357,  4227,   359,   360,   361,   595,
     363,   364,   365,   366,   367,   368,     0,   370,   371,   372,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,  1445,   417,   418,  1446,   420,   421,
    1447,   423,   424,   425,   426,   599,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,   441,
     442,   443,     0,  4228,   446,   447,   448,   449,   450,   451,
     452,   453,   454,  1449,   456,   457,   458,   459,     0,   460,
     602,   462,  1450,  1398,  4224,     0,     0,     0,     0,  1400,
    1401,     0,     0,     0,     0,     0,     0,     0,     0,  1402,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1403,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1405,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1406,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1407,  1408,     0,  1409,     0,     0,     0,     0,     0,     0,
       0,  1410,  1411,  1412,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1413,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1414,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1415,     0,     0,     0,     0,     0,  1416,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1417,  1418,  1419,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4225,  1421,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,     0,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,     0,   569,  1422,    75,  1423,  1424,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
       0,  1425,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1426,   126,
    1427,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,     0,
     145,   146,   147,  1428,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,  1429,   580,   581,   170,     0,
     171,   172,   173,     0,   175,   176,  1430,  1431,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,  1432,   209,
     587,   210,   211,   212,   213,   214,   215,  1433,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1434,  1435,  1436,   265,   266,   267,   268,
     269,  1437,  1438,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,     0,  1439,  1440,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,  1441,  1442,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
    4226,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,  5648,   359,   360,   361,   595,   363,   364,   365,
     366,   367,   368,     0,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,  1445,   417,   418,  1446,   420,   421,  1447,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,  1826,
    4228,   446,   447,   448,   449,   450,   451,   452,   453,   454,
    1449,   456,   457,   458,   459,     0,   460,   602,   462,  1450,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1827,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   769,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   684,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,   582,   175,
     176,   177,   178,   179,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   601,   456,   457,   458,   459,
    1810,   460,   602,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1811,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   769,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   684,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   567,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   568,   569,    74,
      75,    76,    77,    78,    79,   570,    81,    82,    83,    84,
     571,    85,   572,    87,    88,    89,    90,    91,   573,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   574,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   575,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     577,   141,   142,   143,   144,   578,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   580,   581,   170,     0,   171,   172,   173,   582,
     175,   176,   177,   178,   179,   583,   181,   182,   584,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   587,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   588,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   589,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     590,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   592,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   594,   355,   356,   357,   358,   359,
     360,   361,   595,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   596,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,  1810,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   599,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   601,   456,   457,   458,
     459,     0,   460,   602,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   769,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   684,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,   582,   175,
     176,   177,   178,   179,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,  1286,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   601,   456,   457,   458,   459,
       0,   460,   602,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1287,  1288,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1289,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,   571,    85,   572,
      87,    88,    89,    90,    91,   573,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     575,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   576,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,   171,   172,   173,   582,   175,   176,   177,
     178,   179,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   590,   311,   591,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   594,   355,   356,   357,   358,   359,   360,   361,   595,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,  2601,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   599,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   601,   456,   457,   458,   459,     0,   460,
     602,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,   582,   175,
     176,   177,   178,   179,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   601,   456,   457,   458,   459,
    1346,   460,   602,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     769,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   684,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,     0,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,   811,   812,
       0,     0,     0,     0,     0,     0,     0,     0,   813,     0,
       0,     0,     0,     0,     0,     0,     0,  1718,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,     0,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,     0,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,   571,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,   814,
     815,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     580,   581,   170,     0,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   583,   181,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   816,   456,   457,   458,   459,     0,
     460,   602,   462,   463,  1346,   865,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   769,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   684,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   567,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   568,   569,    74,    75,    76,    77,    78,
      79,   570,    81,    82,    83,    84,   571,    85,   572,    87,
      88,    89,    90,    91,   573,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   574,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   575,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   576,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   577,   141,   142,   143,
     144,   578,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   579,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   580,   581,
     170,     0,   171,   172,   173,   582,   175,   176,   177,   178,
     179,   583,   181,   182,   584,   184,   185,   585,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   586,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   587,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   588,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   589,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   590,   311,   591,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   592,   342,   343,
     593,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     594,   355,   356,   357,   358,   359,   360,   361,   595,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     596,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   597,
     393,   394,   598,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   599,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   600,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   601,   456,   457,   458,   459,  1346,   460,   602,
     462,   463,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   769,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   684,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,   582,   175,
     176,   177,   178,   179,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   601,   456,   457,   458,   459,
     865,   460,   602,   462,   463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   769,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   684,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,   571,    85,   572,    87,    88,    89,    90,    91,   573,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   575,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   576,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,   171,   172,   173,
     582,   175,   176,   177,   178,   179,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   590,   311,   591,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   594,   355,   356,   357,   358,
     359,   360,   361,   595,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   599,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   601,   456,   457,
     458,   459,   813,   460,   602,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,     0,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,     0,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   816,   456,
     457,   458,   459,     0,   460,   602,   462,   463,  2315,     0,
       0,     0,  5010,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2316,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4083,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4084,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4085,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   684,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4086,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   567,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   568,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,   571,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,   578,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     580,   581,   170,     0,   171,   172,   173,   582,   175,   176,
     177,   178,   179,   583,   181,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   601,   456,   457,   458,   459,     0,
     460,   602,   462,   463,  2315,     0,     0,     0,  5912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2316,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4083,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4084,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4085,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   684,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4086,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   567,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   568,   569,    74,    75,    76,    77,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
      90,    91,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,   578,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   580,   581,   170,     0,
     171,   172,   173,   582,   175,   176,   177,   178,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     587,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,   358,   359,   360,   361,   595,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     601,   456,   457,   458,   459,     0,   460,   602,   462,   463,
    2315,     0,     0,     0,  5990,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2316,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4083,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4084,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4085,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   684,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4086,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   567,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   568,   569,    74,
      75,    76,    77,    78,    79,   570,    81,    82,    83,    84,
     571,    85,   572,    87,    88,    89,    90,    91,   573,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   574,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   575,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     577,   141,   142,   143,   144,   578,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   580,   581,   170,     0,   171,   172,   173,   582,
     175,   176,   177,   178,   179,   583,   181,   182,   584,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   587,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   588,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   589,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     590,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   592,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   594,   355,   356,   357,   358,   359,
     360,   361,   595,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   596,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   599,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   601,   456,   457,   458,
     459,  2967,   460,   602,   462,   463,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   769,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   684,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,   571,    85,   572,
      87,    88,    89,    90,    91,   573,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     575,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   576,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,   171,   172,   173,   582,   175,   176,   177,
     178,   179,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   590,   311,   591,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   594,   355,   356,   357,   358,   359,   360,   361,   595,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   599,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   601,   456,   457,   458,   459,  1803,   460,
     602,   462,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   567,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   568,   569,    74,    75,    76,    77,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
      90,    91,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,   578,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   580,   581,   170,     0,
     171,   172,   173,   582,   175,   176,   177,   178,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     587,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,   358,   359,   360,   361,   595,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     601,   456,   457,   458,   459,  1803,   460,   602,   462,   463,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,   571,    85,   572,    87,    88,    89,    90,    91,   573,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   575,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   576,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,   171,   172,   173,
     582,   175,   176,   177,   178,   179,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   590,   311,   591,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   594,   355,   356,   357,   358,
     359,   360,   361,   595,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,  2593,   424,   425,   426,   599,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   601,   456,   457,
     458,   459,  3365,   460,   602,   462,   463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   567,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   568,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,   571,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,   578,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     580,   581,   170,     0,   171,   172,   173,   582,   175,   176,
     177,   178,   179,   583,   181,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   601,   456,   457,   458,   459,  5077,
     460,   602,   462,   463,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,   571,    85,   572,    87,    88,
      89,    90,    91,   573,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   575,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   576,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,   171,   172,   173,   582,   175,   176,   177,   178,   179,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   590,   311,   591,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   594,
     355,   356,   357,   358,   359,   360,   361,   595,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   599,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   601,   456,   457,   458,   459,  5085,   460,   602,   462,
     463,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,  3296,   460,   602,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   684,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,  3297,   175,
     176,   177,   178,   179,   583,     0,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,     0,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,  3298,   456,   457,   458,   459,
       0,   460,   602,   462,   463,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,   571,    85,   572,    87,    88,    89,    90,
      91,   573,    92,    93,    94,  2458,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   575,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   576,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,   171,
     172,   173,   582,   175,   176,   177,   178,   179,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   590,   311,   591,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   594,   355,   356,
     357,   358,   359,   360,   361,   595,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   599,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   601,
     456,   457,   458,   459,     0,   460,   602,   462,   463,     0,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  6140,
       0,     0,     0,     0,     0,  2459,  6141,   769,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   684,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,   582,   175,
     176,   177,   178,   179,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   601,   456,   457,   458,   459,
       0,   460,   602,   462,   463,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   769,  1824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   684,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,   571,    85,   572,    87,    88,    89,    90,
      91,   573,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   575,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   576,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,   171,
     172,   173,   582,   175,   176,   177,   178,   179,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   590,   311,   591,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   594,   355,   356,
     357,   358,   359,   360,   361,   595,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   599,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   601,
     456,   457,   458,   459,     0,   460,   602,   462,   463,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   769,  2473,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   684,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,   571,    85,   572,
      87,    88,    89,    90,    91,   573,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     575,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   576,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,   171,   172,   173,   582,   175,   176,   177,
     178,   179,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   590,   311,   591,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   594,   355,   356,   357,   358,   359,   360,   361,   595,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   599,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   601,   456,   457,   458,   459,     0,   460,
     602,   462,   463,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3457,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,   571,    85,   572,    87,    88,    89,    90,    91,   573,
      92,    93,    94,  2458,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   575,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   576,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,   171,   172,   173,
     582,   175,   176,   177,   178,   179,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   590,   311,   591,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   594,   355,   356,   357,   358,
     359,   360,   361,   595,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   599,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   601,   456,   457,
     458,   459,     0,   460,   602,   462,   463,  1623,  1624,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2459,  6141,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,   571,    85,   572,    87,    88,
      89,    90,    91,   573,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   575,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   576,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,   171,   172,   173,   582,   175,   176,   177,   178,   179,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   590,   311,   591,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   594,
     355,   356,   357,   358,   359,   360,   361,   595,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   599,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   601,   456,   457,   458,   459,     0,   460,   602,   462,
     463,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1950,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    42,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,  2458,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,   582,   175,
     176,   177,   178,   179,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   601,   456,   457,   458,   459,
       0,   460,   602,   462,   463,  1623,  1624,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3865,     0,     0,     0,     0,
       0,  2459,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,   571,    85,   572,    87,    88,    89,    90,
      91,   573,    92,    93,    94,  1625,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   575,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   576,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,   171,
     172,   173,   582,   175,   176,   177,   178,   179,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   590,   311,   591,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   594,   355,   356,
     357,   358,   359,   360,   361,   595,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   599,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   601,
     456,   457,   458,   459,     0,   460,   602,   462,   463,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1793,     0,     0,     0,     0,     0,  1626,     0,
       0,     0,     0,     0,     0,  1085,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,   571,    85,   572,
      87,    88,    89,    90,    91,   573,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     575,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   576,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,   171,   172,   173,   582,   175,   176,   177,
     178,   179,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   590,   311,   591,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   594,   355,   356,   357,   358,   359,   360,   361,   595,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   599,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   601,   456,   457,   458,   459,     0,   460,
     602,   462,   463,  1623,  1624,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   698,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,   571,    85,   572,    87,    88,    89,    90,    91,   573,
      92,    93,    94,  1625,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   575,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   576,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,   171,   172,   173,
     582,   175,   176,   177,   178,   179,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   590,   311,   591,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   594,   355,   356,   357,   358,
     359,   360,   361,   595,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   599,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   601,   456,   457,
     458,   459,     0,   460,   602,   462,   463,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1085,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,   571,    85,   572,    87,    88,
      89,    90,    91,   573,    92,    93,    94,  2458,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   575,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   576,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,   171,   172,   173,   582,   175,   176,   177,   178,   179,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   590,   311,   591,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   594,
     355,   356,   357,   358,   359,   360,   361,   595,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   599,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   601,   456,   457,   458,   459,     0,   460,   602,   462,
     463,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2459,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,   582,   175,
     176,   177,   178,   179,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   601,   456,   457,   458,   459,
       0,   460,   602,   462,   463,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3024,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   698,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,   571,    85,   572,    87,    88,    89,    90,
      91,   573,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   575,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   576,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,   171,
     172,   173,   582,   175,   176,   177,   178,   179,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   590,   311,   591,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   594,   355,   356,
     357,   358,   359,   360,   361,   595,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   599,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   601,
     456,   457,   458,   459,     0,   460,   602,   462,   463,    16,
      17,  5059,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4705,     0,
       0,     0,     0,     0,     0,  4571,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,   571,    85,   572,
      87,    88,    89,    90,    91,   573,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     575,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   576,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,   171,   172,   173,   582,   175,   176,   177,
     178,   179,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   590,   311,   591,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   594,   355,   356,   357,   358,   359,   360,   361,   595,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   599,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   601,   456,   457,   458,   459,     0,   460,
     602,   462,   463,    16,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4571,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,   567,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,   568,   569,
      74,    75,    76,    77,    78,    79,   570,    81,    82,    83,
      84,   571,    85,   572,    87,    88,    89,    90,    91,   573,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   575,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   576,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,   578,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   580,   581,   170,     0,   171,   172,   173,
     582,   175,   176,   177,   178,   179,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   587,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   590,   311,   591,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   594,   355,   356,   357,   358,
     359,   360,   361,   595,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   599,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   601,   456,   457,
     458,   459,     0,   460,   602,   462,   463,    16,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   698,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,    45,    46,   567,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,     0,   568,   569,    74,    75,    76,    77,    78,    79,
     570,    81,    82,    83,    84,   571,    85,   572,    87,    88,
      89,    90,    91,   573,    92,    93,    94,     0,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,   574,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   575,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   576,   130,   131,   132,     0,   133,   134,
     135,   136,   137,   138,   139,   577,   141,   142,   143,   144,
     578,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   579,   159,     0,     0,   160,   161,
     746,   163,   164,   165,   166,   167,   168,   580,   581,   170,
       0,   747,   172,   173,   582,   175,   176,   177,   178,   179,
     583,   181,   182,   584,   184,   185,   585,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   586,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   587,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   588,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   589,   293,   294,   295,
     296,   297,   298,   299,   748,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   590,   311,   591,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   592,   342,   343,   593,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   594,
     355,   356,   357,   358,   359,   360,   361,   595,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   596,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   597,   393,
     394,   598,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   599,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   600,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   601,   456,   457,   458,   459,     0,   460,   602,   462,
     463,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   698,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,    45,    46,
     567,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,     0,   568,   569,    74,    75,
      76,    77,    78,    79,   570,    81,    82,    83,    84,   571,
      85,   572,    87,    88,    89,    90,    91,   573,    92,    93,
      94,     0,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,   574,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   575,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   576,   130,   131,
     132,     0,   133,   134,   135,   136,   137,   138,   139,   577,
     141,   142,   143,   144,   578,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   579,   159,
       0,     0,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   580,   581,   170,     0,   171,   172,   173,   582,   175,
     176,   177,   178,   179,   583,   181,   182,   584,   184,   185,
     585,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   586,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   587,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   588,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     589,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   590,
     311,   591,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     592,   342,   343,   593,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   594,   355,   356,   357,   358,   359,   360,
     361,   595,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   596,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   597,   393,   394,   598,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   599,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   600,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   601,   456,   457,   458,   459,
       0,   460,   602,   462,   463,    16,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4571,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,   567,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
     568,   569,    74,    75,    76,    77,    78,    79,   570,    81,
      82,    83,    84,   571,    85,   572,    87,    88,    89,    90,
      91,   573,    92,    93,    94,     0,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,   574,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   575,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   576,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,   577,   141,   142,   143,   144,   578,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   579,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   580,   581,   170,     0,   171,
     172,   173,   582,   175,   176,   177,   178,   179,   583,   181,
     182,   584,   184,   185,   585,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   586,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   587,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     588,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   589,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   590,   311,   591,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   592,   342,   343,   593,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   594,   355,   356,
     357,   358,   359,   360,   361,   595,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   596,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   597,   393,   394,   598,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   599,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   600,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   601,
     456,   457,   458,   459,  2982,   460,   602,   462,   463,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2516,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   680,   681,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3634,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3635,   656,  3636,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,    45,    46,   567,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,     0,   568,   569,    74,    75,    76,    77,
      78,    79,   570,    81,    82,    83,    84,   571,    85,   572,
      87,    88,    89,    90,    91,   573,    92,    93,    94,     0,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
     574,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     575,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   576,   130,   131,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   577,   141,   142,
     143,   144,   578,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   579,   159,     0,     0,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   580,
     581,   170,     0,   171,   172,   173,   582,   175,   176,   177,
     178,   179,   583,   181,   182,   584,   184,   185,   585,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   586,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   587,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   588,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   589,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   590,   311,   591,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   592,   342,
     343,   593,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   594,   355,   356,   357,   358,   359,   360,   361,   595,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   596,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,     0,   389,   390,   391,
     597,   393,   394,   598,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   599,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   600,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   601,   456,   457,   458,   459,     0,   460,
     602,   462,   463,  1480,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2983,     0,     0,     0,     0,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   567,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   568,   569,    74,    75,    76,    77,    78,
      79,   570,    81,    82,    83,    84,   571,    85,   572,    87,
      88,    89,    90,    91,   573,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   574,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   575,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   576,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   577,   141,   142,   143,
     144,   578,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   579,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   580,   581,
     170,     0,   171,   172,   173,   582,   175,   176,   177,   178,
     179,   583,   181,   182,   584,   184,   185,   585,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   586,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   587,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   588,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   589,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   590,   311,   591,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   592,   342,   343,
     593,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     594,   355,   356,   357,   358,   359,   360,   361,   595,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     596,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   597,
     393,   394,   598,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   599,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   600,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   601,   456,   457,   458,   459,  1557,   460,   602,
     462,   463,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   567,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   568,   569,    74,
      75,    76,    77,    78,    79,   570,    81,    82,    83,    84,
     571,    85,   572,    87,    88,    89,    90,    91,   573,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   574,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   575,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     577,   141,   142,   143,   144,   578,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   580,   581,   170,     0,   171,   172,   173,   582,
     175,   176,   177,   178,   179,   583,   181,   182,   584,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   587,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
    1558,   274,   275,   276,   277,   278,   279,   588,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   589,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     590,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   592,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   594,   355,   356,   357,   358,   359,
     360,   361,   595,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   596,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   599,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   601,   456,   457,   458,
     459,     0,   460,   602,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   567,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   568,   569,    74,    75,    76,    77,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
      90,    91,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,   578,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   580,   581,   170,     0,
     171,   172,   173,   582,   175,   176,   177,   178,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     587,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,   358,   359,   360,   361,   595,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     601,   456,   457,   458,   459,     0,   460,   602,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2999,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   567,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   568,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,   571,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,   578,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     580,   581,   170,     0,   171,   172,   173,   582,   175,   176,
     177,   178,   179,   583,   181,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   601,   456,   457,   458,   459,     0,
     460,   602,   462,   463,  1623,  1624,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4274,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4634,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   567,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   568,   569,    74,    75,    76,    77,    78,
      79,   570,    81,    82,    83,    84,   571,    85,   572,    87,
      88,    89,    90,    91,   573,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   574,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   575,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   576,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   577,   141,   142,   143,
     144,   578,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   579,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   580,   581,
     170,     0,   171,   172,   173,   582,   175,   176,   177,   178,
     179,   583,   181,   182,   584,   184,   185,   585,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   586,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   587,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   588,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   589,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   590,   311,   591,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   592,   342,   343,
     593,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     594,   355,   356,   357,   358,   359,   360,   361,   595,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     596,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   597,
     393,   394,   598,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   599,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   600,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   601,   456,   457,   458,   459,     0,   460,   602,
     462,   463,  1623,  1624,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4882,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   567,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   568,   569,    74,
      75,    76,    77,    78,    79,   570,    81,    82,    83,    84,
     571,    85,   572,    87,    88,    89,    90,    91,   573,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   574,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   575,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     577,   141,   142,   143,   144,   578,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   580,   581,   170,     0,   171,   172,   173,   582,
     175,   176,   177,   178,   179,   583,   181,   182,   584,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   587,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   588,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   589,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     590,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   592,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   594,   355,   356,   357,   358,   359,
     360,   361,   595,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   596,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   599,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   601,   456,   457,   458,
     459,     0,   460,   602,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5313,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   567,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   568,   569,    74,    75,    76,    77,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
      90,    91,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,   578,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   580,   581,   170,     0,
     171,   172,   173,   582,   175,   176,   177,   178,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     587,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,   358,   359,   360,   361,   595,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     601,   456,   457,   458,   459,     0,   460,   602,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   769,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1812,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   684,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   567,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   568,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,   571,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,   578,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     580,   581,   170,     0,   171,   172,   173,   582,   175,   176,
     177,   178,   179,   583,   181,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   601,   456,   457,   458,   459,     0,
     460,   602,   462,   463,  1623,  1624,     0,     0,  1813,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2626,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2627,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2628,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2629,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,  2630,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,  1623,  1624,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2626,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2627,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4257,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2629,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   567,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   568,   569,    74,    75,    76,    77,    78,
      79,   570,    81,    82,    83,    84,   571,    85,   572,    87,
      88,    89,    90,    91,   573,    92,    93,    94,  2630,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   574,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   575,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   576,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   577,   141,   142,   143,
     144,   578,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   579,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   580,   581,
     170,     0,   171,   172,   173,   582,   175,   176,   177,   178,
     179,   583,   181,   182,   584,   184,   185,   585,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   586,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   587,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   588,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   589,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   590,   311,   591,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   592,   342,   343,
     593,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     594,   355,   356,   357,   358,   359,   360,   361,   595,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     596,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   597,
     393,   394,   598,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   599,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   600,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   601,   456,   457,   458,   459,     0,   460,   602,
     462,   463,  1623,  1624,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2626,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2627,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2629,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   567,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   568,   569,    74,
      75,    76,    77,    78,    79,   570,    81,    82,    83,    84,
     571,    85,   572,    87,    88,    89,    90,    91,   573,    92,
      93,    94,  2630,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   574,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   575,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     577,   141,   142,   143,   144,   578,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   580,   581,   170,     0,   171,   172,   173,   582,
     175,   176,   177,   178,   179,   583,   181,   182,   584,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   587,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   588,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   589,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     590,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   592,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   594,   355,   356,   357,   358,   359,
     360,   361,   595,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   596,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   599,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   601,   456,   457,   458,
     459,     0,   460,   602,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     655,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     656,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   567,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   568,   569,    74,    75,    76,    77,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
      90,    91,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,   578,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   580,   581,   170,     0,
     171,   172,   173,   582,   175,   176,   177,   178,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     587,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,   358,   359,   360,   361,   595,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     601,   456,   457,   458,   459,     0,   460,   602,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   769,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   684,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   567,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   568,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,   571,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,   578,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     580,   581,   170,     0,   171,   172,   173,   582,   175,   176,
     177,   178,   179,   583,   181,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   601,   456,   457,   458,   459,     0,
     460,   602,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   656,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,  1623,  1624,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1669,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   567,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   568,   569,    74,    75,    76,    77,    78,
      79,   570,    81,    82,    83,    84,   571,    85,   572,    87,
      88,    89,    90,    91,   573,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   574,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   575,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   576,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   577,   141,   142,   143,
     144,   578,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   579,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   580,   581,
     170,     0,   171,   172,   173,   582,   175,   176,   177,   178,
     179,   583,   181,   182,   584,   184,   185,   585,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   586,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   587,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   588,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   589,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   590,   311,   591,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   592,   342,   343,
     593,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     594,   355,   356,   357,   358,   359,   360,   361,   595,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     596,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   597,
     393,   394,   598,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   599,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   600,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   601,   456,   457,   458,   459,     0,   460,   602,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4504,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   567,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   568,   569,    74,
      75,    76,    77,    78,    79,   570,    81,    82,    83,    84,
     571,    85,   572,    87,    88,    89,    90,    91,   573,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   574,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   575,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     577,   141,   142,   143,   144,   578,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   580,   581,   170,     0,   171,   172,   173,   582,
     175,   176,   177,   178,   179,   583,   181,   182,   584,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   587,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   588,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   589,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     590,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   592,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   594,   355,   356,   357,   358,   359,
     360,   361,   595,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   596,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   599,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   601,   456,   457,   458,
     459,     0,   460,   602,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   684,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   567,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   568,   569,    74,    75,    76,    77,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
      90,    91,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,   578,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   580,   581,   170,     0,
     171,   172,   173,   582,   175,   176,   177,   178,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     587,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,   358,   359,   360,   361,   595,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     601,   456,   457,   458,   459,     0,   460,   602,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5695,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   567,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   568,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,   571,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,   578,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     580,   581,   170,     0,   171,   172,   173,   582,   175,   176,
     177,   178,   179,   583,   181,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   601,   456,   457,   458,   459,     0,
     460,   602,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,   582,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   601,   456,
     457,   458,   459,     0,   460,   602,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   567,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   568,   569,    74,    75,    76,    77,    78,
      79,   570,    81,    82,    83,    84,   571,    85,   572,    87,
      88,    89,    90,    91,   573,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   574,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   575,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   576,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   577,   141,   142,   143,
     144,   578,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   579,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   580,   581,
     170,     0,   171,   172,   173,   582,   175,   176,   177,   178,
     179,   583,   181,   182,   584,   184,   185,   585,     0,   187,
     188,   189,   190,   191,   192,   193,   693,   195,   196,   197,
     198,   199,   586,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   587,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   588,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   589,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   590,   311,   591,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   592,   342,   343,
     593,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     594,   355,   356,   357,   358,   359,   360,   361,   595,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     596,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   597,
     393,   394,   598,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   599,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   600,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   601,   456,   457,   458,   459,     0,   460,   602,
     462,   463,  1623,  1624,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,   567,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,   568,   569,    74,
      75,    76,    77,    78,    79,   570,    81,    82,    83,    84,
     571,    85,   572,    87,    88,    89,    90,    91,   573,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,   574,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   575,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
     577,   141,   142,   143,   144,   578,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   580,   581,   170,     0,   171,   172,   173,   582,
     175,   176,   177,   178,   179,   583,   181,   182,   584,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   587,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   588,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   589,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     590,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   592,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   594,   355,   356,   357,   358,   359,
     360,   361,   595,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   596,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   599,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   601,   456,   457,   458,
     459,     0,   460,   602,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,   567,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
       0,   568,   569,    74,    75,    76,    77,    78,    79,   570,
      81,    82,    83,    84,   571,    85,   572,    87,    88,    89,
      90,    91,   573,    92,    93,    94,     0,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,   574,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   575,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   576,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,   577,   141,   142,   143,   144,   578,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   579,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   580,   581,   170,     0,
     171,   172,   173,   582,   175,   176,   177,   178,   179,   583,
     181,   182,   584,   184,   185,   585,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     586,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     587,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   588,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   589,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   590,   311,   591,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   592,   342,   343,   593,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   594,   355,
     356,   357,   358,   359,   360,   361,  1971,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   596,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   597,   393,   394,
     598,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   599,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   600,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     601,   456,   457,   458,   459,     0,   460,   602,   462,   463,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,    45,    46,   567,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,     0,   568,   569,    74,    75,    76,
      77,    78,    79,   570,    81,    82,    83,    84,   571,    85,
     572,    87,    88,    89,    90,    91,   573,    92,    93,    94,
       0,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,   574,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   575,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   576,   130,   131,   132,
       0,   133,   134,   135,   136,   137,   138,   139,   577,   141,
     142,   143,   144,   578,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   579,   159,     0,
       0,   160,   161,   162,   163,   164,   165,   166,  2720,   168,
     580,   581,   170,     0,   171,   172,   173,   582,   175,   176,
     177,   178,   179,   583,   181,   182,   584,   184,   185,   585,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   586,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   587,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,  2721,   274,
     275,   276,   277,   278,   279,   588,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   589,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   590,   311,
     591,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   592,
     342,   343,   593,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   594,   355,   356,   357,   358,   359,   360,   361,
     595,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   596,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   597,   393,   394,   598,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   599,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   600,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   601,   456,   457,   458,   459,     0,
     460,   602,   462,   463,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,   567,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,     0,   568,
     569,    74,    75,    76,    77,    78,    79,   570,    81,    82,
      83,    84,   571,    85,   572,    87,    88,    89,    90,    91,
     573,    92,    93,    94,     0,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,   574,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   575,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     576,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,   577,   141,   142,   143,   144,   578,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   579,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   580,   581,   170,     0,   171,   172,
     173,  2708,   175,   176,   177,   178,   179,   583,   181,   182,
     584,   184,   185,   585,     0,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   586,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   587,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   588,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   589,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   590,   311,   591,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   592,   342,   343,   593,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   594,   355,   356,   357,
     358,   359,   360,   361,   595,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   596,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   597,   393,   394,   598,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     599,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     600,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,     0,   456,
     457,   458,   459,     0,   460,   602,   462,   463,    16,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   684,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,    45,    46,   567,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,   568,   569,    74,    75,    76,    77,    78,
      79,   570,    81,    82,    83,    84,   571,    85,   572,    87,
      88,    89,    90,    91,   573,    92,    93,    94,     0,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,   574,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   575,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   576,   130,   131,   132,     0,   133,
     134,   135,   136,   137,   138,   139,   577,   141,   142,   143,
     144,   578,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   579,   159,     0,     0,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   580,   581,
     170,     0,   171,   172,   173,  3297,   175,   176,   177,   178,
     179,   583,     0,   182,   584,   184,   185,   585,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   586,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   587,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   588,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   589,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   590,   311,   591,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   592,   342,   343,
     593,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     594,   355,   356,   357,   358,   359,   360,   361,   595,   363,
     364,   365,   366,   367,   368,   369,     0,   371,   372,   373,
     596,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   597,
     393,   394,   598,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   599,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   600,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,  3298,   456,   457,   458,   459,     0,   460,   602,
     462,   463,    16,    17,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    44,    45,
      46,     0,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,     0,   569,    74,
      75,    76,    77,    78,    79,   570,    81,    82,    83,    84,
       0,    85,   572,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,   111,
     112,   113,   114,     0,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   576,   130,
     131,   132,     0,   133,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   579,
     159,     0,     0,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   580,     0,   170,     0,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   583,   181,   182,     0,   184,
     185,   585,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   586,   201,   202,   203,
     204,   205,   206,   207,   208,   209,     0,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   591,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   342,   343,   593,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,     0,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   597,   393,   394,   598,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   600,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     0,   460,   602,   462,   463,    16,    17,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1547,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    44,    45,    46,     0,    47,     0,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
       0,    62,    63,    64,    65,    66,    67,    68,    69,     0,
       0,     0,     0,    74,    75,    76,    77,    78,     0,     0,
      81,    82,    83,    84,     0,     0,     0,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,    96,     0,     0,
       0,     0,     0,     0,   102,     0,   104,     0,   106,   107,
    1548,   109,   110,   111,   112,   113,   114,     0,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,     0,   130,   131,   132,     0,   133,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,     0,     0,     0,   159,     0,     0,   160,   161,   162,
     163,   164,   165,   166,   167,   168,     0,     0,     0,     0,
       0,   172,   173,  1549,   175,   176,   177,   178,   179,     0,
     181,   182,     0,   184,   185,     0,     0,   187,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   201,   202,   203,   204,   205,   206,   207,   208,   209,
       0,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,    16,    17,     0,     0,   296,
     297,     0,   299,   300,   301,   302,     0,   304,   305,   306,
     307,   308,   309,     0,     0,     0,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   340,     0,   342,   343,     0,   345,
     346,     0,   348,   349,   350,   351,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,     0,   363,   364,   365,
       0,   367,   368,   369,   370,     0,   372,   373,     0,     0,
     376,     0,     0,   379,   380,   381,     0,   383,     0,   385,
     386,   387,   388,     0,   389,   390,   391,     0,   393,   394,
       0,   396,     0,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,     0,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   428,   429,   430,     0,   432,   433,   434,
     435,     0,     0,   438,   439,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
       0,     0,   457,   458,     0,     0,   460,     0,   462,   463,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1565,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    44,    45,    46,     0,    47,     0,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,     0,
      62,    63,    64,    65,    66,    67,    68,    69,     0,     0,
       0,     0,    74,    75,    76,    77,    78,     0,     0,    81,
      82,    83,    84,     0,     0,     0,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,    96,     0,     0,     0,
       0,     0,     0,   102,     0,   104,     0,   106,   107,  1548,
     109,   110,   111,   112,   113,   114,     0,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,     0,   130,   131,   132,     0,   133,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
       0,     0,     0,   159,     0,     0,   160,   161,   162,   163,
     164,   165,   166,   167,   168,     0,     0,     0,     0,     0,
     172,   173,  1549,   175,   176,   177,   178,   179,     0,   181,
     182,     0,   184,   185,     0,     0,   187,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     201,   202,   203,   204,   205,   206,   207,   208,   209,     0,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,    16,    17,     0,     0,   296,   297,
       0,   299,   300,   301,   302,     0,   304,   305,   306,   307,
     308,   309,     0,     0,     0,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   340,     0,   342,   343,     0,   345,   346,
       0,   348,   349,   350,   351,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,     0,   363,   364,   365,     0,
     367,   368,   369,   370,     0,   372,   373,     0,     0,   376,
       0,     0,   379,   380,   381,     0,   383,     0,   385,   386,
     387,   388,     0,   389,   390,   391,     0,   393,   394,     0,
     396,     0,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   428,   429,   430,     0,   432,   433,   434,   435,
       0,     0,   438,   439,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,     0,
       0,   457,   458,     0,     0,   460,     0,   462,   463,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      44,    45,    46,     0,    47,     0,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,     0,    62,
      63,    64,    65,    66,    67,    68,    69,     0,     0,     0,
       0,    74,    75,    76,    77,    78,     0,     0,    81,    82,
      83,    84,     0,     0,     0,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,    96,     0,     0,     0,     0,
       0,     0,   102,     0,   104,     0,   106,   107,  1548,   109,
     110,   111,   112,   113,   114,     0,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
       0,   130,   131,   132,     0,   133,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,     0,
       0,     0,   159,     0,     0,   160,   161,   162,   163,   164,
     165,   166,   167,   168,     0,     0,     0,     0,     0,   172,
     173,  1549,   175,   176,   177,   178,   179,     0,   181,   182,
       0,   184,   185,     0,     0,   187,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   201,
     202,   203,   204,   205,   206,   207,   208,   209,     0,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,    16,    17,     0,     0,   296,   297,     0,
     299,   300,   301,   302,     0,   304,   305,   306,   307,   308,
     309,     0,     0,     0,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   340,     0,   342,   343,     0,   345,   346,     0,
     348,   349,   350,   351,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,     0,   363,   364,   365,     0,   367,
     368,   369,   370,     0,   372,   373,     0,     0,   376,     0,
       0,   379,   380,   381,  5456,   383,     0,   385,   386,   387,
     388,     0,   389,   390,   391,     0,   393,   394,     0,   396,
       0,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,     0,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   428,   429,   430,     0,   432,   433,   434,   435,     0,
       0,   438,   439,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,     0,     0,
     457,   458,     0,     0,   460,     0,   462,   463,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
      45,    46,     0,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,     0,     0,   569,
       0,    75,     0,     0,    78,    79,   570,    81,    82,    83,
      84,   571,    85,   572,    87,    88,    89,     0,     0,   573,
      92,    93,    94,     0,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,   574,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   575,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,     0,   126,     0,   128,   576,
     130,   131,   132,     0,   133,   134,   135,   136,   137,   138,
     139,   577,   141,   142,   143,   144,     0,   145,   146,   147,
       0,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     579,   159,     0,     0,   160,   161,   162,   163,   164,   165,
     166,   167,     0,   580,   581,   170,     0,   171,   172,   173,
    5457,   175,   176,     0,     0,   179,   583,   181,   182,   584,
     184,   185,   585,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   586,   201,   202,
     203,   204,   205,   206,   207,     0,   209,   587,   210,   211,
     212,   213,   214,   215,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
       0,     0,     0,   265,   266,   267,   268,   269,     0,     0,
     272,   273,   274,   275,   276,   277,   278,   279,   588,   280,
     281,   282,   283,     0,     0,     0,   287,   288,   289,   290,
     291,   292,   589,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,     0,
     310,   590,   311,   591,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   592,   342,   343,   593,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   594,   355,   356,   357,     0,
     359,   360,   361,   595,   363,   364,   365,   366,   367,   368,
       0,   370,   371,   372,   373,   596,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   597,   393,   394,   598,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   417,
     418,     0,   420,   421,     0,   423,   424,   425,   426,   599,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   600,
     438,   439,   440,   441,   442,   443,     0,     0,   446,   447,
     448,   449,   450,   451,   452,   453,   454,  1449,   456,   457,
     458,   459,     0,   460,   602,   462
};

static const yytype_int16 yycheck[] =
{
       0,   820,  1224,   671,    24,   918,  1323,   757,   558,   735,
     736,     0,     3,  1409,   670,   671,  1324,  1324,   553,   518,
    1544,  1643,  1605,  1409,  2123,  2023,  1784,   621,  2026,    72,
    1169,  1170,  1171,  1772,     0,  2053,   670,   621,  1815,  1178,
     566,  1862,  1337,  1862,   855,  2290,  1206,   765,  2203,  1732,
       0,  1405,     0,  1719,  1612,  2211,  2051,  1621,  2770,  1413,
    2025,  2682,  2943,  3031,  1224,     0,  2190,  3535,   692,  3477,
    1485,     0,     0,     0,  1833,  1429,   670,  1530,   639,  3208,
    1146,  1847,  1848,   664,   639,  1439,   670,  2989,   623,  2795,
     625,   626,   627,   628,   629,  2189,   631,   632,  1791,  1465,
     635,   636,  1821,  3061,  3062,  1459,  3535,   668,  3433,  4043,
    3818,  3609,  1831,   668,  1401,  2027,  1340,  1499,  3584,  1743,
      73,  3609,  3609,  3668,  2680,    34,  3500,  1751,     0,  4029,
    1752,  1753,   806,  1755,  1756,  1757,  1758,  1759,  1760,  1426,
    1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  3475,   169,
     945,  1340,  3526,  3527,  3609,  3489,  2019,  3609,  1445,  1446,
    1447,  3609,   983,  1450,  4129,  4227,  1784,  1283,   711,  3700,
    1854,   714,  3325,  2287,  2282,  2066,  3077,  1464,  4593,  2704,
     819,  1947,  4027,  2851,  1949,  3261,  3262,  2919,  1872,  3535,
    3344,  1949,  2291,  2919,     0,  3420,  4944,  3819,  3556,  3353,
    3819,  5025,  2749,  3837,  4071,  4119,  4119,  4119,  3938,  2851,
    4120,  4259,  4122,  1897,  1898,  4125,  4477,  3591,  3592,  1399,
       6,  2177,    11,  1403,   818,  1405,   820,    10,    28,  4139,
       9,    10,  3178,  1413,   818,  1148,   820,    11,  2149,    30,
    1420,     6,  1422,  4724,  1565,    11,    61,   566,    11,  1429,
     566,  2919,    80,  2909,   566,   566,    92,     6,    50,  1439,
    1376,    80,    94,  1443,     6,   152,     9,    10,  1448,    26,
    2843,    26,  2245,    74,  2247,  2248,   183,  2919,    80,  1459,
    1460,  1461,  1462,  1463,  1079,  1080,  1081,    80,   114,   104,
    1983,   176,   176,   104,  3530,    86,  1091,    80,  1591,  1592,
    3598,     9,    10,  1410,     9,    10,    11,  1600,   765,   137,
    1417,   846,     9,    10,  3245,    61,    92,    80,   137,     9,
      10,   341,    11,   858,   859,  1432,    61,   226,    61,    80,
      80,  1949,     9,    10,    80,  2832,  3549,  3441,   193,  1632,
     229,  1634,   193,  4391,  4412,    80,    57,    80,   193,    92,
     217,   125,   263,   181,     9,    10,   181,  1650,  1651,   125,
    1653,     9,    10,   113,   247,   234,   260,  2077,  1661,  1662,
    1408,  1409,  1665,  4480,  1412,   354,     9,    10,    89,  3325,
      24,  1419,     9,    10,  1226,   113,   137,  1425,  3810,   176,
     213,  1203,  2085,   104,  1408,  1409,   193,   286,  1412,    12,
     292,   180,    61,   182,    94,  1419,     9,    10,   152,  5274,
    2120,  1425,   352,  1225,   360,   193,   297,    83,  3571,   219,
      61,    57,  1409,    14,  4058,  1412,   369,   200,  3526,  3527,
    5629,    12,  1419,  5071,   145,  1501,    60,   180,  1425,   182,
    5686,    42,    32,     9,    10,   104,    61,  4886,   742,     9,
      10,   372,    65,    89,   120,   148,     9,    10,   234,   148,
      10,  1527,   173,   104,     9,    10,   216,    61,   104,   129,
       9,    10,   180,    32,   182,   180,   295,   182,   267,   234,
     282,  4446,  3038,   180,    65,   182,     9,    10,   176,   104,
     180,   785,   182,  3591,  3592,   104,   234,   234,   440,   453,
    3515,  5249,  5089,   180,   558,   182,    61,     9,    10,   145,
     104,   148,    11,   206,   297,   116,  3843,   206,     9,    10,
     206,  5279,   301,  3865,   193,   180,   127,   182,   406,   229,
    4733,   983,   180,   134,   182,     9,    10,   173,   492,    61,
     297,   176,     9,    10,   295,  1998,   176,   180,  5316,   182,
    4022,   607,    63,   180,   111,   182,   104,   548,   301,   113,
     551,   272,   163,   104,   390,  4693,    58,   672,    73,     9,
      10,  1245,   513,     9,    10,    12,  1028,   180,    86,   182,
    1306,  6068,  1308,  1309,  1310,  1311,  1312,  1313,  2561,  2562,
    2563,  2564,  3560,   301,    92,   385,   301,   620,   176,   297,
       9,    10,   509,  2296,   301,   282,   249,   639,   119,   275,
     633,   301,   402,  6100,   180,   229,   182,    69,   261,   724,
     180,   621,   182,   224,   301,  3571,   125,   180,    65,   182,
     671,   123,   621,  1085,   243,   180,   272,   182,   638,  2795,
    5408,   180,   199,   182,   142,   587,   301,   525,    86,   638,
     172,    63,   652,   301,   255,   621,   712,   180,   104,   182,
     262,  4069,   216,   616,   172,  1804,   104,  1984,   301,  3350,
     670,   671,   638,   446,   301,   729,   676,  1220,   180,   234,
     182,   670,   234,  4041,    80,  1496,  1825,    80,   638,   180,
     262,   182,   692,   647,   621,  2077,    17,  3850,   301,  5945,
     679,  5459,  5340,  4169,   670,   216,   180,   119,   182,   161,
     334,   638,  1386,   180,   654,   182,   208,   267,   229,   640,
     234,   192,  2030,     9,    10,  5924,   317,     9,    10,   127,
    2025,   554,   145,   323,  1800,   301,  5323,   374,  2120,  4066,
     180,   301,   182,   670,   180,  2052,   182,  4854,   301,   621,
     145,   704,  1818,   662,   297,  4485,   301,   347,   711,  4489,
     173,   714,   301,   271,   717,   262,   638,   710,   279,   226,
    5209,   180,   297,   182,   565,   286,   282,   170,   301,  1845,
       9,    10,  4649,   297,   489,   234,   297,   531,   347,  1610,
    4445,   477,  1587,  1588,   688,  3924,  1322,   457,   798,   301,
     113,  4147,  5667,  1255,   216,  1626,  2028,  4017,   707,  2568,
     301,  2723,   234,   813,   262,   621,   762,   229,   818,  5022,
     820,   234,     9,    10,   813,  2790,   617,   301,  1502,   818,
    1329,   820,   638,   271,   301,   148,   138,  2219,   234,   567,
    4888,   234,  2066,  2160,   727,  4219,   637,   813,  2567,   226,
    2167,  2975,   818,   764,   820,  4343,   847,   848,   849,   850,
     651,   301,  3530,   813,   670,   301,  3598,   279,  2028,  2552,
     762,   780,  3598,   762,   286,   762,  2498,  2066,   747,   764,
     764,  4117,   673,   764,   297,   297,   813,  2509,  3530,  2511,
    2512,   818,   301,   820,   180,   895,   182,   764,   180,   234,
     182,   203,  2466,  2467,  3850,   654,   906,   762,   908,   909,
     910,  1585,   654,  1370,   914,   741,   916,   906,   769,   908,
     909,   910,  4220,   923,   769,   914,  3857,   916,   764,   234,
    3598,  4035,   764,  2491,   923,   727,  1497,  3593,   753,   764,
     768,   813,   753,  4153,   853,   945,   818,   856,   820,   768,
     950,   180,   701,   182,  2275,  3528,  3598,   923,   747,  4172,
    2281,   762,  5030,  1784,   764,   766,   768,  2651,   282,   726,
    4392,   747,   769,   923,  1598,   768,   762,   764,  1773,   906,
     980,   908,   909,   910,   747,   768,  4620,   914,   767,   916,
     990,   769,   747,   180,   768,   182,   923,   762,   905,  5480,
    2116,  2140,   768,  1322,  3501,   768,  1322,   813,  2964,  2965,
    1322,  1322,   818,  4028,  5082,   301,   629,   768,   768,   301,
     763,  5769,   768,  5771,  5772,  2132,  2133,  1321,   672,     9,
      10,   769,   769,   768,   906,   768,   908,   909,   910,  1851,
     262,  1853,   914,  1667,   916,   738,  2153,  1090,   629,   738,
    3023,   923,   763,  1895,  1866,   763,  2163,  1869,   747,   764,
    1684,  1873,   762,  1687,   762,  1689,   763,   764,  2175,  1693,
    1694,  1695,   301,  1530,   764,  2368,   764,  1701,  2371,  1079,
    1080,  1081,  1082,  1801,  5152,  2192,  4494,   764,  1900,  1901,
    1902,  1091,  2811,   762,   753,  4422,  2389,   763,  4440,   492,
     906,  5304,   908,   909,   910,     9,    10,  2400,   914,   764,
     916,  1837,   753,  5241,   301,   763,   764,   923,  2156,  4591,
    4528,  4219,  2832,   628,   714,  5193,  5194,   763,  1949,   764,
     763,   764,  3688,   260,   764,  2998,   763,   764,   753,   752,
    2178,  2851,  2156,  2181,   753,   616,  4092,  4093,   762,  5410,
    4096,  4097,  1870,  2191,  5902,  5903,  4102,  4103,  1610,   753,
     763,  5909,  4796,  3074,  2178,  3076,   767,  2181,   770,  2156,
       9,    10,  5220,  1625,  1626,     9,    10,  2191,  4908,  4909,
    5094,  5094,  5094,  5251,   676,  5095,   764,   262,  5055,   491,
     762,  2178,   513,  6017,  2181,   747,  2262,   763,   764,  2909,
     180,  3356,   182,   763,  2191,   753,  3204,   182,   716,  2919,
     763,   764,   753,     9,    10,   763,   764,   769,   763,  4593,
      17,   764,   763,   764,  4170,   764,  4860,   625,  4862,  4637,
       9,    10,   357,   747,  4702,    32,     9,    10,  4585,   764,
    1147,   764,   109,   110,  4899,  1152,    28,  1808,  5996,  6073,
     707,   762,  1252,  1808,  1254,  3936,  3937,  4615,   764,  1302,
      69,   763,   764,   769,  2059,   762,  2077,  1220,     5,  1222,
       9,    10,   763,  4702,  5657,   554,   180,    99,   182,  2005,
    4902,  2007,  4616,  4902,  2010,    32,  2012,  2013,   601,   763,
     764,   432,  1966,   764,    31,    33,   763,   764,   747,   234,
    3273,  2051,   754,   755,   756,   757,  4531,   753,  3001,  2120,
     229,   229,   282,    14,   762,   753,   260,   763,   764,  3012,
     769,   301,   229,   763,  1958,   747,  1778,   763,   764,   345,
     707,  4485,  1784,   357,   747,  4489,    73,  1244,  1338,   752,
     753,   180,  5015,   182,  1801,  5016,   180,   769,   182,  3032,
     762,  4480,   161,   298,   299,   764,  4702,   752,   753,    35,
     639,     9,    10,   260,  1958,  5780,   762,   286,   286,   762,
     179,   185,   768,   769,  1958,   768,   769,  1377,   456,   286,
    1380,  1372,  5907,  5281,   180,   687,   182,  5338,   282,   668,
     170,   627,  5292,   707,  4547,  1304,  1305,   301,  1941,   148,
    4476,   180,    81,   182,  4557,  4558,   685,   180,    73,   182,
    1862,   206,   747,  1870,  2070,   282,  5261,    96,    37,    38,
      49,    63,   278,   702,     6,  2647,  1969,  3339,   327,    92,
     260,   168,  2571,   762,   769,  2574,  1997,   219,  3963,   200,
     769,   180,   747,   182,   324,  4346,   125,   303,  1355,  4117,
    2832,   233,   131,  2592,   260,  5870,  5871,  1364,  2008,  2009,
     601,    24,   301,  1254,   769,  3483,  1373,   301,  4876,   139,
     207,  5539,   762,   229,  1265,  4117,   766,  3099,   764,   206,
    2546,  2547,   764,  5898,  3482,  2124,   165,  2647,  4220,  3254,
     209,  3486,   289,   290,  4220,  4705,  3254,  1949,   129,  1490,
      76,   368,  2809,   578,  4125,   301,  3327,   786,   114,  3330,
    3331,  3330,  3331,   418,   357,   327,    96,   736,  5586,   494,
    2779,   206,   301,  2747,  2105,  5231,   323,  2909,   301,  3623,
     286,  3625,   180,   769,   182,   764,  3427,  2919,   554,  1539,
     762,  1998,   422,   290,   341,  2366,   262,   672,   111,   350,
     347,   131,  4220,  5504,   170,   225,  2230,  2231,  2747,  5457,
     355,   688,   301,   385,  4510,  3284,   267,  3020,   233,  6094,
    6095,  1478,   471,  1480,  1574,   854,   373,   764,  4220,   286,
    3263,    17,   660,  5483,  3698,  3000,  5648,  1587,  1588,  3697,
     297,   113,  3311,  1593,   408,  3219,    32,  1597,  1598,  1599,
     727,  4547,   113,     9,    10,   343,     9,    10,  1608,  1609,
    5283,  4557,  4558,  5144,  1614,   482,  1616,  1617,  1618,  1619,
    1620,   520,  1622,   764,     9,    10,   148,     9,    10,  1536,
    6013,  6014,   308,  1633,   297,  1635,  3254,   279,  1638,  1639,
    5048,  1641,  1642,  1643,   260,  1645,  1646,  1647,   672,  4996,
     399,  2232,  1652,   301,   113,  1655,  3340,  3376,   557,   471,
    3218,  3225,  3226,  1663,  1664,  3248,  1666,  1667,  1668,    11,
    3228,  1671,  1672,  1673,  1674,  1675,  1676,  1677,   479,  1679,
    1680,  1681,  1682,  1683,  1684,   446,  1686,  1687,  3354,  1689,
    1690,  1691,  1692,  1693,  1694,  1695,  2290,   248,  1698,  1699,
    1700,  1701,  1745,  1703,  1704,  1705,  2290,  1707,   520,  1709,
    5675,  1711,   492,  2294,   689,  1715,  1716,  1717,   294,  5046,
    1720,  1721,  1722,  1723,  1724,  4854,  1726,  4283,  4275,  4276,
    4277,  4278,   554,  1733,  5068,  5635,  5636,     9,    10,  5373,
    1740,  1741,  1742,  1743,   688,  2861,   462,   644,  3660,   432,
     477,  1751,  1752,  1753,   492,  1755,  1756,  1757,  1758,  1759,
    1760,  2674,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
     281,  3464,   554,  1773,   180,   674,   182,   180,   360,   182,
    3039,  1688,  4992,   727,   764,   262,  5331,    86,     9,    10,
    1697,  3501,  3655,   763,   764,   180,   652,   182,   180,   350,
     182,  1708,  2614,  5301,  2943,  5476,  2618,     9,    10,   428,
     429,  4779,   747,  5301,  5301,  5523,  1816,   163,  3816,   764,
    3530,  1821,   281,  4919,  4920,   730,   457,   443,  2640,   672,
     729,  1831,   461,   148,   769,   109,   110,  3658,   644,  3658,
     707,  2653,  2654,   762,   762,    35,  5301,  1838,  1839,  5301,
    1841,  1842,  1843,  5301,  5064,   762,  5066,   437,   688,  5069,
     764,  1852,  5568,  5001,  5570,  5075,  5076,   604,   167,   168,
     764,     9,    10,   172,   696,   769,   492,  1868,   679,  5089,
       9,    10,   688,  3593,   412,    35,  1793,   323,  3598,   719,
    1169,   360,  1171,     9,    10,   301,  1175,  1176,   301,  1899,
      32,  5799,    34,  5801,   484,   341,  5669,   432,   180,  3204,
     182,   347,   109,   110,  2366,  2367,   301,   714,   601,   301,
    1873,    35,     9,    10,  1924,   764,  1205,  3925,   479,  3924,
     764,   442,  5301,  1840,   619,   589,   375,  1844,   460,  1846,
     282,  3007,   571,   752,   753,   754,   755,   756,   757,   578,
       9,    10,   764,  2405,  2867,  2589,   672,   586,  1958,   180,
     645,   182,    57,  4584,  4585,     9,    10,   547,   764,  1958,
       9,    10,   271,  2523,     9,    10,  5474,   391,   180,   393,
     182,  5308,   445,   442,   763,  1892,  5474,  5474,  1941,   576,
     233,   764,  1958,   339,    35,  2589,  2557,   319,  5932,     9,
      10,   552,  2557,    35,   415,  2589,  2458,  3590,    35,  1962,
      28,   591,   485,  5460,   721,  2006,  1969,  4919,  4920,  5474,
    2472,  2832,  5474,   297,   763,  5178,  5474,   566,  3650,   301,
     659,  1958,   247,     9,    10,  2761,   568,   720,  2764,   404,
    2766,   137,   180,   286,   182,   563,   411,   340,  2774,   203,
     145,   180,  2726,   182,   297,   762,  4776,  4777,  4778,  2059,
     471,   136,     9,    10,   180,    80,   182,   563,   747,   748,
     749,   225,   688,    61,     9,    10,   601,    33,   173,   601,
     301,   764,     9,    10,   399,   181,  1958,   564,   561,  2670,
     719,     0,  3913,   180,   368,   182,  2003,  2004,  2909,   301,
    3013,   578,     9,    10,   589,  5474,     9,    10,  2919,     9,
      10,  5753,   575,  5323,   441,    17,   764,  5327,   308,  3501,
    5445,   180,  5447,   182,   446,   386,   595,  2080,   679,  5267,
      32,    84,  5450,  5271,  5272,    91,   180,  5233,   182,  3278,
    3279,   180,   670,   182,   459,   180,   557,   182,     9,    10,
    5118,    94,  1958,   368,  2697,   142,     9,    10,   308,     9,
      10,   600,  3301,   301,   457,  3884,  3885,   747,   748,   749,
      61,   368,   301,     9,    10,   762,  2176,   272,  2630,  5942,
    3899,   124,  3865,   471,   719,   301,  3408,  2176,   739,  2096,
     653,  5638,  4291,   526,   308,   720,  3862,  2197,  2198,   738,
     557,   219,   558,  3427,   180,  3271,   182,  3831,   482,  4915,
    2176,  3593,   327,  3609,   301,   347,  3598,  3283,  1497,   688,
     295,    83,  5351,  3609,   188,  3847,  2176,  4774,  3681,  3682,
    3683,  3684,  5178,   180,   703,   182,   200,   769,  3427,     9,
      10,  3656,   301,   199,  5886,   180,   764,   182,  3408,  2176,
    3472,  2801,  2704,   180,  2706,   182,    79,   301,   120,    82,
     183,   588,   301,   674,     9,    10,   301,   308,   764,   557,
    5595,    83,   745,   180,  2274,   182,   308,   180,   714,   182,
     180,   308,   182,   697,   635,   482,   700,     9,    10,  5499,
    2290,   301,  2292,   554,  5612,  2295,   260,  2297,  5244,     9,
      10,  2290,  5440,  2292,  2176,  2305,  2306,  3624,   120,  2216,
     229,  2810,  3472,   630,     9,    10,  5782,  5783,   729,   180,
     276,   182,  5418,  5419,  2290,   301,  2292,   180,   558,   182,
     180,  5233,   182,   320,  4017,     9,    10,  2244,  2245,   317,
    2247,  2248,  2292,  4255,   180,   638,   182,  2799,  3714,  3880,
    3881,  3882,  3883,   764,   301,   178,   471,   763,  2265,  3713,
     693,   764,    92,  2290,  2271,  2292,   301,   286,   441,   290,
    2176,   292,   729,   729,   301,  4996,     9,    10,   711,   764,
       9,    10,   764,   371,   206,   373,   674,   310,   276,   566,
    5717,  2391,  2392,  2393,   301,   656,   287,   288,   301,  2856,
    4395,   301,     9,    10,  4562,   520,  5780,  4117,   764,  4567,
     180,   762,   182,   275,  5134,     9,    10,   716,  2290,   398,
    2292,   323,   410,   444,  3711,  3712,   583,  3222,  5896,   398,
       9,    10,  3719,  3254,  3721,   180,  3723,   182,   261,   341,
     301,   729,   747,  3004,  3357,   347,     9,    10,   301,  3004,
     438,   301,   769,  4230,  3078,  5423,  1735,   478,   180,   437,
     182,     9,    10,   275,  3088,   301,  5895,   167,   168,  2469,
     180,   373,   182,    99,  5095,   297,     9,    10,   721,  5185,
     368,    24,   446,  4481,  2290,   180,  2292,   182,    92,   580,
      18,  2491,   764,  1772,   385,   474,  5870,  5871,  2498,   729,
    3808,  2501,   747,  2503,   661,   474,   180,    18,   182,  2509,
    4220,  2511,  2512,     9,    10,   588,  5418,  5419,   147,   762,
      98,  3145,     9,    10,  5898,   437,   956,   957,   958,  1808,
    2437,   301,   553,  3713,   764,  2535,  2443,   583,  3718,  5585,
       9,    10,  5588,   764,  3724,  5953,    63,   180,   747,   182,
    2550,   180,  3176,   182,  3272,   495,   301,  5686,   513,  5884,
    5885,   738,   764,  3020,     9,    10,  4670,  2567,   111,   460,
       9,    10,   484,   180,   334,   182,   104,   105,  3212,   301,
    5538,  4493,    17,  2536,   675,   573,   180,  1017,   182,  2589,
    2590,   301,   480,   104,   105,   122,  4700,    32,   513,   539,
    2589,   180,   119,   182,   111,   697,   301,     9,    10,   701,
    2601,  3235,  2612,   634,   136,   661,   346,   180,  3212,   182,
     808,   609,  2613,  2589,  6010,  6011,   764,   301,  3212,  4647,
    3925,   188,   180,    63,   182,   764,  2589,   728,  4762,   398,
    4764,  2548,   554,   200,  4642,   600,  4644,   180,   764,   182,
    5862,  4646,   412,  5865,  2561,  2562,  2563,  2564,  2611,  3315,
       9,    10,   769,  4757,   852,  2226,  2619,  4761,   301,  4763,
     137,  1950,   301,   200,     9,    10,  6062,   764,  4643,     9,
      10,  3315,     9,    10,   180,   600,   182,    15,  3910,   119,
    3501,  2691,  3242,   180,   301,   182,  4790,  4791,  4792,   654,
    2700,  5747,   432,   260,   434,   764,  4465,   301,  5754,    57,
    1989,   180,   707,   182,   181,     9,    10,  2589,  1997,   763,
    1999,  3315,   301,     6,  3637,   764,    94,     9,    10,   764,
    2639,  3315,   672,  4499,   262,   180,  3486,   182,   301,   654,
     262,   180,   346,   182,  2697,  2652,   559,   560,  4312,  4313,
    3910,   262,  6160,   301,  4437,     9,    10,  4440,   294,  4915,
       6,  2668,   279,  4071,  4071,  2756,   216,  2758,   301,   137,
     614,  2678,   117,   295,   769,   145,  4340,  2768,   180,   124,
     182,  2772,  3593,  2589,  3236,    68,   216,  3598,   764,    57,
    3609,   229,  4375,  3859,   524,  2074,   124,   145,    76,  2799,
      78,  4365,  3254,   173,  3943,   301,     9,    10,   136,     9,
      10,  2811,   714,   181,   301,  3272,  5945,   764,    92,  4272,
    6032,    89,    68,   636,   668,   173,  4492,    99,   432,   764,
     434,   180,   301,   182,  6161,     9,    10,   764,  4220,     9,
      10,   186,   188,  5621,   262,   180,  4429,   182,   286,   279,
     180,  2270,   182,   180,   200,   182,   301,   764,  2765,   297,
    4424,   764,   301,   137,   764,  2865,  2819,   297,   142,   121,
    2149,   601,   111,  2826,  2827,  3327,    57,   145,  3330,  3331,
    3332,     9,    10,  4878,   212,   137,   180,  4026,   182,   446,
     633,    99,  2072,     6,  5672,  2075,     6,    99,   180,   301,
     182,   247,   763,     9,    10,   173,  2185,   181,    89,   122,
     763,     9,    10,   763,  5795,   753,  1346,  4448,  4449,   127,
     524,    26,   114,   269,   272,   763,   180,   763,   182,     9,
      10,  4624,   753,    83,  5646,    94,  6003,   129,  2981,   517,
     518,     6,   763,   521,   522,   523,   689,  4343,     6,   692,
       9,    10,   301,    11,  5575,    68,  5577,    15,    68,  6005,
    6006,  5065,     6,   122,   145,   707,   301,  1112,   500,   501,
     120,   301,  4496,   181,   301,  5079,   719,   180,   137,   182,
     180,  6048,   182,   515,   727,   721,  5090,   137,  5092,  6056,
     763,   764,   173,   763,  2994,     9,    10,   601,  1143,     9,
      10,     6,   233,    68,   272,   148,   180,   301,   182,   263,
     180,   325,   182,  1522,  1523,  3609,  4682,  1526,   763,   301,
       9,    10,   181,    57,    68,  3609,  6093,   769,   122,  5185,
      28,   181,   763,   764,   764,    33,    94,     9,    10,    37,
     753,   763,   769,   137,  4224,  4225,  4226,   301,  4228,  4732,
     763,   764,   180,   763,   182,    89,  4236,  4237,  4238,  4239,
    3060,  3061,  3062,    68,   763,   764,  3066,    10,   763,  3069,
     104,  3060,  3061,  3062,   180,   421,   182,   402,  3078,  5173,
     612,   613,   180,   568,   182,  5050,  3086,   181,  3088,   763,
    3090,   272,  3092,  3093,  3094,  3095,  3096,  3097,   301,  3099,
     180,   301,   182,   762,     9,    10,    83,  3107,  3920,  3109,
     769,   145,  3112,  3113,  3114,  3115,  3023,   655,  3118,  3119,
      94,   180,  3122,   182,  3124,   275,  3126,   301,  3128,   655,
     763,   301,  3132,  3060,  3061,  3062,  4444,  4444,   443,   173,
    3140,   768,  3142,   120,  3144,  3145,  3146,  3147,  3148,  4444,
      33,  3151,  3152,  3153,    37,  3155,   763,   260,  3158,   111,
     137,   114,  3880,  3881,  3882,  3883,   180,   648,   182,   763,
     180,  3171,   182,   301,  4893,  4894,  3176,  1358,  1359,  3179,
     114,  3181,  3182,  3183,   763,   658,  3186,   114,  3060,  3061,
    3062,   180,  3192,   182,   667,   301,   769,  3197,   446,   672,
     763,   643,  3826,   301,   181,   122,  3658,   260,   180,  4875,
     182,  1392,  3212,  3213,   718,   763,     9,    10,    11,  3219,
     137,   301,  3222,  3212,  3681,  3682,  3683,  3684,  3228,   727,
     763,   421,  4226,    10,  4228,  3235,   247,  3237,   272,  4381,
     245,   246,   301,  4385,  4238,  4239,  3212,   762,     9,    10,
     255,  4473,  2813,  2814,  3060,  3061,  3062,   763,   764,  3212,
    3978,   267,  1422,    76,   181,  5260,    10,   763,     5,  2830,
     455,   276,   763,   764,   768,   180,   763,   182,  2557,  2840,
    2841,    69,  3282,   200,  3284,   768,   327,   301,   764,     9,
      10,   301,    69,  3282,   763,  3845,    94,  4436,   275,   116,
    1460,  1461,     9,    10,  6016,   763,   764,    36,    36,  2728,
     127,  3311,   301,  4473,  3813,  3315,  3282,   134,   763,  5317,
     763,   764,  4461,  4462,   763,    69,  3315,   368,    49,   301,
     991,  5349,  3282,    84,  3282,  5156,   124,  5156,   674,  3791,
    3212,  4649,  4649,  2904,  2905,  2906,  2907,  3282,  4643,  3315,
    1011,  3258,  4767,  3282,  3282,  3282,  5351,  1018,  1019,   763,
     764,   763,    91,    91,  1274,  4923,  3273,  4667,     6,  4669,
    1280,  1281,  4672,   161,    95,   124,  3376,  4901,  4678,  4679,
     763,   764,  5537,   762,   161,   114,   114,   180,  3315,   182,
    4046,   179,   433,   114,   593,  4695,   301,  2676,     9,    10,
     129,   129,   179,   763,   764,    67,  3212,   224,  5653,  4220,
    3282,   763,   764,   633,   763,   721,   722,   161,   724,   180,
     726,   182,   460,  3880,  3881,  3882,  3883,   688,   763,   570,
     471,   763,   764,   763,  5192,   179,   763,  3437,   255,  4092,
    4093,   763,   764,  4096,  4097,   763,   764,   235,   236,  4102,
    4103,   763,   764,   176,   459,  3446,   267,  4811,   235,   236,
     180,  3913,   182,  3463,   192,   763,   764,   763,   764,   763,
     199,   199,   764,   180,   176,   182,  3282,  3477,   113,   520,
    4797,   763,  4032,   763,   764,   109,   110,     9,    10,   517,
     518,   235,   236,   521,   522,   523,   763,   764,   160,   412,
    3500,   114,  2781,   342,  5087,   167,   168,   762,   301,  3315,
     551,  3963,   327,   763,   764,   768,   557,   762,  4068,   240,
     762,  3978,   763,   764,    57,   762,  3526,  3527,  3435,  3436,
    4817,   763,   764,   762,  4821,  3535,   763,   764,   762,   260,
     301,   762,  5106,   205,   762,  4853,  3453,  5545,  5325,    53,
      54,    55,    56,   763,   764,   276,    89,   762,    49,   193,
     763,  3561,    34,   763,  3517,  3518,  3519,  3520,   762,  3522,
    3523,   104,   162,  4881,  4881,  4074,   109,   110,    57,     9,
      10,   301,  4236,  4237,     6,   247,  4881,   294,   721,   763,
    4885,  3591,  3592,   763,   301,  5278,   763,   764,   762,   320,
     415,   762,   106,   107,   108,   752,   753,   763,   764,  3609,
      89,   762,   145,  4065,   763,   764,  3569,  3570,   762,  3572,
    3609,  3574,  3575,  3576,  3577,  3578,  3579,  3580,  3628,  3582,
    5388,  4811,  3585,   674,   721,   763,  3589,   366,   366,  3628,
     173,   763,   764,  3609,   763,   764,    68,   763,   764,   187,
    3650,   412,   187,   157,   158,   762,   471,   763,   180,   664,
     182,   666,  3628,   762,    94,   763,   145,  5333,   187,  5687,
     763,   764,  3672,    69,   763,   764,   762,   398,  3628,   763,
     764,   762,  3609,   763,   762,  5683,  5684,   762,   729,    69,
     762,  5686,   763,   764,   173,  3695,   762,   188,  4322,   337,
    3700,  3628,   762,  5802,   763,   520,   368,  3707,   762,   200,
    3710,  3700,  4293,   763,   764,   763,   764,   762,   380,  5540,
    5541,  5540,  5541,   762,   228,  3004,   762,  3006,   763,   764,
    4448,  4449,   762,  3733,  3734,   762,  5429,  3609,  4264,   272,
    5433,   263,   557,   381,   762,   383,   762,  5055,  5055,   763,
     180,   734,   182,   763,   762,   368,  3628,  3757,   762,  3759,
     762,  3761,   375,  3763,    11,   161,   129,   763,   764,   260,
    5070,   763,   764,  3700,   763,   762,  3195,   390,   269,   301,
    3687,   161,   762,   179,  4408,  3785,   498,    34,   500,   501,
     769,   763,   762,   272,   762,  3074,   762,  3076,   302,   179,
     763,   764,   415,   515,   167,   168,  3806,  3807,  4464,   906,
     262,   908,   909,   910,    61,  4272,   762,   914,   762,   916,
     160,   483,  3628,   245,   246,   762,  3826,   762,  3700,   762,
    4464,  3831,  2139,   255,  5832,   193,   199,  3837,   476,   235,
     236,   763,   764,   763,   764,   763,   764,  3847,   762,  3849,
     579,   579,  2159,   762,   276,   235,   236,  4583,   763,   674,
     762,  2168,   109,   110,   762,   205,   762,  2174,   763,   764,
    4464,   301,   763,   764,   762,  2182,  4789,   763,   764,   193,
    4464,  5620,   129,   762,  3884,  3885,  2193,   525,   762,  2196,
     394,  5584,   554,   762,  3700,   762,  4646,     9,    10,  3899,
     612,   613,   763,   764,   762,  5301,   519,   247,   762,   630,
     762,     9,    10,   276,   729,  5301,   763,   764,   762,   532,
     167,   168,  6021,   644,   762,   172,   762,   648,   762,   176,
     421,   109,   110,  4659,  5556,   573,   762,    33,   551,   762,
      36,   762,  3503,  3504,   762,  3506,  3507,   495,  5946,   764,
    5708,   129,   199,   368,   762,   446,  3956,   686,   686,   463,
     763,   764,   750,   751,   752,   753,   754,   755,   756,   757,
     762,   692,   762,   750,   751,   752,   753,   754,   755,   756,
     757,   763,   764,   763,   764,    11,   764,   763,   764,   167,
     168,  4448,  4449,   763,   764,    91,    94,   762,   719,    95,
       9,    10,    11,   762,  3423,   368,   750,   751,   752,   753,
     754,   755,   756,   757,   762,  4671,    42,    57,   114,  1712,
    1713,   199,  4022,   762,   528,   663,   530,  4027,   368,   276,
     762,   535,   762,   129,  5700,  3596,   762,   459,   763,   764,
     380,   747,  5566,   762,   762,  4595,   684,   762,  4039,    89,
     763,   764,   762,   300,    80,   570,   471,    83,  4058,   763,
     764,   674,   762,   394,   104,   762,    92,   762,   180,  4069,
     182,   327,   762,    99,   762,  4625,   689,   103,  5474,  3986,
    4033,   328,   180,  3990,   182,  5668,   762,   113,  5474,   762,
     116,   333,   334,   762,   120,   599,   122,   762,   276,   763,
     764,   127,  3521,   199,   762,   145,   763,   764,   134,   762,
    4063,   137,   368,   763,   764,   762,   142,   480,   763,   764,
     762,   368,   300,   762,   176,   762,   762,  4877,   370,   762,
    4173,   762,   463,   173,    94,  5718,   551,   163,   642,  4674,
     176,   233,   557,   483,   240,   655,  3565,  4147,  3567,  3568,
     176,   263,   769,   644,  3573,   181,   762,   769,     3,   415,
     769,   769,  3581,  5385,   769,   769,   769,  3586,   769,   769,
     412,   180,   769,   182,   200,   769,   672,   433,  3457,   420,
     276,   137,    92,    28,   672,   688,   661,   495,    33,   301,
     368,   414,    37,   608,    92,    40,   764,   528,   224,   530,
     764,   448,   282,   301,   535,   661,  4249,   233,   342,  3488,
    3489,  5519,  5519,   764,   554,   471,   376,   764,   764,  4219,
       9,    10,   565,   683,  5519,  5385,    17,   731,   719,   255,
       9,    10,   272,   480,   747,   727,   727,    80,   742,   446,
     763,    32,   664,   665,   666,   667,   762,   286,   229,   275,
      95,   234,    61,   390,     5,   281,   282,  5565,   770,   674,
    3539,   389,   569,     4,   520,   727,    29,    58,   599,   295,
     366,   297,  4998,   412,   300,    38,   334,  5003,  5004,    70,
     762,   768,   768,   198,   762,   373,  5952,   193,   762,  5872,
      34,   762,   301,   762,   762,   551,   152,    60,   713,    90,
      92,   557,   480,   769,    92,    94,    14,   295,   769,   764,
     176,   642,   769,   158,   729,    94,   415,   147,   629,  4319,
    4320,   688,  4322,   763,    87,   762,   111,   492,   464,    92,
     294,  4331,   123,  4333,    97,    94,  4336,   236,   183,  5961,
     122,  5658,  5659,   294,  5661,   762,   147,   589,   111,  4349,
     768,  4351,   764,  4353,   762,  4355,   752,   753,   754,   755,
     756,   757,     6,   126,   606,   412,   763,    68,  4368,  4369,
     133,   751,   752,   753,   754,   755,   756,   757,     9,    10,
      11,  5689,  5689,   318,   147,   763,   763,  5682,   764,   631,
     769,   180,   763,   182,  5689,   763,   634,   763,    92,   646,
     731,   180,    34,   182,   769,    92,   763,   763,  4408,   172,
     763,   742,   297,    69,   769,   762,   442,   136,   674,    99,
     762,   267,   192,   764,    92,  6008,    42,   764,   670,    61,
    3991,  3992,  3993,  3994,  3995,   764,  3997,  3998,  3999,  4000,
    4001,   769,  4003,  4004,  4005,  4006,  4007,  4008,  4009,  4010,
    4011,  4012,   215,   672,  4015,  4016,   754,   124,   221,   222,
     764,   764,  6084,  4416,  4464,  6131,    15,   312,   475,   685,
     435,    92,   235,   729,   764,  4464,   420,   109,   110,  6145,
    5619,   672,   764,   579,   762,  6151,   342,   278,   735,   412,
     770,  6157,   764,    69,  4494,   124,   192,   129,  4464,   290,
     116,  5818,   234,  5820,  5821,   161,   345,   213,   764,  5259,
     495,   127,   301,   495,   342,   495,   495,   362,   134,   495,
      69,   495,   301,   179,   764,   764,   747,   267,  4528,   658,
    5838,  5838,   388,   296,    84,   167,   168,  4464,  5264,   581,
     172,   727,    26,  5838,   176,  5840,    94,   163,   124,   180,
     754,   182,   764,   763,   403,   764,   762,   735,   465,   580,
     176,   465,   368,   763,    29,  4126,   764,   199,   294,   718,
    4131,   334,   281,   762,    17,   124,   373,  4530,   292,   235,
     236,   292,   210,   173,   687,   161,   181,   136,    49,   764,
     686,  4591,   355,  5045,    94,   764,   764,  4550,  4551,   762,
     391,   267,   393,   179,   115,  5518,   122,  4560,   224,   415,
     763,  5750,   161,   469,   412,  5114,   763,   763,   167,   168,
    4620,   763,   754,   763,    94,   763,   753,  4627,   763,   762,
     179,   234,   763,   763,   757,   192,   762,  4637,   763,   255,
    4593,   763,   763,   763,   276,   763,   763,   763,  4668,   764,
     764,   764,   763,   114,   763,  5474,  5795,   764,  4464,   235,
     236,  4681,  4569,   212,   509,   471,   429,   764,   300,  4689,
     301,   762,    18,   763,   763,   531,  4696,  4630,  4698,  4699,
     762,   762,   769,   360,    11,  5279,   235,   236,   763,   576,
     747,   262,   262,   549,   550,  5279,   328,   262,   554,   555,
     556,   546,  4702,   548,  5156,   267,   551,   733,   762,   554,
     555,    57,    98,  5852,    94,    42,   764,    92,    92,    49,
     489,   747,  4722,  4723,   762,   762,   769,   188,   769,   764,
     764,   763,    94,   424,  4725,   225,   368,   763,   764,   200,
      86,   767,   768,    89,   769,   551,   769,  4166,  4167,  4168,
     600,   557,   233,    80,   545,    62,    83,  4710,   104,   105,
    5310,   764,     6,   419,   764,    92,   622,  4186,  4187,  4048,
    4189,    42,    99,   764,   717,   620,   103,    92,   176,   176,
    4687,   111,   262,   279,   124,    99,   764,   762,   633,   116,
     763,   543,   247,   120,   639,   122,  4796,   247,   247,   145,
     127,   643,   608,   247,   297,   568,  6123,   134,   269,   247,
     137,   176,   762,    92,   670,   142,   661,   263,   164,   747,
     747,   747,   747,   668,   764,   670,   172,   173,   747,   747,
     747,   747,   718,   747,   747,   747,   163,   494,   747,   747,
     685,   125,   747,   412,   747,   116,   747,   747,   480,   176,
     747,  5401,   747,   698,   181,   747,   127,   702,   703,   747,
    4860,   652,  4862,   134,   747,  5459,   747,   747,   674,   763,
     200,   716,    42,   200,   763,  5459,  4876,   303,   278,   763,
    5474,  4924,   747,   282,    69,   730,   763,   769,   764,   137,
    5474,   769,   163,  4893,  4894,  5563,   764,   224,    72,   315,
     769,   267,   769,   267,   267,   176,   233,   713,   267,   700,
     764,   738,  4912,   492,   759,   374,   262,   247,   122,   763,
     765,   412,   767,   729,   121,   271,   272,   273,   255,  5479,
     121,   769,   723,   187,   763,   769,   769,   763,   763,   763,
     763,   786,   753,   753,   763,  4364,   116,    26,   275,   763,
     795,   763,    32,   224,    34,   282,   764,   127,   764,   762,
     421,   806,   762,   808,   134,   681,   320,  4386,   295,   267,
     297,   229,    42,   300,  5017,    94,   161,   570,  4539,    94,
      94,    61,    94,   477,   255,   446,   262,   262,   206,   769,
     320,  4552,  4945,   163,   179,   753,   841,   764,   843,   424,
     845,   764,   847,   848,   849,   850,   851,   852,  4961,   854,
     173,   282,   762,   184,   646,  6154,  5059,   127,   127,  5062,
      11,   768,   308,  5522,   762,   764,   747,   747,   764,   109,
     110,   529,  5032,   494,   114,   315,    91,   176,   769,   385,
    5060,   764,   650,    26,   103,   769,   116,   393,  5048,   764,
     235,   236,   390,   763,   224,   762,    34,   127,   390,  5653,
     905,   262,   907,  5731,   134,   214,   262,   262,   398,  5653,
     915,    11,   917,  5026,   762,    99,   762,   762,   173,   173,
     769,   754,   220,    61,   444,   255,   147,   932,  5540,  5541,
     267,   421,  4999,   163,   750,   751,   752,   753,   754,   755,
     756,   757,   763,   735,   570,   754,   176,   176,   113,   189,
     334,   147,   123,   662,   123,   763,   446,   763,   763,   173,
     763,   762,  4541,  4542,  4543,  4544,   764,   769,   589,  4548,
    4549,   109,   110,   763,  4553,   769,   229,  4556,   764,   763,
    4559,   763,   181,  4562,  5144,   763,    26,  4566,  4567,   762,
     747,   129,   762,   215,   224,  5144,   763,   229,  5111,  5159,
     769,    94,    94,   763,   494,   763,   206,   763,   127,   630,
     250,   251,   252,   127,   750,   751,   752,   753,   754,   755,
     756,   757,   764,    93,   147,   255,   294,   648,  5188,   167,
     168,   206,   540,   747,   172,   275,   762,  5853,   176,   762,
     764,   750,   751,   752,   753,   754,   755,   756,   757,   762,
     762,   674,   674,   403,   390,   725,   403,  5144,   192,   762,
     300,   199,   627,   762,   764,   533,   762,   733,   689,   763,
     366,   692,   192,   267,   192,  6148,    32,   192,    26,  1084,
     192,   128,   689,   128,   192,   192,   577,   689,   328,   192,
     330,   192,   262,   192,   267,    11,   763,   424,   719,  5302,
     225,  5261,    58,  5263,    98,   409,   727,   347,   487,   349,
     231,   763,  5144,    26,    70,  4554,   763,   297,   763,  5279,
     489,   763,   629,   181,   763,    26,   764,   763,   368,   763,
    5279,   764,   138,   192,    90,   375,   764,   127,   276,   127,
     764,  1146,  1147,   763,   431,   142,   737,  1152,   762,   762,
     390,    93,   763,  5279,   644,   763,   211,  1162,   648,   764,
     400,   176,   300,    11,  1169,   222,  1171,   123,   769,   763,
    1175,  1176,     9,    10,   763,   415,   661,  4616,  5144,   111,
     764,   763,   725,   129,  5843,    93,   725,   199,   173,   173,
     328,   697,  5279,   590,   700,   176,   176,   470,   263,   689,
    1205,   368,   226,   709,   424,   570,   297,   122,   412,   763,
     763,   137,   483,  5373,   533,   600,    53,    54,    55,    56,
     123,    32,   763,    26,   669,   763,   282,   764,   282,   719,
     368,   763,   472,   763,  1239,   373,   769,   727,   562,  1244,
    1245,  1246,   482,   764,   762,    10,   733,  5279,   763,   762,
     762,  5411,   208,  5413,   763,  1260,   129,   762,  6086,   762,
     747,   129,    11,   640,    11,   360,  1271,   763,    11,   106,
     107,   108,   122,   129,   297,   764,   763,   764,  1283,   519,
     767,   768,   764,   764,   763,   372,   654,   129,   260,   147,
    5450,   407,   532,  5453,   764,   533,   282,   763,  1303,  5459,
     430,   344,   763,  5370,   763,   762,   282,   763,   351,    10,
    5459,   569,  6022,   267,  5474,   404,   282,    33,  1323,   762,
     157,   158,   278,   764,   367,  5474,   412,   769,    17,  5509,
     762,    67,   572,  5459,   377,   378,   379,   763,   578,   763,
     176,   764,   480,   180,   387,   182,   139,   762,  5474,    84,
    1355,    84,   762,   260,   297,   279,   763,   570,   763,  1364,
     588,   425,   588,   762,   762,  1370,   762,  1372,  1373,   635,
     763,  1376,  5459,   348,   762,   173,   763,   150,  5538,   300,
     186,  1386,   764,    26,    26,    33,    79,  5474,    36,  5538,
      26,   228,   768,   768,   768,    61,  5556,   637,    61,   193,
     763,    10,   669,   680,   644,   750,   751,   752,   753,   754,
     755,   756,   757,   695,   763,   176,   762,   129,   762,   762,
     109,   110,   686,   725,   129,  5585,   172,  5459,  5588,   321,
     279,    61,    11,   570,   674,   391,    26,   393,    26,    26,
     122,   763,  5474,    91,  5511,   413,   707,    95,  6158,   689,
     690,  5538,  5612,    33,   635,    33,   762,   762,   403,   403,
     415,  5621,   702,    92,   301,   302,   114,   762,    61,  5629,
    1475,   763,   574,  1478,   762,  1480,   762,   169,   721,   768,
     570,   129,   226,   768,   527,  1490,   762,    80,   570,   681,
     142,   320,  1497,  5653,   412,  5608,  1501,  1502,   541,   764,
     763,   763,  4941,   762,  5653,   762,  5538,   334,   646,    92,
     762,   407,  5672,    26,    26,   762,   109,   110,  5678,   314,
     762,   114,  1527,   176,   764,  1530,   176,  5653,   225,   764,
      63,  1536,   763,   193,   279,   465,   763,   412,   763,   707,
      75,  5120,    26,  5122,   192,  5124,   173,   635,   113,   233,
     762,   199,  1557,   764,  3282,  3956,   923,   394,  1264,    29,
    1925,  3587,  5124,  5120,  3438,  1222,  5653,  5459,    38,  5468,
    5122,  5457,  5538,  5456,  5459,  5583,  4113,  5655,  5814,  5297,
    1585,  6023,  5742,   626,  4035,  1351,  5023,  5747,   544,   545,
      60,  3439,   240,  4223,  5754,  5476,   189,   735,   641,  5932,
    5931,  3628,  1395,  3612,  4924,  5184,  4249,  2202,   818,  1783,
    2706,  3963,  3697,   942,  3673,  4780,   799,    87,  5197,  2870,
    4501,  5653,    92,  2292,  5784,  2293,   463,    97,   276,  5068,
    2295,  5744,  2294,  2219,   677,  2083,  5591,  5797,  5278,  1391,
    5438,   111,  4152,  3535,  4426,  5083,  4430,  4866,   691,  5199,
    5859,  5556,  5955,  6084,  2531,  5203,   126,   250,   251,   252,
    6041,  6086,  4017,   133,  4442,  5731,  4881,  5780,  2747,  4147,
    5830,  5976,  5455,  4705,  4992,  6011,  5794,   147,  5672,  4153,
    5784,  5005,   275,  1688,  3714,  5797,  5853,  5653,  2956,  3488,
    2143,   528,  1697,   530,  3796,  4382,  4385,  4377,   535,  6047,
     485,   485,   172,  1708,  6005,  5441,  6006,   300,  5887,  4152,
    5747,  2167,   401,  4702,  1719,  5754,  1980,  3419,   366,  5430,
    1236,  5515,  1368,  2861,  3415,  5848,   415,  5887,   417,  5324,
    1735,  5891,  2119,  2548,  2678,   328,  3687,   330,  3038,  1327,
    4284,  4072,  5520,  3811,   700,   215,  5813,  5055,  2809,  1324,
    4416,   221,   222,  5838,  5867,  5868,   349,  3473,   447,  5930,
    2044,  3144,   599,  3140,  5924,   235,  1716,  1772,  3845,  1774,
    1594,  1626,  3355,   462,  1774,   368,  3929,   344,  3349,  4902,
    4397,  5739,   375,  3343,   351,  5898,  6045,  5579,  1793,  4932,
    6046,  5312,  3229,  5953,  4058,  1800,  1801,   390,  5311,  3835,
     367,  5961,  5192,  1808,  1809,   642,   495,   400,  5708,  5333,
     377,   378,   379,  1818,  5188,  1600,  3913,  5232,  2790,  5310,
     387,  4048,   415,  2990,   513,  1536,   296,  1832,  1833,   485,
    3032,  1793,  4875,  1838,  1839,  1840,  1841,  1842,  1843,  1844,
    1845,  1846,  3514,  6003,  4528,  6005,  6006,  1852,  4492,   674,
     841,  2212,  5965,  5952,   671,  5968,  2648,  1858,  3338,   842,
    2649,   671,  1867,  1868,   334,  1870,  2700,  1322,   509,  6072,
    5255,  5244,  1970,  4287,  6082,  5489,  6110,  5665,  6151,   472,
    6157,  1016,  4441,  3930,  2671,   355,  3212,  1892,  6048,   482,
     942,  3313,  4464,   670,   731,    71,  6056,  2473,   670,  2593,
    2271,  3291,  6105,  1997,   593,   742,  3292,  1802,   668,  1155,
    3271,   600,  4165,  2856,  1532,  3675,  3430,   708,  5367,  4173,
    1272,   610,  3924,  4483,  6084,  3343,   519,  4905,   485,   485,
     485,   579,  6018,  6093,   623,    32,   112,    34,  2766,   532,
    6070,    -1,  5843,    -1,    -1,  1950,    -1,    -1,    -1,    -1,
      -1,  2013,    -1,    -1,    -1,  1960,    -1,    -1,    -1,   429,
     527,  1966,    -1,    -1,    61,   654,  1971,    -1,   657,    -1,
      -1,    -1,    -1,   149,   541,    -1,    -1,    -1,    -1,   572,
      -1,    -1,    -1,   672,  1989,   578,    -1,    -1,    -1,    -1,
      -1,    -1,  1997,  1998,  1999,  2000,  2001,  2002,  2003,  2004,
    6160,  2006,  5723,  5724,    -1,  5726,  5727,  5728,  5729,    -1,
      -1,    -1,   109,   110,     7,    -1,    -1,   114,    -1,    -1,
      -1,    -1,    -1,    -1,  5745,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   686,   136,
      -1,    -1,    15,    -1,   637,    18,    -1,    -1,    41,    -1,
      -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2074,
      63,    -1,    -1,    -1,   641,    -1,    -1,    -1,    -1,    -1,
      73,   674,    -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,
      -1,  2096,   189,    -1,    -1,    -1,   689,   690,   568,    -1,
      -1,     5,    -1,     7,     8,    98,    -1,    -1,    -1,   702,
     677,  2116,    -1,    86,    -1,    -1,    89,    -1,    -1,    -1,
      -1,   114,    -1,    -1,   691,    -1,   119,    31,    -1,    33,
      -1,   104,   105,    -1,    -1,    39,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2149,  5866,    -1,    -1,  5869,   142,
      -1,    -1,    -1,   250,   251,   252,  5877,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,   145,    -1,    -1,   768,    80,    -1,   275,  2184,
    2185,  5620,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,
     173,    -1,    -1,   300,    17,   109,   110,  2212,    -1,  2214,
     114,  2216,    -1,  2218,    -1,    -1,    -1,    -1,   211,    -1,
      -1,    -1,    -1,    -1,    -1,  2230,  2231,    -1,    -1,    -1,
      -1,   328,  2237,   330,    -1,    -1,   229,    -1,   142,  2244,
    2245,    -1,  2247,  2248,   237,    -1,    -1,   717,    -1,    -1,
     347,    -1,   349,    -1,    -1,    -1,    -1,  2262,    -1,    -1,
    2265,    -1,    -1,    -1,    -1,    -1,  2271,    -1,    -1,    -1,
      -1,   368,  2277,   177,    -1,    -1,   269,   181,   375,    -1,
      -1,  2286,    -1,    -1,  2289,   189,   279,   280,   192,   262,
     466,    -1,    -1,   390,    -1,    -1,   109,   110,   271,   272,
     273,    -1,    -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,
     214,    -1,    -1,    -1,  5893,    -1,    -1,    -1,   415,    -1,
     496,   497,    -1,   499,   500,   501,   502,   503,    -1,   505,
     506,   507,   508,   509,   510,   511,   512,    -1,   514,   515,
     516,    -1,    -1,    -1,    -1,    -1,   250,   251,   252,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   275,    -1,    -1,    -1,   472,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,    -1,    -1,    -1,   320,    -1,    -1,    -1,
     393,    -1,   519,    -1,   328,    -1,   330,    -1,   421,    -1,
      -1,    -1,  2437,   426,  5873,   532,   612,   613,  2443,    -1,
      -1,    -1,    -1,   436,    -1,   349,    -1,   260,    -1,    -1,
      -1,    -1,   356,    -1,  2459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,    -1,    -1,    -1,    -1,
      -1,   375,    -1,    -1,    -1,   572,    -1,    -1,    -1,    -1,
      -1,   578,    -1,    -1,    -1,    -1,   390,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   400,    -1,    -1,    -1,
     404,   405,    -1,    -1,    -1,    -1,    -1,   411,    -1,    -1,
      -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   423,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5976,   442,    -1,
     637,  2546,  2547,  2548,    -1,    -1,    -1,   644,    -1,    -1,
      -1,    -1,  2557,    -1,    -1,    -1,  2561,  2562,  2563,  2564,
    2565,  2566,    -1,  2568,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   674,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   401,    -1,
      -1,    -1,   689,   690,    -1,  2600,  2601,    -1,    -1,    -1,
    6039,   594,   415,    -1,   417,   702,    -1,    -1,  2613,    -1,
      -1,    -1,    -1,    -1,    -1,   519,    -1,    -1,    -1,    -1,
      -1,    -1,   615,    -1,    -1,    -1,    -1,   620,   532,    -1,
     534,    -1,    -1,    -1,   447,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2652,    -1,   462,
      -1,    -1,    -1,    -1,    -1,  2660,    -1,    -1,   651,    -1,
      29,    -1,    -1,  2668,    -1,   762,  2671,  2672,   572,    38,
      -1,  2676,  2677,  2678,   578,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   495,    -1,    -1,    -1,    -1,    16,    17,   682,
      -1,    60,    -1,    22,    23,    -1,  6135,  2702,    -1,    -1,
     513,   605,  6141,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   616,   617,   618,    -1,    -1,    -1,    87,    -1,
      -1,  2726,    -1,    92,   697,    -1,    -1,   700,    97,    58,
      -1,    -1,    -1,   637,    -1,    -1,   709,    -1,    -1,    -1,
     644,    70,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2756,    -1,  2758,  2759,    -1,    -1,   126,    -1,    61,
    2765,    90,    -1,  2768,   133,  2770,    -1,  2772,    -1,    -1,
     674,    -1,    -1,    -1,    -1,    -1,  2781,    -1,   147,    -1,
     593,    -1,  2787,    -1,    -1,   689,   690,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,   610,   702,    -1,
      -1,   705,    -1,   172,    -1,    -1,    -1,   109,   110,    -1,
     623,    -1,   114,    -1,   143,   144,    -1,   146,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   154,   155,   156,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   654,    -1,    -1,   657,   174,   215,    -1,    -1,    -1,
      -1,  2856,   221,   222,    -1,    -1,  2861,    -1,    -1,   672,
      -1,    -1,    -1,    -1,   768,    -1,   235,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   688,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    16,    17,    -1,    -1,    -1,
     239,    22,    23,    -1,    -1,  2920,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,   296,    -1,    -1,
      -1,  2936,    -1,    -1,    -1,   264,   265,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,   250,   251,
     252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
     289,   290,    -1,    -1,    -1,   334,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   275,    -1,    -1,  2981,    -1,    -1,    90,
      -1,    -1,    -1,    -1,    -1,  2990,   355,  2992,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   300,  3004,
      -1,  3006,  3007,    -1,    -1,    -1,    -1,   336,    -1,   338,
     339,    -1,   123,    -1,    -1,  3020,    -1,    -1,  3023,    -1,
      -1,    -1,    -1,    -1,    -1,   354,   328,    -1,   330,    -1,
      -1,    -1,   143,   144,    -1,   146,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   154,   155,   156,    -1,   349,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     429,    -1,   391,   174,   393,    -1,   368,    -1,    -1,  3074,
      -1,  3076,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   416,   390,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,   400,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   438,
      -1,    -1,    -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,
     449,   450,   233,    -1,    -1,    -1,    -1,    -1,   239,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   264,   265,   266,    -1,    -1,    -1,    -1,
      -1,   490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,   290,
     482,    -1,    -1,    -1,    -1,  3190,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   568,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   536,   537,   538,
      -1,    -1,    -1,    -1,    -1,   544,   545,   519,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   336,  3231,   338,   339,    -1,
     532,   560,   561,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3258,    -1,   584,   585,    -1,  3263,    -1,
      -1,    -1,    -1,  3268,    -1,    -1,  3271,  3272,  3273,    -1,
     572,    -1,    -1,    -1,   603,    -1,   578,    -1,  3283,    -1,
     391,    -1,   393,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   416,    -1,    -1,    -1,    -1,
    3315,    -1,    -1,    -1,    -1,    -1,    -1,   646,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   438,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,   449,   450,
      -1,    -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,  3354,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   694,    -1,    -1,   697,    -1,
     481,   700,   674,    -1,    -1,    -1,    -1,    -1,    -1,   490,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   689,   690,    -1,
      16,    17,    -1,    -1,   723,    -1,    22,    23,    -1,    -1,
     702,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   536,   537,   538,    29,    -1,
    3435,  3436,    58,   544,   545,    -1,    -1,    38,    -1,    -1,
      -1,  3446,    -1,  3448,    70,    -1,    -1,    -1,  3453,   560,
     561,    -1,  3457,    -1,    -1,    -1,    29,    -1,    -1,    60,
      -1,    -1,    -1,    -1,    90,    38,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   584,   585,    76,    -1,    78,    -1,    -1,
      -1,    -1,    -1,  3488,  3489,    -1,    87,    60,    -1,    -1,
      -1,    92,   603,    -1,    -1,    -1,    97,   123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     111,    -1,    -1,    -1,    87,    -1,    -1,   143,   144,    92,
     146,    -1,    -1,    -1,    97,   126,    -1,    -1,   154,   155,
     156,    -1,   133,    -1,  3539,    -1,    -1,    -1,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   147,    -1,   174,  3554,
      -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,
     133,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   172,    -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,   694,     6,    -1,   697,    -1,    -1,   700,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,   172,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
      32,    -1,   723,   239,   215,    -1,    -1,    -1,    40,    41,
     221,   222,    -1,    -1,    -1,    -1,  3631,    -1,    50,    -1,
      -1,   742,    -1,    -1,   235,    -1,    -1,    -1,   264,   265,
     266,    -1,   215,    65,    66,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   235,   289,   290,    -1,    -1,    -1,    -1,    -1,
    3675,    -1,    -1,    -1,    -1,  3680,  3681,  3682,  3683,  3684,
      -1,    -1,  3687,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,   114,   294,    -1,   296,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   128,    -1,    -1,    -1,
     336,    -1,   338,   339,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,    -1,    -1,    -1,    -1,   354,    -1,
      -1,    -1,    -1,   334,    -1,   308,    -1,    -1,    -1,    -1,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,
      -1,   334,    -1,    -1,    -1,   391,   188,   393,    -1,    -1,
      -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,   200,    -1,
      -1,    -1,   355,    -1,    -1,    -1,    -1,  3792,    -1,    -1,
     416,    -1,     5,    -1,     7,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    97,    -1,
      -1,   412,   438,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,   111,   449,   450,    -1,    39,    -1,   429,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   260,   412,
      -1,  3846,    -1,    -1,   133,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,  3859,   481,   429,  3862,   147,    -1,
      73,    -1,    -1,    -1,   490,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3880,  3881,  3882,  3883,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3897,  3898,    -1,    -1,   109,   110,    -1,    -1,
      -1,   114,    -1,    -1,   326,    -1,    -1,    -1,    -1,    -1,
     536,   537,   538,   335,    -1,    -1,    -1,    -1,   544,   545,
      -1,    -1,    -1,    -1,    -1,   347,   215,    -1,    -1,   142,
      -1,    -1,   221,   222,   560,   561,   358,    -1,    -1,    -1,
      -1,    -1,    -1,  3948,    -1,    -1,   235,    -1,    -1,  3954,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   584,   585,
     382,    -1,    -1,    -1,    -1,    -1,    -1,   568,   181,    -1,
      -1,    -1,    -1,  3978,    -1,    -1,   189,   603,    -1,    -1,
      -1,  3986,    -1,    -1,    -1,  3990,    -1,    -1,    -1,    -1,
      -1,    -1,   414,   415,    -1,   568,   418,    -1,   420,    -1,
      -1,   214,    -1,    -1,    -1,    -1,    -1,   296,    -1,  4014,
      -1,    -1,  4017,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,    -1,    -1,    -1,    -1,
      -1,   453,   454,    -1,  4039,    -1,    -1,   250,   251,   252,
      -1,    -1,    -1,  4048,  4049,   334,    -1,    -1,   470,    -1,
      -1,    -1,    32,    -1,    34,    -1,    -1,    -1,  4063,    -1,
      -1,    -1,   275,    -1,    -1,    -1,   355,    -1,   694,    -1,
     492,   697,    -1,    -1,   700,    -1,    -1,    -1,    -1,    -1,
      -1,    61,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,
      -1,   513,    -1,    -1,    -1,    -1,    -1,   723,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   328,   742,   330,    -1,    -1,
      -1,    -1,    -1,   412,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,   114,    -1,   349,    -1,    -1,    -1,
     429,    -1,    -1,    -1,    -1,    -1,   568,    -1,  4153,    -1,
      -1,    -1,    -1,    -1,    -1,   368,    -1,    -1,    -1,    -1,
     582,    -1,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   593,    -1,    -1,   596,   597,    -1,   390,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,    -1,   611,
      -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,   411,    -1,
      -1,    -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,  4218,    -1,    -1,    -1,    -1,  4223,    -1,
      -1,    -1,    -1,    -1,    -1,   647,    -1,    -1,    -1,   442,
      -1,    -1,   654,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4249,    -1,    -1,    -1,    -1,  4254,
     672,    -1,   674,    -1,    -1,    -1,    -1,    -1,    -1,   472,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4272,    -1,   482,
     250,   251,   252,    -1,    -1,    -1,    29,    -1,    29,   568,
      -1,    -1,    -1,    -1,    -1,    38,    -1,    38,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   275,    -1,    -1,    -1,    -1,
      -1,    -1,   724,    -1,    -1,    -1,   519,    60,   730,    60,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   532,
     300,   534,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    87,    -1,    87,    -1,    -1,    92,
      -1,    92,    -1,    -1,    97,    -1,    97,    -1,   328,    -1,
     330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,   572,
     111,    -1,    -1,    -1,    -1,   578,    -1,   347,  4373,   349,
      -1,    -1,    -1,   126,    -1,   126,    -1,    -1,    -1,    -1,
     133,    -1,   133,    -1,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,    -1,    -1,   147,   375,   147,    -1,  4403,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     390,  4416,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,
     400,   172,    -1,    -1,   637,  4430,    -1,    -1,    -1,    -1,
      -1,   644,    -1,    -1,    -1,   415,  4441,    -1,  4443,    -1,
      -1,    -1,  4447,  4448,  4449,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    -1,    -1,    -1,    -1,  4464,
    4465,   674,   215,    38,   215,    -1,    -1,    -1,   221,   222,
     221,   222,    -1,    -1,    -1,    -1,   689,   690,    -1,    -1,
      -1,    -1,   235,    -1,   235,    60,    -1,  4492,    -1,   702,
      -1,    -1,   472,    -1,    -1,    -1,    -1,    -1,  4503,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    92,    -1,    -1,
      -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    29,    -1,   519,
      -1,    -1,    -1,   296,    -1,   296,    38,    -1,    -1,  4554,
      -1,   126,   532,    -1,    -1,    -1,    -1,    -1,   133,    -1,
      -1,    -1,    -1,  4568,  4569,    -1,  4571,    -1,    60,    -1,
      -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   334,    -1,   334,    -1,    -1,    -1,    -1,  4593,    -1,
      -1,    -1,   572,    -1,    -1,    87,    -1,   172,   578,    -1,
      92,    -1,   355,    -1,   355,    97,    -1,    -1,    -1,    -1,
      -1,  4616,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,
      -1,    -1,    -1,  4628,    -1,  4630,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,
     215,   133,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,    -1,    -1,  4658,    -1,   147,    -1,   637,    -1,   412,
     235,   412,    -1,    -1,   644,  4670,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4680,   429,  4682,   429,    -1,
     172,    -1,  4687,  4688,    -1,    -1,    -1,    -1,  4693,    -1,
      -1,    -1,    -1,    -1,   674,  4700,    -1,    -1,    -1,    -1,
    4705,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   689,
     690,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4725,   296,   702,   215,    -1,  4730,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4759,    -1,    -1,    -1,    -1,   334,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   296,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   568,    -1,   568,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   412,    -1,    -1,
      -1,    -1,   334,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   429,    -1,    -1,    -1,    -1,    -1,
      -1,  4866,    -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,
    4875,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4924,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4932,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4941,   429,  4943,  4944,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4992,    -1,    -1,
      -1,    -1,    -1,   568,  4999,    -1,  5001,    -1,    -1,    -1,
      -1,  5006,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5016,    -1,    -1,    -1,    -1,    -1,    -1,  5023,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5064,
    5065,  5066,    -1,  5068,  5069,    -1,  5071,    -1,    -1,    -1,
    5075,  5076,    -1,    -1,  5079,    -1,   568,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5089,  5090,    -1,  5092,    -1,    -1,
      -1,    -1,    -1,  5098,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5201,    -1,   652,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   676,    -1,    -1,    -1,  5231,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5241,    -1,   692,    -1,
      -1,    -1,    -1,    -1,  5249,    -1,    -1,    -1,    -1,    -1,
    5255,    -1,    -1,  5258,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5267,    -1,    -1,    -1,  5271,  5272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5312,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5323,    -1,
      -1,    -1,  5327,    -1,    -1,    -1,    -1,    -1,  5333,    -1,
      -1,    -1,    -1,    -1,    -1,  5340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   798,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5363,    -1,
      -1,    -1,    -1,    -1,    -1,  5370,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5430,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5440,    -1,    -1,  5443,    -1,
      -1,   895,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5454,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   945,    -1,    -1,  5499,    -1,   950,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5511,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5529,  5530,   980,    -1,    -1,   983,
      -1,    -1,    -1,    -1,    -1,    -1,   990,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5555,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5568,    -1,  5570,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1028,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5620,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1079,  1080,  1081,  1082,    -1,
      -1,  1085,    -1,    -1,    -1,    -1,    -1,  1091,  5643,    -1,
    5645,  5646,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5700,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5763,    -1,
      -1,    -1,    -1,    -1,  5769,    -1,  5771,  5772,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5780,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1252,    -1,
      -1,  1255,    -1,    -1,    -1,  5810,    -1,    -1,  5813,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5848,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5859,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5873,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1338,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5898,    -1,    -1,    -1,  5902,  5903,    -1,
      -1,    -1,    -1,    -1,  5909,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1377,    -1,    -1,  1380,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5952,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5976,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5996,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  6016,    -1,    -1,    -1,  6020,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6039,    -1,    -1,    -1,    -1,    -1,
    6045,  6046,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6069,  6070,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1539,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1574,    -1,    -1,    -1,    -1,    -1,  6131,    -1,    -1,    -1,
    6135,    -1,    -1,  1587,  1588,    -1,  6141,    -1,    -1,  1593,
    6145,    -1,    -1,  1597,  1598,  1599,  6151,    -1,    -1,    -1,
      -1,    -1,  6157,    -1,  1608,  1609,  1610,    -1,    -1,    -1,
    1614,    -1,  1616,  1617,  1618,  1619,  1620,    -1,  1622,    -1,
      -1,  1625,  1626,    -1,    -1,    -1,    -1,    -1,    -1,  1633,
      -1,  1635,    -1,    -1,  1638,  1639,    -1,  1641,  1642,  1643,
      -1,  1645,  1646,  1647,    -1,    -1,    -1,    -1,  1652,    -1,
      -1,  1655,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1663,
    1664,    -1,  1666,  1667,  1668,    -1,    -1,  1671,  1672,  1673,
    1674,  1675,  1676,  1677,    -1,  1679,  1680,  1681,  1682,  1683,
    1684,    -1,  1686,  1687,    -1,  1689,  1690,  1691,  1692,  1693,
    1694,  1695,    -1,    -1,  1698,  1699,  1700,  1701,    -1,  1703,
    1704,  1705,    -1,  1707,    -1,  1709,    -1,  1711,    -1,    -1,
      -1,  1715,  1716,  1717,    -1,    -1,  1720,  1721,  1722,  1723,
    1724,    -1,  1726,    -1,    -1,    -1,    -1,    -1,    -1,  1733,
      -1,    -1,    -1,    -1,    -1,    -1,  1740,  1741,  1742,  1743,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1751,  1752,  1753,
      -1,  1755,  1756,  1757,  1758,  1759,  1760,    -1,  1762,  1763,
    1764,  1765,  1766,  1767,  1768,  1769,    -1,    -1,    -1,  1773,
      -1,    -1,    -1,    -1,  1778,    -1,    -1,    -1,    -1,    -1,
    1784,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1816,    -1,    -1,    -1,    -1,  1821,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1831,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1862,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1899,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1924,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1949,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2059,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2197,  2198,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2295,    -1,  2297,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2305,  2306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2366,  2367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2391,  2392,  2393,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2405,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2458,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2469,    -1,    -1,  2472,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2491,    -1,    -1,
      -1,    -1,    -1,    -1,  2498,    -1,    -1,  2501,    -1,  2503,
      -1,    -1,    -1,    -1,    -1,  2509,    -1,  2511,  2512,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2535,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2550,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2567,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2590,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2612,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2630,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2691,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2704,    -1,  2706,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2799,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2811,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2865,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2994,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3066,    -1,    -1,  3069,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3078,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3086,    -1,  3088,    -1,  3090,    -1,  3092,  3093,
    3094,  3095,  3096,  3097,    -1,  3099,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3107,    -1,  3109,    -1,    -1,  3112,  3113,
    3114,  3115,    -1,    -1,  3118,  3119,    -1,    -1,  3122,    -1,
    3124,    -1,  3126,    -1,  3128,    -1,    -1,    -1,  3132,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3140,    -1,  3142,    -1,
    3144,  3145,  3146,  3147,  3148,    -1,    -1,  3151,  3152,  3153,
      -1,  3155,    -1,    -1,  3158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3171,    -1,    -1,
      -1,    -1,  3176,    -1,    -1,  3179,    -1,  3181,  3182,  3183,
      -1,    -1,  3186,    -1,    -1,    -1,    -1,    -1,  3192,    -1,
      -1,    -1,    -1,  3197,    -1,    -1,    -1,   652,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3213,
      -1,    -1,    -1,    -1,    -1,  3219,    -1,    -1,  3222,    -1,
      -1,   676,    -1,    -1,  3228,    -1,    -1,    -1,    -1,    -1,
      -1,  3235,  3236,  3237,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3254,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3311,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3327,    -1,    -1,  3330,  3331,  3332,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   798,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     895,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3463,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3477,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   950,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   980,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   990,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3561,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1082,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3650,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3672,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3695,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3707,    -1,    -1,  3710,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3733,
    3734,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3757,    -1,  3759,    -1,  3761,    -1,  3763,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3785,    -1,    -1,    -1,    -1,    -1,  3791,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1252,    -1,    -1,
      -1,    -1,  3806,  3807,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3826,    -1,    -1,    -1,    -1,  3831,    -1,    -1,
      -1,    -1,    -1,  3837,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3847,    -1,  3849,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3884,  3885,    -1,  1338,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3899,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3913,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1377,    -1,    -1,  1380,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3956,    -1,    -1,    -1,    -1,    -1,    -1,  3963,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4058,    -1,    -1,    -1,    -1,    -1,
      -1,  4065,    -1,    -1,    -1,  4069,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1539,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1574,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1593,    -1,
      -1,    -1,  1597,    -1,  1599,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1608,  1609,    -1,    -1,    -1,    -1,  1614,
      -1,  1616,  1617,  1618,  1619,  1620,    -1,  1622,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1633,    -1,
    1635,    -1,    -1,  1638,  1639,    -1,  1641,  1642,    -1,    -1,
    1645,  1646,  1647,    -1,    -1,    -1,    -1,  1652,    -1,    -1,
    1655,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1663,  1664,
      -1,  1666,    -1,  1668,    -1,    -1,  1671,  1672,  1673,  1674,
    1675,  1676,  1677,    -1,  1679,  1680,  1681,  1682,  1683,    -1,
      -1,  1686,  1687,    -1,    -1,  1690,  1691,  1692,    -1,    -1,
      -1,    -1,    -1,  1698,  1699,  1700,    -1,    -1,  1703,  1704,
    1705,    -1,  1707,    -1,  1709,    -1,  1711,    -1,    -1,    -1,
    1715,  1716,  1717,    -1,    -1,  1720,  1721,  1722,  1723,  1724,
      -1,  1726,    -1,    -1,    -1,    -1,    -1,    -1,  1733,    -1,
      -1,    -1,    -1,    -1,    -1,  1740,  1741,  1742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4319,  4320,    -1,  4322,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4331,    -1,  4333,
      -1,    -1,  4336,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4349,    -1,  4351,    -1,  4353,
      -1,  4355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1816,    -1,    -1,  4368,  4369,  1821,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1831,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4408,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1899,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1924,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4494,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4528,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4620,    -1,    -1,    -1,
      -1,    -1,    -1,  4627,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4637,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4722,  4723,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2197,  2198,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2295,    -1,  2297,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2305,  2306,    -1,    -1,    -1,    -1,  4860,    -1,  4862,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4876,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4893,
    4894,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4912,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2391,  2392,  2393,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5032,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2491,    -1,    -1,    -1,
      -1,  5045,    -1,    -1,  5048,    -1,  2501,    -1,  2503,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2535,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2550,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5156,    -1,    -1,  5159,    -1,  2612,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5188,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2691,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5263,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2799,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2811,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5411,    -1,  5413,
    2865,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5540,  5541,    -1,  2994,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5556,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3066,    -1,    -1,  3069,    -1,    -1,  5621,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3086,    -1,    -1,    -1,  3090,    -1,  3092,  3093,  3094,
    3095,  3096,  3097,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3107,    -1,  3109,    -1,    -1,  3112,  3113,  3114,
    3115,    -1,    -1,  3118,  3119,    -1,    -1,  3122,  5672,  3124,
      -1,  3126,    -1,  3128,  5678,    -1,    -1,  3132,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3140,    -1,  3142,    -1,  3144,
      -1,  3146,  3147,  3148,    -1,    -1,  3151,  3152,  3153,    -1,
    3155,    -1,    -1,  3158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3171,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3179,    -1,  3181,  3182,  3183,    -1,
      -1,  3186,    -1,    -1,    -1,    -1,    -1,  3192,    -1,    -1,
      -1,    -1,  3197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3213,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3228,    -1,    -1,    -1,    -1,    -1,    -1,
    5784,    -1,  3237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5830,    -1,    -1,  3284,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3311,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5953,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5961,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3463,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6084,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3561,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  6160,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3672,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3695,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3707,    -1,    -1,  3710,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3733,  3734,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3757,    -1,  3759,    -1,  3761,    -1,  3763,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3785,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3806,  3807,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3837,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3849,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3884,
    3885,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3899,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3956,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4058,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4069,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4319,  4320,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4331,    -1,  4333,    -1,
      -1,  4336,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4349,    -1,  4351,    -1,  4353,    -1,
    4355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4368,  4369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4494,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4528,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4620,    -1,    -1,    -1,    -1,
      -1,    -1,  4627,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4637,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4722,  4723,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4860,    -1,  4862,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4876,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4893,  4894,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4912,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5032,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5048,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5159,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5188,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5263,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5411,    -1,  5413,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5678,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     6,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5784,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,
     104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5830,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,
      -1,    -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,
     164,    -1,    -1,   167,   168,   169,    -1,   171,   172,   173,
      -1,   175,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
     194,   195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,
     204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,  5953,   253,
     254,    -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,
     284,   285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,  6160,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,     6,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,
     150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,
      -1,   161,    -1,    -1,   164,    -1,    -1,   167,    -1,   169,
      -1,   171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,
      -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    25,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   132,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,    -1,
      -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,    -1,
      -1,   167,   168,   169,    -1,   171,   172,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,   195,
     196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,    -1,
     256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,   268,    -1,   270,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,   285,
      -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,
     102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   150,   151,
      -1,   153,    -1,    -1,    -1,    -1,    -1,   159,    -1,   161,
      -1,    -1,   164,    -1,    -1,   167,   168,   169,    -1,   171,
     172,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   194,   195,   196,   197,    -1,    -1,    -1,    -1,
      -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,
      -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   283,   284,   285,    -1,    -1,    -1,    -1,    -1,   291,
      -1,   293,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,
      -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,
      -1,    -1,   150,   151,    -1,   153,    -1,    -1,    -1,    -1,
      -1,   159,    -1,   161,    -1,    -1,   164,    -1,    -1,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,   194,   195,   196,   197,
      -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,
      -1,    -1,    -1,    -1,    -1,   253,   254,    -1,   256,   257,
     258,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   270,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   283,   284,   285,    -1,    -1,
      -1,    -1,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      94,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,
     104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,
      -1,    -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,
     164,    -1,    -1,   167,   168,   169,    -1,   171,   172,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
     194,   195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,
     204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,   253,
     254,    -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,
     284,   285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,
     100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,
     150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,
      -1,   161,    -1,    -1,   164,    -1,    -1,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,
      -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,   113,    -1,    -1,
      -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,    -1,
      -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,    -1,
      -1,   167,   168,   169,    -1,   171,   172,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,   195,
     196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,    -1,
     256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,   285,
      -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,
     102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   150,   151,
      -1,   153,    -1,    -1,    -1,    -1,    -1,   159,    -1,   161,
      -1,    -1,   164,    -1,    -1,   167,   168,   169,    -1,   171,
     172,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   194,   195,   196,   197,    -1,    -1,    -1,    -1,
      -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,
      -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   283,   284,   285,    -1,    -1,    -1,    -1,    -1,   291,
      -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,
      -1,    -1,   150,   151,    -1,   153,    -1,    -1,    -1,    -1,
      -1,   159,    -1,   161,    -1,    -1,   164,    -1,    -1,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,   194,   195,   196,   197,
      -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,
      -1,    -1,    -1,    -1,    -1,   253,   254,    -1,   256,   257,
     258,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   270,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   283,   284,   285,    -1,    -1,
      -1,    -1,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,
     104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,
      -1,    -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,
     164,    -1,    -1,   167,   168,   169,    -1,   171,   172,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
     194,   195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,
     204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,   253,
     254,    -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,
     284,   285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,
     150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,
      -1,   161,    -1,    -1,   164,    -1,    -1,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,
      -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,    -1,
      -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,    -1,
      -1,   167,   168,   169,    -1,   171,   172,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,   195,
     196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,    -1,
     256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,   285,
      -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,
     102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   150,   151,
     152,   153,    -1,    -1,    -1,    -1,    -1,   159,    -1,   161,
      -1,    -1,   164,    -1,    -1,   167,    -1,   169,    -1,   171,
     172,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   194,   195,   196,   197,    -1,    -1,    -1,    -1,
      -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,
      -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   283,   284,   285,    -1,    -1,    -1,    -1,    -1,   291,
      -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,
      -1,    -1,   150,   151,    -1,   153,    -1,    -1,    -1,    -1,
      -1,   159,    -1,   161,    -1,    -1,   164,    -1,    -1,   167,
      -1,   169,    -1,   171,   172,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,   194,   195,   196,   197,
      -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,
      -1,    -1,    -1,    -1,    -1,   253,   254,    -1,   256,   257,
     258,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   270,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   283,   284,   285,    -1,    -1,
      -1,    -1,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    17,    18,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,
      44,    45,    46,    -1,    48,    49,    -1,    51,    52,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      84,    85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,
     104,   105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,
      -1,    -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,
     164,    -1,    -1,   167,    -1,   169,    -1,   171,   172,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
     194,   195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,
     204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,   253,
     254,    -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,
     284,   285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,
      -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,   765,   766,    -1,    -1,   769,   770,    17,    18,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    -1,    43,    44,    45,    46,    -1,    48,    49,
      -1,    51,    52,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    85,    86,    -1,    88,    89,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     100,   101,   102,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,
     150,   151,    -1,   153,    -1,    -1,    -1,    -1,    -1,   159,
      -1,   161,    -1,    -1,   164,    -1,    -1,   167,    -1,   169,
      -1,   171,   172,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,   194,   195,   196,   197,    -1,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,   253,   254,    -1,   256,   257,   258,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   283,   284,   285,    -1,    -1,    -1,    -1,
      -1,   291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   752,   753,    -1,    -1,    -1,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,   765,   766,    -1,    -1,   769,
     770,    17,    18,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,    45,
      46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
      86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,   105,
      -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,    -1,
      -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,    -1,
      -1,   167,    -1,   169,    -1,   171,   172,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,   195,
     196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,    -1,
     256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,   285,
      -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,    -1,
      -1,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,   765,
     766,    -1,    -1,   769,   770,    17,    18,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      -1,    43,    44,    45,    46,    -1,    48,    49,    -1,    51,
      52,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    61,
      -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    84,    85,    86,    -1,    88,    89,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,   101,
     102,    -1,   104,   105,    -1,    -1,    -1,   109,   110,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,   121,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   150,   151,
      -1,   153,    -1,    -1,    -1,    -1,    -1,   159,    -1,   161,
      -1,    -1,   164,    -1,    -1,   167,    -1,   169,    -1,   171,
     172,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   194,   195,   196,   197,    -1,    -1,    -1,    -1,
      -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,
      -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   283,   284,   285,    -1,    -1,    -1,    -1,    -1,   291,
      -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     752,   753,    -1,    -1,    -1,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,   765,   766,    -1,    -1,   769,   770,    17,
      18,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    -1,    43,    44,    45,    46,    -1,
      48,    49,    -1,    51,    52,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    86,    -1,
      88,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   100,   101,   102,    -1,   104,   105,    -1,    -1,
      -1,   109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   119,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,
      -1,    -1,   150,   151,    -1,   153,    -1,    -1,    -1,    -1,
      -1,   159,    -1,   161,    -1,    -1,   164,    -1,    -1,   167,
      -1,   169,    -1,   171,   172,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,   194,   195,   196,   197,
      -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,
      -1,    -1,    -1,    -1,    -1,   253,   254,    -1,   256,   257,
     258,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   270,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   283,   284,   285,    -1,    -1,
      -1,    -1,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   752,   753,    -1,    -1,    -1,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,   765,   766,    -1,
      -1,   769,   770,    18,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    -1,    43,    44,
      45,    46,    -1,    48,    49,    -1,    51,    52,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    61,    -1,    -1,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      85,    86,    -1,    88,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,   101,   102,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   119,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,   150,   151,    -1,   153,    -1,
      -1,    -1,    -1,    -1,   159,    -1,   161,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   169,    -1,   171,   172,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   194,
     195,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,   253,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,   284,
     285,    -1,    -1,    -1,    -1,    -1,   291,    -1,   293,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    18,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,   753,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,   766,    -1,    -1,   769,   770,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   164,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    24,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   769,   770,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    24,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    32,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,   769,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    32,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    -1,   770,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,     6,     7,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,   114,    -1,    -1,    -1,    -1,   119,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
     142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,     6,     7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   211,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,     6,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,     6,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,     7,     8,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,    -1,
      29,    -1,    31,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    60,    -1,    -1,    63,    -1,    65,    66,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   140,    -1,   142,    -1,    -1,    -1,    -1,   147,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,   192,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   201,   202,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   213,   214,   215,   216,    -1,   218,
      -1,    -1,    -1,    -1,   223,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,   237,   238,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   277,    -1,
     279,    -1,   281,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   296,   297,    -1,
      -1,    -1,    -1,    -1,    -1,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,    -1,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,    -1,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,    -1,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,    -1,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,     7,     8,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    27,    -1,    29,    -1,    31,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    -1,
      63,    -1,    65,    66,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,
      -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   140,    -1,   142,
      -1,    -1,    -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,   192,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,   202,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     213,   214,   215,   216,    -1,   218,    -1,    -1,    -1,    -1,
     223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,    -1,    -1,   237,   238,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   277,    -1,   279,    -1,   281,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   296,   297,    -1,    -1,    -1,    -1,    -1,
      -1,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,    -1,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,    -1,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,    -1,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
       7,     8,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      27,    -1,    -1,    -1,    31,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    65,    66,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   140,    -1,   142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,   192,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   201,   202,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   213,   214,    -1,   216,
      -1,   218,    -1,    -1,    -1,    -1,   223,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
     237,   238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     277,    -1,   279,    -1,   281,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     297,    -1,    -1,    -1,    -1,    -1,    -1,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,    -1,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,    -1,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,    -1,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
      -1,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    35,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    36,   739,   740,   741,   742,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   129,    -1,    -1,
      -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   240,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    36,   739,   740,   741,
     742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    11,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    17,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,    16,
      17,    -1,    -1,   747,    -1,    22,    23,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    58,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    90,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   143,   144,    -1,   146,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   154,   155,   156,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
      -1,    -1,   239,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,   265,   266,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   289,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,    -1,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,    -1,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,    -1,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,    -1,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,    -1,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,    16,    17,    -1,    -1,
      -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   143,   144,    -1,   146,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   154,   155,   156,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,   239,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   264,   265,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,    -1,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,    -1,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,    -1,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,    -1,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    16,    17,    -1,    -1,    -1,    -1,    22,
      23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     143,   144,    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   154,   155,   156,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,    -1,    -1,    -1,    -1,   239,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   264,   265,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   289,   290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,    -1,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,    -1,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,    -1,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,    -1,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,    17,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      17,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    17,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    18,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    24,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      45,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,    -1,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    37,    38,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,    45,    46,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    45,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      46,   739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    47,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,    57,    -1,
      -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,    57,    -1,    -1,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
      57,    -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    61,   739,   740,   741,   742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    61,   739,
     740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    61,   739,   740,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    61,   739,   740,   741,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    61,
     739,   740,   741,   742,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    61,   739,   740,   741,
     742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    61,   739,   740,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,    -1,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,    -1,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,    -1,
      -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   763,
      -1,    -1,    -1,    -1,    -1,   769,   770,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,   770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,   770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,   770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   770,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   763,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   122,    -1,    -1,    -1,    -1,    -1,   762,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,    -1,   739,   740,   741,   742,   109,
     110,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,
      -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741,   742,   109,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,    -1,   739,   740,   741,
     742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   769,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
      -1,   739,   740,   741,   742,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   104,   739,   740,   741,   742,   109,
     110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   167,   168,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   183,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,    -1,   739,
     740,   741,   742,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   753,    -1,    -1,    -1,    -1,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    94,   739,   740,
     741,   742,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   754,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   754,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,   747,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   243,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   199,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     199,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,    -1,   739,   740,   741,   742,
     109,   110,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,    -1,
     739,   740,   741,   742,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,   734,
     735,   736,   737,    -1,   739,   740,   741,   742,   109,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,    -1,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,    -1,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,    -1,   739,   740,
     741,   742,   109,   110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,    -1,   441,    -1,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,    -1,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,    -1,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
      -1,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,    -1,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,    -1,   632,   633,   634,   635,   636,
     637,   638,    -1,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,    -1,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,    -1,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,    -1,   739,   740,   741,   742,   109,   110,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   305,   306,   307,    -1,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
      -1,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,    -1,   336,   337,   338,   339,   340,    -1,    -1,
     343,   344,   345,   346,    -1,    -1,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,   360,    -1,    -1,
      -1,    -1,    -1,    -1,   367,    -1,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,    -1,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,    -1,    -1,    -1,    -1,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,    -1,   456,   457,    -1,    -1,   460,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,    -1,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   109,   110,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,   580,   581,   582,
     583,   584,   585,    -1,    -1,    -1,    -1,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,    -1,   617,    -1,   619,   620,    -1,   622,
     623,    -1,   625,   626,   627,   628,   629,   630,    -1,   632,
     633,   634,   635,   636,   637,   638,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,   649,   650,    -1,    -1,
     653,    -1,    -1,   656,   657,   658,    -1,   660,    -1,   662,
     663,   664,   665,    -1,   667,   668,   669,    -1,   671,   672,
      -1,   674,    -1,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,    -1,   697,   698,   699,   700,   701,   702,
     703,   704,    -1,   706,   707,   708,    -1,   710,   711,   712,
     713,    -1,    -1,   716,   717,    -1,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,   736,    -1,    -1,   739,    -1,   741,   742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   305,   306,   307,    -1,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,    -1,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,    -1,   336,   337,   338,   339,   340,    -1,    -1,   343,
     344,   345,   346,    -1,    -1,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,   360,    -1,    -1,    -1,
      -1,    -1,    -1,   367,    -1,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,    -1,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
      -1,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,    -1,    -1,    -1,    -1,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,    -1,   456,   457,    -1,    -1,   460,    -1,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,   480,   481,   482,    -1,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
      -1,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   109,   110,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,   580,   581,   582,   583,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,    -1,   617,    -1,   619,   620,    -1,   622,   623,
      -1,   625,   626,   627,   628,   629,   630,    -1,   632,   633,
     634,   635,   636,   637,   638,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,   649,   650,    -1,    -1,   653,
      -1,    -1,   656,   657,   658,    -1,   660,    -1,   662,   663,
     664,   665,    -1,   667,   668,   669,    -1,   671,   672,    -1,
     674,    -1,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,    -1,   697,   698,   699,   700,   701,   702,   703,
     704,    -1,   706,   707,   708,    -1,   710,   711,   712,   713,
      -1,    -1,   716,   717,    -1,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,   736,    -1,    -1,   739,    -1,   741,   742,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     305,   306,   307,    -1,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,    -1,   324,
     325,   326,   327,   328,   329,   330,   331,    -1,    -1,    -1,
      -1,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
     345,   346,    -1,    -1,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,   360,    -1,    -1,    -1,    -1,
      -1,    -1,   367,    -1,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,    -1,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,    -1,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,    -1,    -1,    -1,    -1,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
      -1,   456,   457,    -1,    -1,   460,    -1,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,    -1,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   109,   110,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,   580,   581,   582,   583,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,    -1,   617,    -1,   619,   620,    -1,   622,   623,    -1,
     625,   626,   627,   628,   629,   630,    -1,   632,   633,   634,
     635,   636,   637,   638,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,   649,   650,    -1,    -1,   653,    -1,
      -1,   656,   657,   658,   200,   660,    -1,   662,   663,   664,
     665,    -1,   667,   668,   669,    -1,   671,   672,    -1,   674,
      -1,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,    -1,   697,   698,   699,   700,   701,   702,   703,   704,
      -1,   706,   707,   708,    -1,   710,   711,   712,   713,    -1,
      -1,   716,   717,    -1,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,   736,    -1,    -1,   739,    -1,   741,   742,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,    -1,   335,
      -1,   337,    -1,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,    -1,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,    -1,   394,   395,
     396,   397,   398,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,   448,    -1,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,    -1,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,    -1,    -1,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,    -1,    -1,    -1,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,    -1,    -1,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,    -1,    -1,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,    -1,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
      -1,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,    -1,   695,
     696,    -1,   698,   699,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,    -1,    -1,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,    -1,   739,   740,   741
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     7,     8,    27,    29,    31,    33,    41,    60,    63,
      65,    66,    73,    80,    92,    98,   109,   110,   111,   119,
     130,   140,   142,   147,   177,   191,   192,   201,   202,   213,
     214,   215,   216,   218,   223,   233,   237,   238,   277,   279,
     281,   296,   297,   304,   305,   306,   307,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   348,   349,   350,   351,   352,
     353,   354,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     441,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     739,   740,   741,   742,   772,   775,   776,   777,   778,   779,
     782,   789,   791,   804,   875,   927,   928,   935,   936,   952,
     953,   988,  1009,  1040,  1105,  1167,  1217,  1318,  1365,  1368,
    1378,  1383,  1389,  1402,  1405,  1411,  1414,  1419,  1426,  1438,
    1688,  1690,  1702,  1705,  1735,  1743,  1757,  1766,  1780,  1784,
    1785,  1789,  1803,  1811,  1815,  1820,  1821,  1822,  1854,  1855,
    1874,  1876,  1884,  1898,  1899,  1902,  1904,  1905,  1906,  1907,
    1911,  1941,  1948,  1950,  1957,  1960,  1997,  1999,  2004,  2005,
    2006,  2007,  2065,  2074,  2075,  2076,    49,   111,   200,   320,
     398,   446,   494,   644,   648,   689,  1319,  1700,  2032,  2033,
    2034,  2035,   170,   443,   492,  1413,  1787,   308,   334,   335,
     342,   347,   349,   355,   370,   380,   395,   407,   412,   426,
     439,   440,   446,   452,   455,   458,   473,   483,   554,   568,
     587,   589,   618,   621,   631,   639,   651,   670,   673,   705,
     715,   733,   740,   863,  1876,  1883,  1893,  1899,  1900,  1901,
    1902,  1903,  1904,  1905,  1906,   989,   513,  1406,   182,   494,
     689,  1011,  1744,    49,   114,   188,   200,   269,   421,   446,
     494,   630,   648,   689,   692,   719,   727,  1701,  1043,   862,
     954,  1703,  1816,   114,   390,   741,  1827,   260,   688,  1944,
    1041,  1413,  1218,  1106,  1812,   233,   243,   924,   929,   931,
    1883,   639,   719,  1944,  1045,  1706,   929,   930,   862,   671,
    1908,  1767,   929,  1949,  1736,  1883,  1042,   209,  1857,  1998,
     167,   168,  1008,  1495,   262,   770,  1877,   114,  1944,  1883,
     736,  2001,  1689,   467,  1883,  1413,   385,   937,   769,  1871,
    1873,  1883,   790,   583,   661,  1883,  1413,  1804,  2001,  1883,
       6,   654,   701,     6,   654,  1758,   583,   661,   333,   334,
     370,   412,   589,   606,   631,   670,  2068,     0,    80,   773,
     589,    49,    95,   240,   276,   630,   719,   819,  1297,  1298,
    1299,  1701,  2032,  2033,  2034,  2035,   432,   443,   576,  1786,
    1787,  1871,  1883,   229,   286,   762,  1439,  2020,   234,   769,
    1333,  1883,    84,   863,   747,   747,   863,    99,  1700,   135,
    1877,  1883,  1888,  1048,  1049,  1052,  1075,  1883,  1357,  1358,
     719,   247,  1482,  2036,  2037,  2032,   747,  1944,  1438,  1702,
    1705,  1735,  1743,  1783,   876,   769,   294,   990,   991,   994,
     998,   802,   803,  1877,   727,  1403,  1944,   216,    99,  1050,
    1075,    37,    38,    47,   428,   429,   733,   900,   902,   903,
     910,   911,   912,   914,   920,   947,   948,  1876,  1884,  1896,
    1899,  1900,  1901,  1902,  1904,  1906,   113,   148,   460,   601,
    1746,  1755,  1756,  1700,   111,  1699,    24,  1700,  1700,  1700,
    1700,  1700,    99,  1700,  1700,  1075,  1700,  1700,   644,  1944,
    1025,  1884,     6,     7,    41,    46,    63,    73,    98,   114,
     119,   142,   211,   229,   237,   269,   279,   280,   421,   426,
     436,   594,   598,   615,   620,   651,   682,  1888,  1961,  1965,
    1966,  1968,  1970,  1971,   983,   984,   148,   399,   459,  1708,
     456,   660,  1817,   122,  1823,  1942,    38,    87,    97,   126,
     133,   172,   221,   222,   235,   355,   429,   568,   896,   950,
     951,   953,   958,   959,   960,   961,   965,   966,   967,   968,
     969,   978,   979,   980,   981,   988,  1003,  1004,  1009,  1027,
    1033,  1040,  1886,  1887,  1944,    17,    18,    19,    20,    21,
      29,    30,    32,    39,    40,    43,    44,    45,    46,    48,
      49,    51,    52,    57,    61,    64,    84,    85,    86,    88,
      89,   100,   101,   102,   104,   105,   109,   110,   111,   119,
     121,   134,   145,   150,   151,   153,   159,   161,   164,   167,
     168,   169,   171,   172,   173,   175,   190,   194,   195,   196,
     197,   204,   215,   216,   224,   227,   247,   253,   254,   256,
     257,   258,   262,   270,   271,   272,   273,   283,   284,   285,
     291,   293,   316,   323,   331,   347,   356,   358,   359,   361,
     362,   363,   364,   365,   380,   392,   393,   394,   396,   397,
     443,   449,   451,   463,   485,   486,   490,   528,   530,   535,
     536,   537,   538,   547,   548,   564,   578,   584,   585,   592,
     599,   629,   635,   636,   642,   649,   678,   697,   698,   699,
     700,   704,   705,   719,   721,   731,   732,   734,   742,   752,
     753,   758,   762,   765,   766,   769,   770,  1489,  1490,  1491,
    1492,  1496,  1508,  1510,  1511,  1512,  1513,  1514,  1515,  1516,
    1517,  1518,  1519,  1520,  1528,  1532,  1533,  1534,  1535,  1536,
    1538,  1541,  1846,  1849,  1851,  1852,  1853,  1868,  1875,  1876,
    1883,  1893,    26,  1107,    17,   513,  1772,  1813,   344,   351,
     367,   377,   378,   379,   387,   527,   541,   641,   677,   691,
     932,   934,   721,   925,   931,  1883,   862,  1415,   896,  1030,
     148,   399,  1709,  1742,   931,     6,   315,   598,  1958,  1959,
    1966,  1968,  1909,    32,    61,   347,   446,   453,   492,   542,
     578,   630,   647,   701,   733,   770,  1261,  1876,  1881,  1883,
    1897,  1899,  1900,  1901,  1903,  1904,  1905,  1906,  1916,  1928,
    1932,     6,    40,    41,    50,   114,   128,   188,   200,   260,
     326,   335,   347,   358,   382,   415,   418,   420,   445,   446,
     453,   454,   470,   492,   513,   568,   582,   593,   596,   597,
     611,   647,   654,   674,   730,  1261,  1296,  1768,  1772,  1773,
    1775,  1784,  1876,  1929,   931,  1944,  1742,  1028,  1489,  1856,
    2001,  1010,   325,  1888,  1420,  1379,   769,    10,  2002,  1489,
    1561,   780,   781,   783,  1790,   402,  1883,   568,   206,   355,
     769,  1888,  1883,  1877,    94,  1384,   513,   600,   654,  1805,
    1806,   267,  2002,   655,   802,   206,   297,  1369,  1370,  1371,
     655,   802,   260,  1761,  1883,  1877,    18,   104,   105,   262,
    1847,  1848,  1878,  2067,  2067,  2067,   443,  2066,  2067,  2067,
     768,  1883,   111,  1166,  1166,  1166,   648,   846,   114,   114,
     114,   260,   644,   188,   200,   269,   421,  2036,   319,   446,
     446,  2032,  1782,  1781,  1464,  1465,  2021,   762,  1441,  1442,
    1443,    83,   120,   275,  2008,  2010,  2014,  2015,  1912,  1883,
    1321,   718,  1322,   526,   693,   711,    45,  1888,  1889,  1890,
    1965,  1323,  1054,  1076,  1883,  1328,  1327,     5,    31,    73,
     168,   207,   604,  1077,   260,   113,   567,  1359,  1360,  1361,
     862,   643,   421,   727,  2036,  1888,  1390,   762,   877,  1883,
     999,    76,  1001,  1489,   998,   267,  1404,  1694,  1695,  1871,
    1053,  1076,     5,  1884,  1012,   901,   912,   914,    16,    17,
      22,    23,    32,    58,    70,    90,   123,   143,   144,   146,
     154,   155,   156,   174,   208,   233,   239,   264,   265,   266,
     289,   290,   336,   338,   339,   354,   391,   393,   416,   438,
     449,   450,   481,   490,   536,   537,   538,   544,   545,   560,
     561,   584,   585,   603,   635,   694,   697,   700,   723,   733,
     742,   905,   947,  1223,  1225,  1227,  1229,  1230,  1231,  1232,
    1233,  1234,  1235,  1236,  1237,  1238,  1259,  1876,  1899,  1902,
    1904,  1906,   768,   768,   455,   764,    35,   308,    94,  1747,
      94,  1747,  1748,  1752,  1753,  1883,  1755,  1883,    84,  1883,
    1700,   863,   863,   863,   863,  1883,  1076,   862,  1888,  1086,
    1773,   862,  1692,  1700,  1700,  1044,   124,  1026,   593,  1969,
     633,   633,   689,   692,   719,   727,   762,  1488,   460,   570,
    1973,   688,  1975,  1972,    50,   727,  1974,   176,   352,   654,
     267,   176,   764,   412,  1489,   113,  1356,   375,   600,  1818,
     342,   148,   374,  1829,  1871,  1945,  1946,   294,   373,   446,
    1876,  1885,  1894,  1902,  1904,  1905,  1906,    94,   547,  1883,
    1885,  1885,  1885,  1885,  1883,   294,  1885,  1883,   412,   950,
     768,   776,   955,  1884,   962,   982,  1883,    60,   334,    92,
     147,   215,   296,   951,  1887,  1412,   121,   752,   753,  1513,
     762,   762,   762,   294,  1489,  1564,  1565,   762,   762,   762,
     762,   762,  1488,  1488,  1488,   762,  1487,   762,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     762,  1489,   762,   109,   110,   359,   762,  1562,  1563,  1868,
    1875,  1893,   762,   762,   762,   762,  1489,  1487,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   193,
     762,   762,   762,   762,  1487,   762,   262,  1848,  1488,  1487,
    1487,   762,   762,   762,   762,   762,   762,   762,   762,   173,
    1875,   762,   762,   762,   762,   762,   762,   762,   262,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   762,   762,   721,   762,   762,   762,
     762,   762,   721,   762,   762,   762,   762,   762,   762,   762,
     262,   762,   762,   762,   262,   762,   762,   762,   762,   762,
     762,   762,   762,   762,   121,  1513,   121,  1513,  1513,  1219,
    1489,  2026,  2027,  1883,  1875,  1542,     9,    10,   180,   182,
     301,  1493,  1494,    81,    96,   125,   131,   165,   747,   748,
     749,  1497,    15,    69,   124,   136,   161,   179,   212,   235,
     236,   662,   750,   751,   752,   753,   754,   755,   756,   757,
    1495,  1513,    34,   162,   187,   187,   734,  1878,   769,   762,
     193,  1108,   495,   764,   747,  1878,  1416,  1889,  1891,  1417,
    1418,  1871,   717,   122,  1696,  1710,  1711,  1871,  1969,   570,
     176,    94,   176,    61,  1883,  1915,  1931,   233,   630,   769,
      17,    61,   234,   747,  1262,  1263,  1719,  1888,    92,  1719,
    1938,  1719,  1888,  1918,   770,  1888,    17,    61,  1265,  1266,
    1888,  1719,   769,  1919,  1917,   655,   762,    49,   188,   200,
     260,   269,   421,   446,   644,   719,   727,   136,   295,  1779,
      24,   672,   357,   672,   672,   420,  1779,     6,  1178,  1888,
     137,  1656,  1657,  1658,    94,   124,  1774,  1776,   357,   672,
      92,   672,   688,   661,     6,   337,   381,   383,   476,   525,
     573,   663,   684,  1762,  1763,  1764,   802,   462,   672,   803,
    1656,  1779,  1776,   495,   414,   360,   595,   688,   703,    92,
    1480,   672,   724,  1356,   147,  1858,  1859,  1863,  1883,  1013,
    1018,   764,  1421,  1422,  1423,  1424,  1871,  1694,  1883,   345,
     554,   213,   554,  2003,   764,   784,  1489,   282,   785,    17,
     401,   415,   417,   447,   462,   495,   513,   593,   600,   610,
     623,   654,   657,   672,  1791,  1796,  1797,  1876,  1944,    35,
     770,   938,   939,   940,   941,  1875,    11,   747,  1623,  1624,
    1951,  1883,   661,   780,   727,  1381,  1944,  1808,   342,  1807,
     764,   639,  1883,  2003,  1372,  1373,  1372,   566,   738,   376,
     764,  1372,  1372,  1695,   764,   565,  2070,   683,  2071,   747,
     127,   625,  2069,    80,   774,  1495,  1883,   862,   862,  1166,
    1166,  1166,  1166,  1166,  1166,    24,  1166,   814,   813,   815,
     727,   446,   817,   816,  2036,  1783,  1788,  1847,  1883,    94,
     122,   181,  1453,  1462,  1463,  1466,  1467,  1468,  1652,  1658,
    1684,  2016,     6,    68,   245,   246,   255,   276,   459,   664,
     665,   666,   667,  1470,  1475,  1476,  2031,   762,  1716,  1725,
    1441,   763,  2020,   229,     6,    68,  2018,  2016,     6,    17,
      61,   176,  1489,  1940,   234,    61,  1163,  1164,  1175,  1176,
    1270,   390,   865,  1488,   770,   865,     5,  1055,  1871,   569,
     389,  1072,  1072,  1072,     4,  1871,  1361,  1889,  1890,  1891,
    1981,  1985,   398,   474,   863,  1871,   727,  1391,  1392,  1695,
     878,   879,  1489,  1489,   897,   898,   412,   992,   792,  1694,
      92,   346,   432,   434,   524,   601,   764,  1407,  1408,  1409,
    1055,  1072,   913,   334,   903,   904,   768,   768,   762,  1243,
    1245,  1243,  1244,  1244,   762,  1240,  1241,  1243,   198,  1240,
     373,  1252,  1253,    17,   323,   341,   714,  1226,  1253,  1261,
    1271,  1273,    32,   289,  1226,  1233,  1235,  1252,  1226,  1240,
     762,  1252,  1226,  1243,  1245,  1226,  1244,   762,  1240,  1252,
      32,   290,   290,   292,  1240,  1243,   762,   909,  1244,  1244,
    1244,  1243,  1244,   193,   769,    34,  1268,  1240,   292,  1245,
    1245,  1243,  1243,  1244,   762,  1241,  1248,    61,   234,   949,
      92,  1883,    92,  1871,    14,  1745,  1697,  1698,  1872,  1883,
     295,  1626,   764,  1749,   769,  1754,   176,   863,   769,  1086,
    1964,  1966,   557,   729,  1087,  1088,   415,  1891,  1980,  1694,
    1693,  1691,   147,   629,  1024,   688,   763,   762,  1986,  1986,
    1986,  1986,  1891,  1981,   188,   200,   260,   446,  1967,   421,
     426,   436,   594,   615,   620,   651,   682,  1971,   111,   263,
    1710,   464,   719,  1489,  1819,  1427,   492,  1828,  1624,   558,
     729,   764,  1943,   963,   964,   294,  1883,    94,   122,   236,
     963,   294,   762,   977,   147,   768,   769,   956,  1489,   764,
    1006,  1005,  1036,  1034,  1039,  1035,  1694,   762,     6,  1552,
    1625,  1552,  1552,  1489,  1565,    76,   294,   412,  1489,  1561,
    1489,    68,  1552,  1625,   763,    57,    89,   104,   145,   173,
     272,   763,  1666,  1670,  1671,   763,  1489,  1489,  1868,   763,
    2026,    53,    54,    55,    56,   106,   107,   108,   157,   158,
     228,   302,   394,   463,   528,   530,   535,   599,   642,   731,
     742,  1620,  1621,  1489,    68,  1544,  1489,  1489,  1489,  1489,
    1489,  1620,  1489,  1875,  1563,   318,   764,   769,    68,  1552,
    1489,    68,  1552,  1489,  1489,  1489,   763,  1489,  1489,  1492,
     763,  1489,  1489,  1489,   763,   634,  1552,  1552,  1489,    68,
    1552,    25,   132,   268,  1489,  1509,  1552,  1552,  1489,  1489,
      68,  1552,  1489,  1561,  1489,   769,  1489,  1489,  1489,  1505,
    1506,  1489,  1489,  1489,  1489,  1489,  1489,  1489,  1489,  1489,
    1561,   391,   393,   697,   700,  1622,  1489,  1489,  1561,  1871,
    1561,  1489,  1489,  1489,  1561,  1561,  1561,    92,  1871,  1489,
    1489,  1489,  1561,    92,  1489,  1489,  1489,   763,  1489,  1871,
    1489,  1489,  1621,  1621,  1489,  1509,  1489,   763,   359,   769,
    1869,  1883,  1489,  1489,  1489,  1489,  1489,  1489,   763,   764,
    1854,  1489,   769,   770,  1543,  1888,  1489,  1489,  1489,  1491,
      86,   172,   271,   716,  1495,     6,   322,  1491,  1498,  1492,
    1492,   762,  1492,  1492,  1492,  1492,  1492,  1492,   136,  1492,
    1492,   121,  1492,   121,  1492,  1492,  1492,  1492,  1492,    15,
     124,   136,   212,  1267,  1888,  1513,   762,  1540,  1637,  1883,
     762,    99,  1875,  1521,   444,   478,   553,   634,  1507,   138,
     203,   491,   687,  1109,  1113,    14,   267,  1814,   934,   393,
     697,   700,   933,  1541,  1851,  1868,   764,   267,   764,  1943,
    1031,  1711,  1707,   192,  1580,  1581,   764,    92,  1891,  1890,
    1982,   188,   200,   446,  1967,   769,   769,  1719,   764,  1910,
    1966,  1883,  1268,  1489,  1891,   262,   564,   578,  1939,  1940,
     206,   477,  1933,  1934,  1935,  1936,   453,   492,   647,  1930,
    1719,  1940,  1883,   701,  1920,  1931,   764,  1922,   672,   754,
    1166,    24,   863,   863,  1871,   863,   863,   863,  1871,  1891,
    1871,  1480,  1480,   357,   672,  1779,   863,  1779,  1774,   124,
    1777,   495,   539,   672,  1771,  1771,   145,   173,   225,   272,
     359,  1659,  1660,  1849,  1875,  1779,  1883,   863,  1779,  1890,
    1774,  1779,  1877,   475,   685,   435,    92,  1765,   764,   420,
     672,  1871,  1776,  1774,  1774,  1489,  1779,  1779,  1779,   762,
     766,  1567,  1568,  1569,  1570,  1571,  1582,  1583,  1584,  1585,
    1029,   764,   762,  1861,   895,   412,   770,   124,   764,   192,
    1432,  1434,  1435,   432,   601,  1380,   234,   345,   213,  1489,
     785,   786,   495,   495,   495,   495,   342,   495,   802,   495,
     764,  1480,  1792,   933,   943,  1888,   764,   747,   446,  1876,
    1880,  1892,  1899,  1900,  1901,  1902,  1903,  1904,  1905,  1906,
     437,   547,  1883,  1952,  1953,  1877,  1382,  1694,   267,  1810,
     802,  1806,  1883,  1367,   614,   668,  1374,  1375,  1366,   658,
    1371,  1943,  1847,   581,  2072,  1888,    84,   810,  1964,  1981,
    1888,  1883,  1883,  1883,  1871,  1871,  1166,   863,  1166,  2058,
    2062,  1482,  2046,   850,  1482,  1166,   818,   842,  1166,  2052,
    2055,  2061,  1166,  2061,   727,    74,  1469,  1568,   185,   408,
    1679,  1680,  1685,    26,    92,   142,  1477,   200,  1674,  1684,
    2016,  1477,  1626,  1656,  1466,  1467,   754,  1478,  1479,  1482,
    1476,  1726,   764,   763,  2010,  2014,  1459,  1462,  1467,  1464,
    2011,  1913,  1164,    34,  1261,   403,   160,   205,   247,   368,
     380,   483,   554,   867,   874,  1888,   607,   712,  1073,  1074,
     471,  1069,  1070,  1071,  1078,  1086,  1088,  1329,   762,  1877,
     327,   520,  1063,  1064,  1065,  1078,  1079,  1080,  1086,  1088,
    1056,  1057,  1063,  1943,   465,   217,   764,  1989,  1326,  1325,
    1871,   764,   580,  1393,   763,   764,  1000,   896,    29,   294,
     993,   995,    71,   112,   149,   466,   496,   497,   499,   500,
     501,   502,   503,   505,   506,   507,   508,   509,   510,   511,
     512,   514,   515,   516,   612,   613,   793,   794,   801,    92,
    1410,   718,  1695,  1408,   368,   551,   608,   713,  1066,  1067,
    1068,  1078,  1082,  1083,  1084,  1085,  1086,  1088,   281,  1051,
     762,   916,  1018,    57,   145,   173,   272,  1252,  1252,   173,
     278,   303,   652,  1242,  1242,  1251,  1719,  1271,  1272,  1273,
    1262,    17,  1274,   373,  1254,  1252,  1226,  1242,  1317,  1847,
    1252,  1317,  1242,   292,  1242,  1252,   906,   907,   908,  1884,
     949,  1226,  1226,  1242,   226,   707,  1883,    61,  1267,  1269,
     210,  1239,  1272,  1274,  1226,  1252,  1242,   173,  1242,  1489,
    1489,   915,   104,   753,   923,   924,  1663,  1665,  1580,   687,
     764,  1750,   769,  1754,  1627,  1651,  1652,  1753,    94,   754,
    1883,  1871,  1883,  1087,   764,  1719,  1720,   764,    28,   219,
    1362,  1694,  1694,   896,   762,   971,   974,  1883,  1987,  1988,
     267,   297,  1963,    24,   754,  1871,  1883,  1979,  1979,  1979,
    1979,   985,  1704,  1891,  1428,  1429,  1430,  1431,  1871,   115,
     148,   206,   738,  1947,  1665,  1946,  1489,   963,   122,  1883,
     963,   971,   972,   976,  1883,   877,  1883,   900,  1018,  1025,
    1027,  1030,  1028,  1943,  1489,   763,  1553,   763,   763,   263,
     412,  1489,  1489,    11,   282,   763,   282,   764,  1529,   763,
     754,   763,   764,   764,   763,   763,    94,   763,  1531,   763,
     764,   763,   764,   764,   764,   764,   753,   764,   763,   762,
    1868,  1875,  1552,   763,   763,  1552,   763,   764,   763,   764,
     763,   763,   124,   764,   764,   764,   763,   763,    94,   764,
    1552,   763,    94,  1489,    94,  1489,    94,  1489,    94,   763,
     763,   763,   764,   763,  1552,   763,   763,   763,   763,  1875,
     764,   763,   764,   763,   764,   764,   764,   764,   764,   763,
     763,   764,   764,   764,   763,   764,   763,   763,   764,   763,
     763,   763,   763,   763,   763,   763,   763,  1871,   763,   763,
     763,   764,   763,  1871,   763,   763,   764,   763,   764,   764,
     763,   764,   764,   764,   763,   763,   764,  1875,  1883,   763,
     769,   763,   764,    11,   489,   764,  1285,   764,   763,  1620,
    1620,  1561,   229,   762,  2019,  2020,  2022,  2023,  2024,  2025,
     767,  1875,  1930,   234,    86,   172,   271,   716,   762,    10,
    1489,  2026,   419,  1630,  1492,  1489,  1489,  1492,   762,  1492,
    1492,  1638,   192,  1640,   762,   762,   769,  1482,  1525,  1526,
    1527,   360,   762,  1118,  1119,  1111,  1118,  1112,   576,  1121,
     129,   457,  1489,  1877,   747,  1891,  1891,  1418,   267,  1489,
     233,   286,   721,   762,  1096,  1712,  1715,  1854,   762,    98,
    1966,    94,   764,    24,  1979,  1979,  1979,  1979,  1883,  1883,
    1940,  1931,    92,    92,  1719,  1719,   762,   762,   566,   738,
     489,   764,   764,   769,   769,   769,    61,   446,   733,  1876,
    1877,  1882,  1895,  1899,  1900,  1901,  1902,  1903,  1905,  1906,
    1489,  1719,  1933,  1921,  1923,  1924,   763,  1883,   863,  1877,
    1489,   863,  1779,  1779,  1877,    94,  1778,   424,  1875,   225,
     563,   764,   769,   862,  1779,   600,  1656,  1764,  1777,  1774,
    1871,  1779,  1779,  1602,  1883,    42,   116,   127,   134,   163,
     224,   255,  1578,  1579,   233,   764,  1871,   896,  1859,  1862,
    1883,  1860,   950,  1019,  1888,    61,  1425,  1883,  1423,  1871,
    1104,  1434,   114,   129,  1294,  1436,  1914,    61,   113,   787,
     788,  1489,  1731,    62,  1799,   802,  1797,  1694,  1798,   941,
     944,   945,   940,   559,   560,   636,   942,    96,   131,   437,
     484,   547,   591,   747,   748,   749,  1954,  1956,  1626,  1694,
     432,   601,   720,  1385,  1386,  1387,  1665,     6,  1809,   764,
     717,  1376,  1759,   764,    92,  2073,  1162,  1163,   297,  1962,
    1989,   847,   282,   707,  1307,   176,   176,   805,   806,   863,
     871,   872,   863,   863,   864,  1166,  1166,  1871,  1166,  2052,
     863,  1883,   864,  1166,   262,  1879,  1879,   770,  1681,  1682,
    1683,  1883,  1888,  1653,   279,   124,  1883,  1674,  1684,  1454,
      99,  1631,  1651,   764,  1489,  1866,  1875,  1482,  1728,  1730,
     762,  1723,  1459,   229,   762,  1440,  2020,  1940,  1720,  1720,
     543,   247,   247,   643,  1877,   247,   247,   247,  1877,  1877,
    1720,   764,  1071,   152,   342,   388,   469,   531,   549,   550,
     554,   555,   556,   622,   670,   844,   845,    49,   461,   571,
     578,   586,   659,   719,   848,   849,  1720,  1720,   764,  1065,
    1058,  1059,  1078,  1079,  1080,  1320,    26,   297,   726,  1983,
     248,   350,   479,   552,   679,   739,  1977,  1978,  1985,   297,
    1992,   176,   858,  1330,   762,  2038,  1324,  1392,    92,  1489,
     263,   996,   995,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   764,   718,  1720,
    1720,  1720,  1720,   764,  1068,   494,   433,  1060,  1061,  1062,
    1078,  1079,  1080,  1081,  1084,  1085,  1086,  1088,   881,   882,
     883,  1883,   125,   412,   763,   763,   763,   763,   764,   303,
     278,  1883,  1251,   763,   764,   763,  1259,   763,   764,   949,
     949,   769,   747,  1274,   183,   242,   244,   921,   922,   923,
     926,  1495,  1883,    57,    89,   145,   173,   272,   697,   701,
    1471,  1472,  1515,  1698,  1883,   282,  1883,  1489,   137,  1662,
    1568,   769,  1754,  1943,  1966,  1177,  1888,  1891,  1943,   412,
     917,   918,   975,    72,   763,   764,  1981,   315,  1979,   769,
     769,   267,   267,   267,   267,   897,  1712,   764,  1432,  1434,
    1879,   738,   492,   374,   122,   973,   763,   764,   957,  1007,
     412,  1037,  1002,  1032,  1885,  1032,  1032,   764,  1489,  1489,
     263,    17,    32,    58,    70,    90,   123,   278,   290,   391,
     393,   545,   652,   700,   723,  1554,  1558,  1559,  1262,  1262,
    1554,  1561,   763,   121,   121,  1489,  1561,  1489,  1489,  1489,
    1489,  1489,  1489,  1489,  1492,   763,   763,  1489,  1489,  1489,
    1489,  1489,  1489,  1489,  1489,   763,  1489,    94,  1489,    94,
    1489,    94,  1489,   121,  1489,   763,  1506,  1489,  1505,  1561,
    1489,  1489,  1489,  1489,  1489,  1566,  1489,  1489,  1489,  1489,
    1561,   145,   752,  1663,  1667,   121,  1489,  1489,  1489,  1489,
    1489,   769,   769,  1883,  1489,    17,    32,  1280,  1281,  1282,
    1283,  1284,  1666,  1665,   763,  1489,   753,   753,  1591,  1592,
    1593,   762,  1450,  1451,  1452,  1477,  2016,  1590,  2008,  2017,
    2028,  1882,  1489,  2026,  1491,   763,   764,   763,  1513,  1620,
    1620,    10,  1489,  2026,  1630,  1639,  1883,    26,   763,  1537,
    1560,  1561,  1875,  1489,   763,   764,   762,  1482,  1119,   121,
     137,  1153,  1666,   681,  1122,   320,  1114,  1110,   933,   267,
    1871,   412,  1713,  1716,  1716,   763,  1155,  1714,  1854,  1864,
    1865,  1869,  1883,   229,  1619,  1883,   570,  1980,  1890,  1979,
      94,    94,    94,    94,  1719,  1719,   775,  1891,  1940,   262,
     262,   206,   619,   645,  1937,  1935,  1934,   769,   769,  1719,
    1940,  1922,   764,  1926,  1928,  1932,   418,   730,  1663,  1668,
    1769,  1660,  1661,   424,  1660,  1660,  1875,   173,  1778,  1626,
    1774,   229,   286,  1586,  1594,  1595,  1596,  1597,  1602,  1603,
    2027,  1567,   127,   127,   184,  1605,   134,   224,  1578,  1605,
    1567,  1738,  1739,  1869,  1569,  1580,   412,   763,   764,    11,
     768,   308,  1020,  1433,   762,  1940,   764,   747,    92,   297,
    1793,  1794,   747,   764,  1955,  1656,    94,  1388,  1386,  1375,
     498,   801,  1377,    73,   628,  1760,  1665,   529,   315,  1992,
      91,   340,   457,   638,  1313,  1313,   176,  1871,  1871,   114,
     136,   189,   250,   251,   252,   275,   300,   328,   330,   349,
     368,   375,   390,   400,   415,   472,   482,   519,   532,   572,
     578,   637,   644,   674,   689,   690,   702,   762,  1090,  1094,
    1168,  1170,  1171,  1174,  1175,  1176,  1876,   843,   844,   871,
      11,   125,  2064,   368,   868,   869,   870,   874,  2059,  2047,
     863,   811,  1883,  2056,   627,  1871,  1686,  1888,   764,   769,
    1489,  1654,  1867,  1943,   650,  1675,  2009,  2010,    26,   103,
    1628,  1656,  1479,  1483,  1483,   769,  1731,   763,   764,  1724,
    1477,  1464,   762,  1445,  1446,  2010,  2014,  1269,  1263,   390,
     390,   398,   474,   104,   145,   173,   272,  1089,  1669,  1670,
    1876,  1071,  1720,  1720,    26,  1720,  1722,  1720,   152,   531,
     297,  1720,  1721,  1721,   845,  1877,  1877,  1877,  1877,  1665,
    1877,  1877,   763,   764,  1089,  1089,  1065,   764,  1059,     5,
       7,     8,    31,    33,    39,    73,   142,   177,   181,   192,
     214,   320,   356,   404,   405,   411,   423,   442,   468,   534,
     605,   616,   617,   618,   705,  1102,  1169,  1171,  1334,  1338,
    1340,  1343,  1349,  1350,  1351,  1353,  1354,  1648,   262,   578,
    1888,   262,   262,   262,    10,  1976,   517,   518,   521,   522,
     523,  1990,  1991,   372,   640,   214,  1331,  1883,  2039,    11,
    2038,     6,   360,  1394,   897,  1489,   762,   762,  1665,   762,
    1665,  1665,  1877,  1877,  1668,  1877,  1665,  1877,  1877,  1877,
    1877,  1877,  1877,  1877,  1665,  1877,   386,   554,   656,  1852,
    1877,  1665,   794,  1877,  1666,  1089,  1089,  1068,    99,  1720,
     764,  1062,   763,   764,    17,   289,   603,   635,   723,   947,
    1224,  1225,  1228,  1229,  1230,  1231,  1233,  1234,  1235,  1236,
    1260,   918,   173,  1272,  1847,  1272,   907,  1883,   173,   764,
     950,   444,   262,  1492,   769,  1568,  1754,   225,  1660,   220,
    1751,  1626,  1362,   147,   919,   763,  1489,   974,  1988,   297,
    1994,   570,   267,   754,   754,  1981,  1981,  1981,  1981,   986,
     176,  1732,  1430,  1871,  1434,   113,  1437,  1824,  1489,   972,
     877,   334,  1002,   147,  1489,  1489,  1244,  1244,  1240,  1248,
     123,  1243,  1244,  1244,   123,  1244,  1243,   763,   763,   763,
     763,  1530,  1489,  1489,   763,   181,  1546,   763,   763,   764,
     764,   763,   764,   763,   124,  1522,  1523,   763,   763,   763,
     763,   764,   763,    92,   763,   763,   764,  1489,  1489,  1489,
    1489,   763,   763,    11,  1499,   763,    11,   763,   763,   764,
     763,   764,   763,   764,   763,   764,   763,   763,   763,   763,
     145,   173,   173,   763,   764,  1489,   763,   763,   764,   764,
     763,  1875,  1883,   769,   763,   762,  1275,  1275,    12,    65,
     629,   752,  1277,  1278,  1279,   764,   764,   763,  1489,  1489,
    1467,  2029,  2030,  2031,  1450,   763,  2020,   229,  1477,  2018,
    1588,  2023,  2024,   769,   763,  1561,  1491,   763,   764,   763,
    1640,  1632,  1867,   181,  1539,   763,  1483,  1527,  1115,  1116,
    1117,  1883,  1127,  1492,  1489,  1668,    26,   762,  1129,   747,
     762,  1119,  1891,   215,  1717,  1718,  1869,   762,  1715,   763,
     763,   764,   229,   769,  1156,  1157,   763,   764,    94,    94,
    1982,  1982,  1982,  1982,  1940,  1940,   763,   763,   369,   710,
     206,  1883,  1883,  1940,  1925,  1927,    57,    89,   145,   173,
     272,  1656,  1661,  1770,  1779,  1604,  1598,   763,  2014,  2017,
    1477,  2016,  1570,  1855,   767,   127,  1605,  1605,  1582,   127,
     176,   282,   764,  1737,  1719,    93,  1473,   147,  1883,   762,
     294,  1021,  1022,   762,   199,  1616,  1617,  1618,  1883,   788,
     762,  1795,   206,   344,   351,   367,   377,   378,   379,   387,
     527,   541,   626,   641,   677,   691,   946,   945,   762,   540,
     747,   764,   674,   674,  1890,   390,  1871,   808,   809,   403,
    1871,  1720,  1720,  1720,  1720,  1720,   725,  1720,  1720,  1720,
    1720,  1720,   403,  1720,  1720,  1720,  1720,  1720,  1720,  1720,
    1720,  1720,  1720,   406,   525,  1883,  1720,  1720,    36,   136,
     579,   769,  1155,  1182,  1183,  1184,  1185,  1186,  1194,  1195,
    1199,  1200,  1201,  1294,  1298,  1299,  1870,  1883,  1100,  1101,
    1102,   764,  1170,  1719,  1168,  2064,  1482,  1877,   868,   762,
     890,   892,   894,   863,   851,  2038,   762,   888,   892,   893,
      58,   123,   208,   676,  1181,   812,  1261,  1264,  1682,  1883,
     764,    12,    65,  1655,   533,   762,  1632,  1629,   733,  1634,
      11,  1485,  1877,  1883,   754,  1875,  1483,  1482,  1727,  1729,
    1731,  1455,  1463,  1466,  1467,  1445,   763,   229,  1444,  2020,
    1667,  1667,  1667,  1667,  1667,  1667,   849,  1059,    36,   192,
     366,   579,   686,  1186,  1194,  1195,  1355,  1355,   192,  1355,
     192,   267,    36,    91,   192,   579,   686,  1198,  1294,  1355,
    1720,   192,    26,  1104,    11,   267,   747,  1364,  1720,   192,
     128,   689,   128,   192,   689,  1355,   192,   577,   192,   192,
     192,  1169,   764,  1101,  1338,   762,  1185,   262,    11,   282,
    1984,  1977,  1665,  1665,  1665,  1852,   752,  1663,  1664,  1990,
    1495,  2000,   324,   422,   852,   267,   404,   411,   854,   763,
     764,  2040,  2041,    11,     6,   762,  1395,   997,   797,   798,
    1665,   799,   800,  1665,   795,   796,  1665,  1883,  1089,  1062,
     883,  1243,  1247,  1243,  1246,  1246,   909,  1246,   193,   769,
    1268,  1247,  1247,  1246,  1246,   763,   922,  1883,  1626,   424,
     225,  1478,  1438,    98,  1981,  1989,  1989,  1989,  1989,    76,
      78,   987,   409,  1437,   487,   113,   216,  1830,  1018,   896,
    1555,  1556,  1557,   763,  1620,  1620,    26,   231,  1545,  1489,
    1489,  1561,   163,   339,   763,   297,  1524,  1489,  1489,  1489,
    1620,    58,    70,    90,   123,   208,   278,   391,   393,   544,
     545,   700,  1233,  1234,  1500,  1501,  1502,  1503,  1554,  1489,
    1489,  1489,  1489,    86,   271,  1665,  1673,  1620,  1489,  1489,
    1883,  1666,   763,  1285,  1280,  1278,  1280,  1281,  1665,  1478,
    2031,   763,  2014,  1592,  1589,  1883,   763,  1561,   181,  1641,
     764,  1655,    26,   763,  1485,   763,   764,  1483,  1620,  1113,
     192,  1130,  1131,  1666,  1115,   764,  1719,  1098,  1099,  1715,
    1864,  1156,   754,  1883,  1159,  1466,  1467,  2016,  1470,  1104,
    1883,  1982,  1982,  1719,  1719,  1926,  1931,  1656,  1599,  1600,
    1716,  1473,  1587,  1590,  1477,  2025,  1567,  1582,   127,   127,
    1567,  1582,  1572,  1573,  1739,  1626,  1731,     6,    11,    15,
      94,  1474,  1624,  1480,  1023,  1022,     6,  1339,  1347,  1348,
    1883,   763,   764,  1668,  1800,  1801,   431,   142,  1729,  1877,
     801,   737,   807,   762,   762,  1720,    61,  1665,  1672,    61,
    1665,    61,  1665,    61,  1665,  1172,  1668,  1665,  1665,  1877,
    1877,  1720,  1665,  1888,   437,   484,   554,  1180,  1665,  1668,
    1668,    61,  1665,  1877,    61,   371,   373,   410,   438,   573,
     609,  1179,  1672,  1665,  1672,  1316,  1870,  1871,    93,  1883,
     763,   763,   764,    33,    91,   199,   276,  1197,  1293,   211,
    1287,  1166,  1294,  1295,  1295,  1202,   769,  1095,  1830,  1170,
      61,  1669,  1877,  1883,  1482,   820,   891,   866,    14,   317,
    1046,   176,    11,   889,   222,  2053,   661,  2038,  1263,  1687,
    1867,  1943,  1482,  1676,  1677,  1678,   298,   299,  1633,  1489,
    1540,  1635,  1636,  1877,  1883,   769,  1731,   763,   764,  1477,
    2016,  1477,   763,  2010,  2014,  1464,  1460,  1463,  1467,   111,
    1166,   725,   111,  1165,  1699,  1413,  1699,  1339,  1261,  1699,
     129,  1700,    93,   725,   199,  1699,  1699,    61,  1883,  1413,
    1649,  1650,  1869,  1103,  1871,    61,  1883,  1413,  1348,  1699,
    1413,  1413,  1413,  1339,     5,    73,  1351,  1182,   317,   437,
    1363,  1877,   173,   173,   590,  1489,  1489,   176,   858,   863,
     176,   368,   859,  1883,  1854,  2040,  1396,   470,   263,   763,
     764,   763,   764,   763,   764,  1272,   226,  1883,  1272,  1274,
    1272,  1274,   424,   570,  1989,   297,  1993,  1993,  1993,  1993,
     897,   983,  1733,   122,   412,   412,  1272,  1272,  1272,   763,
     763,  1547,  1867,  1847,   137,  1548,  1549,  1550,   763,   764,
     763,   483,   533,   600,   763,   763,   763,   763,  1240,   123,
    1244,    32,  1244,  1504,   763,   763,   763,   763,   764,   763,
     763,   763,  1276,   763,   764,  1467,  1590,   763,    26,   203,
     225,  1642,  1643,  1867,  1867,  1117,   763,   669,  1154,   129,
     457,  1132,   763,   764,   763,  1718,  1731,  2010,  2014,  1158,
    1159,  1467,   769,  1160,  1477,  2016,  1160,  1478,  1940,  1940,
    1470,  1624,  1588,  2028,   176,  1575,  1582,  1582,   176,  1577,
    1489,   762,  1651,   562,  1472,  1472,  1614,  1615,  2026,   921,
     763,   764,  1617,   763,   764,    10,  1802,   763,  1888,   762,
    1314,  1315,  1883,  1314,  1877,   762,  1877,   763,   762,  1092,
    1093,  1091,  1184,   762,   129,   129,  1295,  1166,  1871,  1316,
    1883,  1166,  1166,   646,  1203,  1223,  1883,    11,  1161,   821,
     200,   446,   839,   840,   841,   882,   884,   885,   886,   867,
     873,  2000,  2060,    63,   119,   279,  1047,   640,  2040,   880,
     881,  2054,   866,  1877,    11,   360,  1831,  1655,  1489,   763,
     764,    11,   764,   754,  1483,  1731,  1456,  1460,  1495,  1413,
    1495,  1870,  1339,  1870,  1336,  1263,  1870,  1699,  1347,   129,
    1870,  1870,  1339,   764,  1655,  1107,  1666,   297,  1201,  1339,
    1344,  1339,   763,  1883,  1620,   654,  1877,   407,  1332,   229,
     762,  2020,  2042,  1399,  1883,     6,   762,  1397,   897,   798,
     800,   796,   193,   769,  1993,    98,  1990,  1995,  1996,   129,
     260,  1002,   147,   764,  1655,   763,  1551,  1660,  1489,   533,
     430,  1272,  1668,   763,  1665,  1651,  1654,   763,    15,   385,
     393,   697,   700,   709,  1644,  1645,  1851,  1655,  1655,  1665,
    1114,   762,  1120,  1133,  1883,  1131,  1160,   754,  1097,  1478,
     763,  1574,   282,  1576,   282,  1619,  1662,  1472,    10,   267,
    1612,  1613,  1481,   263,  1348,  1801,   404,   569,  1314,   763,
     764,  1655,   762,   763,  1798,  1883,  2010,  2014,  1168,  1489,
    1166,  1316,  1883,   762,  1288,   282,  1306,   707,  1316,  1316,
    1205,  1196,  1197,  1204,   769,  1096,   200,   446,   825,   826,
     827,   833,   838,   841,   911,   831,   970,   829,   970,   412,
     841,   117,   124,   186,   887,   763,   764,    67,  2064,   176,
     852,   763,  1260,  2057,  2040,    79,    82,   178,   261,  1832,
    1833,   139,  1834,  1483,  1678,  1637,  1636,  2009,  1477,    84,
    1341,    84,    73,   233,  1201,  1407,  1268,  1870,  1362,  1335,
    1650,   260,  1363,  1345,  1347,  1337,   853,   860,   861,  1464,
     762,  1448,  1449,  2008,  2012,  2014,   297,  2043,   763,   764,
    1398,   226,   707,  1883,   570,  1996,   279,  1871,  1038,  1867,
     563,   764,   763,   763,   763,  1656,   709,  1645,  1646,  1851,
     635,   588,   425,  1647,   588,   762,  1482,  1123,    61,   287,
     288,   385,   460,  1134,  2009,  1601,  1473,  1489,   762,  1489,
     762,   763,  1472,  1472,   113,   281,   442,  1607,  1608,  1611,
     763,   897,   348,   762,   763,  1943,  1315,   173,  1943,   763,
     764,  1100,   763,  1316,  1306,   707,  1289,  1883,   150,  1290,
    1313,  1187,  1313,  1189,  1190,   199,   276,   300,   368,   480,
     735,  1206,  1207,  1216,  1256,  1257,  1258,  1286,  1495,  1876,
      34,    61,   172,   176,   328,   448,   646,  1210,  1212,  1249,
    1250,  1257,  1883,  1173,  1174,   831,   829,   822,   827,   838,
     833,   768,   768,   828,   768,   828,  1484,   186,   635,   947,
    1260,   886,  1014,  1015,  1482,   857,   858,  2064,    26,    26,
      79,    26,  1833,   249,   261,  1835,  1836,  1870,   576,   762,
    1342,    61,    61,  1363,  1413,  1871,  1346,  1385,   669,   855,
     950,  1457,  1466,  1467,  2016,  1448,   763,   229,  1447,  2020,
    2018,    33,   343,   492,  1883,   199,  1400,  1401,  1883,   193,
    1734,  1580,  1032,  1655,  1660,  1660,  1477,   441,    10,   441,
      99,   385,   554,   696,  1125,  1126,  1883,  1127,   680,  1128,
    1136,   695,   114,   368,   375,   390,   519,   532,   551,   689,
    1150,  1151,  1152,  1773,  1467,  1624,  1619,  1619,  1294,  1294,
    1608,   848,  1943,   297,   368,   482,  1301,  1305,  1309,  1312,
    1876,  1655,   763,  1302,  1304,  1309,  1311,  1883,  1095,  1193,
    1191,  1313,   763,   764,   445,   575,   653,   176,  1291,   762,
    1188,   762,   762,   129,  1877,   686,  1257,   725,   129,   172,
    1719,  1267,   752,   753,   762,  1220,  1221,  1222,  1510,  1850,
    1876,   279,   321,    61,    11,   373,  1250,  1255,   836,  2064,
     834,  2064,   334,   412,   824,  1883,  1883,   864,   909,   193,
     769,   899,   900,  2048,   854,  1014,  1847,  1847,    26,  1847,
      26,    26,  1836,  1197,  1666,  1130,  1222,  1104,   122,  1489,
     413,   856,  2016,  1477,  1477,   763,  2012,  2014,  1464,  1461,
    1466,  1467,  2016,  2013,   570,    33,    33,   763,   764,   707,
    1740,  1741,  1869,  1825,  1646,   635,   183,   310,   763,   764,
    1483,  1666,   762,  1138,  1140,  1135,   403,  1720,  1720,   403,
    1720,  1720,  1720,  1720,   762,  1145,  1152,   415,   763,   763,
      92,  1606,  1606,   763,   282,   707,  1300,  1303,  1308,  1309,
    1310,   574,  1877,  1720,  1352,  1353,  1354,  1312,  1719,  1352,
    1311,   763,   762,   762,  1192,  1883,    63,   279,  1314,   762,
    1314,  1314,    61,  1669,  1877,  1883,  1852,  1852,  1219,   169,
     721,   635,  1220,  1251,  1249,   768,   970,   768,   970,  1018,
     823,   832,   830,   226,  1883,  1016,  1871,   859,  1847,  1847,
    1847,   763,   762,  1489,  1477,  1458,  1461,  2016,  2042,   570,
     570,  1401,   764,  1719,  1264,  1124,  1126,   763,   762,  1139,
    1140,  1141,   152,  1137,  1140,  1720,  1877,  1877,  1720,  1669,
    1669,  1666,  1888,   681,  1146,  1147,  1720,    99,   127,   181,
    1610,  1609,  1313,  1313,  1352,  1310,  1876,  1665,  1354,  1353,
      61,  1669,  1877,  1883,  1314,  1314,   762,    28,   219,   233,
     554,  1292,  1292,   763,  1314,   763,   763,   763,   762,  1486,
     412,   670,  1211,   837,   835,   412,  1484,   894,   893,   193,
     769,   334,    92,   407,  1130,  2012,  1477,  1741,  1731,  1826,
    1128,   763,   764,   152,  1143,  1144,  1492,  1877,  1877,  1148,
     763,   764,  1177,    26,    26,   762,   762,   763,   763,  1314,
      61,   172,   314,   176,   176,  1300,   763,  1301,  1302,   763,
    1666,  1208,  1209,  1256,  1208,   580,   675,   728,  1213,  1014,
    1014,   864,   866,  2053,   226,   707,  1883,  1018,  1482,   860,
     763,   225,  1837,  1140,   764,  1142,  1149,  1888,  1147,  1616,
    1618,  1287,  1300,   763,   279,    63,  1300,   763,  1256,  1214,
    1215,  1216,  1883,  2063,  2063,   866,   193,  1017,  2049,   465,
    1831,  1144,   763,  1150,   763,   763,  1300,  1292,  1292,  1216,
     707,   412,    75,    26,  1834,   635,  1847,   113,  1838,  2050,
     173,   762,  1840,   440,   587,  2044,  2045,   139,   225,  1839,
     763,   770,  1841,  1842,  1869,   233,  1843,  1888,  2051,  1888,
     763,   764,  1844,  1845,  1869,   950,  1842,   764,  1719,  1845,
    1482,  1731,  1483
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   771,   772,   773,   772,   772,   774,   774,   775,   775,
     775,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   777,
     778,   778,   779,   781,   780,   783,   782,   784,   782,   785,
     786,   785,   787,   787,   788,   790,   789,   792,   791,   793,
     793,   794,   794,   794,   794,   794,   794,   794,   794,   794,
     794,   794,   794,   794,   794,   794,   794,   794,   794,   794,
     794,   795,   795,   795,   796,   797,   797,   797,   798,   799,
     799,   799,   800,   801,   801,   801,   801,   801,   801,   801,
     802,   802,   803,   805,   804,   806,   804,   807,   804,   808,
     804,   809,   804,   810,   804,   811,   804,   812,   804,   813,
     804,   814,   804,   815,   804,   816,   804,   817,   804,   818,
     804,   804,   804,   804,   804,   819,   804,   820,   804,   821,
     822,   823,   804,   824,   824,   825,   825,   825,   826,   826,
     827,   827,   828,   830,   829,   832,   831,   833,   833,   833,
     835,   834,   837,   836,   838,   839,   839,   840,   840,   841,
     841,   842,   842,   843,   843,   844,   844,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   847,   846,   848,   848,   849,   849,   849,   849,   849,
     849,   849,   851,   850,   853,   852,   852,   854,   854,   854,
     854,   855,   855,   856,   856,   857,   857,   858,   859,   859,
     861,   860,   862,   863,   863,   864,   864,   865,   865,   866,
     866,   867,   867,   867,   867,   867,   867,   867,   868,   868,
     869,   869,   870,   870,   872,   871,   873,   873,   874,   874,
     876,   875,   877,   877,   878,   878,   879,   879,   880,   880,
     881,   881,   882,   883,   883,   883,   883,   883,   883,   884,
     884,   885,   885,   886,   886,   886,   886,   886,   886,   887,
     887,   887,   887,   887,   889,   888,   891,   890,   892,   893,
     893,   894,   894,   895,   895,   896,   896,   898,   897,   899,
     899,   901,   900,   900,   902,   902,   903,   903,   904,   904,
     905,   905,   905,   906,   907,   908,   908,   909,   910,   911,
     911,   911,   911,   912,   912,   912,   913,   912,   915,   914,
     916,   916,   917,   919,   918,   920,   920,   920,   920,   921,
     921,   922,   923,   923,   924,   925,   925,   926,   926,   926,
     926,   926,   926,   927,   927,   928,   929,   929,   930,   930,
     931,   931,   932,   932,   933,   933,   933,   934,   934,   934,
     934,   934,   934,   934,   934,   934,   934,   934,   934,   935,
     936,   937,   937,   938,   938,   939,   939,   940,   941,   941,
     942,   942,   942,   943,   944,   944,   945,   946,   946,   946,
     946,   946,   946,   946,   946,   946,   946,   946,   946,   946,
     947,   947,   948,   948,   949,   949,   949,   950,   950,   950,
     950,   950,   950,   951,   951,   951,   951,   951,   951,   951,
     951,   951,   951,   951,   951,   951,   952,   952,   952,   952,
     954,   953,   955,   956,   955,   957,   955,   959,   958,   960,
     960,   962,   961,   961,   964,   963,   965,   965,   965,   965,
     966,   966,   966,   966,   967,   968,   969,   970,   971,   973,
     972,   975,   974,   976,   976,   977,   977,   978,   979,   979,
     979,   980,   981,   982,   982,   984,   985,   986,   983,   987,
     987,   987,   989,   988,   991,   992,   990,   990,   993,   993,
     994,   994,   996,   997,   995,   999,  1000,   998,  1001,  1001,
    1002,  1002,  1003,  1005,  1004,  1006,  1007,  1004,  1008,  1008,
    1010,  1009,  1011,  1012,  1009,  1013,  1015,  1016,  1017,  1014,
    1019,  1018,  1020,  1020,  1021,  1021,  1023,  1022,  1024,  1024,
    1025,  1026,  1026,  1026,  1027,  1029,  1028,  1031,  1030,  1032,
    1034,  1033,  1035,  1033,  1036,  1037,  1038,  1033,  1039,  1033,
    1041,  1040,  1042,  1040,  1043,  1044,  1040,  1045,  1040,  1046,
    1046,  1047,  1047,  1047,  1048,  1049,  1050,  1051,  1051,  1052,
    1052,  1053,  1054,  1055,  1055,  1057,  1056,  1058,  1058,  1058,
    1059,  1059,  1059,  1060,  1061,  1061,  1061,  1062,  1062,  1062,
    1062,  1062,  1062,  1062,  1062,  1063,  1064,  1064,  1064,  1065,
    1065,  1065,  1065,  1065,  1066,  1067,  1067,  1067,  1068,  1068,
    1068,  1068,  1068,  1068,  1068,  1069,  1070,  1070,  1070,  1071,
    1071,  1071,  1072,  1073,  1074,  1075,  1076,  1077,  1077,  1077,
    1078,  1079,  1080,  1081,  1082,  1083,  1084,  1085,  1086,  1087,
    1087,  1088,  1088,  1089,  1089,  1091,  1090,  1090,  1090,  1092,
    1090,  1093,  1090,  1090,  1094,  1094,  1095,  1095,  1097,  1096,
    1096,  1096,  1098,  1096,  1099,  1096,  1100,  1101,  1101,  1103,
    1102,  1104,  1106,  1105,  1108,  1107,  1109,  1110,  1109,  1109,
    1109,  1111,  1109,  1109,  1112,  1109,  1113,  1113,  1114,  1114,
    1115,  1115,  1116,  1116,  1117,  1118,  1119,  1120,  1121,  1121,
    1122,  1123,  1122,  1124,  1122,  1125,  1125,  1126,  1127,  1128,
    1128,  1129,  1129,  1130,  1130,  1132,  1131,  1133,  1134,  1135,
    1134,  1136,  1134,  1134,  1134,  1134,  1137,  1137,  1138,  1138,
    1139,  1139,  1141,  1142,  1140,  1143,  1143,  1144,  1144,  1145,
    1145,  1146,  1146,  1148,  1147,  1149,  1150,  1150,  1151,  1151,
    1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1153,
    1153,  1153,  1154,  1154,  1155,  1157,  1156,  1158,  1158,  1159,
    1159,  1160,  1161,  1161,  1162,  1162,  1163,  1163,  1164,  1164,
    1165,  1165,  1166,  1166,  1167,  1167,  1168,  1168,  1169,  1169,
    1170,  1170,  1170,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1172,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1173,  1173,  1174,  1175,  1176,  1177,  1178,  1179,
    1179,  1179,  1179,  1179,  1179,  1179,  1180,  1180,  1180,  1181,
    1181,  1181,  1181,  1182,  1183,  1183,  1184,  1184,  1184,  1184,
    1185,  1185,  1187,  1186,  1188,  1186,  1189,  1186,  1190,  1186,
    1191,  1186,  1192,  1186,  1193,  1186,  1194,  1195,  1196,  1196,
    1197,  1198,  1198,  1199,  1199,  1200,  1202,  1201,  1204,  1203,
    1205,  1203,  1206,  1206,  1207,  1207,  1208,  1208,  1209,  1209,
    1210,  1210,  1210,  1210,  1211,  1210,  1210,  1210,  1212,  1212,
    1213,  1213,  1213,  1213,  1214,  1214,  1215,  1215,  1216,  1216,
    1216,  1216,  1218,  1217,  1219,  1219,  1219,  1220,  1221,  1221,
    1222,  1222,  1223,  1223,  1223,  1223,  1223,  1224,  1224,  1224,
    1224,  1224,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,
    1225,  1225,  1226,  1226,  1226,  1226,  1227,  1227,  1227,  1227,
    1227,  1227,  1227,  1227,  1228,  1228,  1228,  1228,  1228,  1228,
    1228,  1228,  1229,  1229,  1229,  1229,  1229,  1230,  1230,  1230,
    1230,  1230,  1230,  1230,  1230,  1230,  1230,  1230,  1230,  1230,
    1230,  1230,  1231,  1231,  1232,  1232,  1232,  1232,  1232,  1232,
    1232,  1232,  1233,  1234,  1234,  1235,  1235,  1236,  1236,  1236,
    1236,  1236,  1237,  1237,  1237,  1237,  1237,  1238,  1238,  1238,
    1239,  1239,  1240,  1240,  1240,  1241,  1242,  1242,  1242,  1242,
    1242,  1242,  1243,  1243,  1243,  1243,  1244,  1244,  1245,  1245,
    1246,  1246,  1247,  1247,  1248,  1248,  1249,  1249,  1250,  1250,
    1250,  1250,  1250,  1250,  1250,  1251,  1251,  1252,  1252,  1253,
    1254,  1255,  1256,  1256,  1256,  1257,  1257,  1257,  1257,  1257,
    1257,  1258,  1258,  1259,  1260,  1261,  1261,  1262,  1262,  1263,
    1263,  1264,  1264,  1265,  1265,  1266,  1266,  1267,  1268,  1268,
    1269,  1269,  1270,  1270,  1271,  1271,  1271,  1272,  1272,  1273,
    1273,  1273,  1273,  1274,  1274,  1276,  1275,  1277,  1277,  1278,
    1279,  1279,  1279,  1279,  1280,  1281,  1282,  1282,  1283,  1284,
    1284,  1285,  1285,  1286,  1286,  1287,  1288,  1288,  1289,  1289,
    1290,  1290,  1290,  1290,  1291,  1291,  1291,  1291,  1291,  1292,
    1292,  1292,  1292,  1292,  1293,  1293,  1294,  1294,  1295,  1295,
    1296,  1296,  1296,  1297,  1297,  1298,  1299,  1300,  1300,  1301,
    1301,  1302,  1302,  1303,  1303,  1304,  1304,  1305,  1305,  1306,
    1306,  1307,  1307,  1307,  1308,  1308,  1309,  1309,  1309,  1309,
    1309,  1309,  1310,  1310,  1311,  1312,  1312,  1313,  1313,  1313,
    1314,  1314,  1315,  1315,  1316,  1316,  1317,  1317,  1319,  1320,
    1318,  1321,  1318,  1318,  1322,  1318,  1323,  1318,  1324,  1318,
    1325,  1318,  1326,  1318,  1318,  1318,  1318,  1318,  1327,  1318,
    1318,  1328,  1329,  1318,  1330,  1330,  1330,  1330,  1331,  1331,
    1332,  1332,  1333,  1333,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1335,  1334,  1334,  1336,  1334,  1337,
    1334,  1334,  1334,  1334,  1334,  1338,  1339,  1339,  1341,  1340,
    1342,  1342,  1342,  1344,  1343,  1345,  1346,  1345,  1347,  1347,
    1348,  1349,  1349,  1350,  1351,  1351,  1351,  1351,  1351,  1351,
    1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,
    1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,
    1351,  1352,  1352,  1352,  1352,  1352,  1353,  1353,  1354,  1354,
    1355,  1355,  1356,  1356,  1358,  1357,  1359,  1359,  1360,  1360,
    1361,  1361,  1362,  1362,  1362,  1363,  1363,  1363,  1364,  1364,
    1364,  1364,  1366,  1365,  1367,  1365,  1365,  1365,  1368,  1369,
    1369,  1370,  1370,  1371,  1371,  1371,  1373,  1372,  1374,  1374,
    1375,  1375,  1375,  1376,  1376,  1376,  1377,  1377,  1379,  1378,
    1380,  1380,  1380,  1381,  1382,  1381,  1384,  1383,  1385,  1385,
    1386,  1386,  1387,  1387,  1387,  1388,  1388,  1390,  1389,  1391,
    1391,  1392,  1393,  1393,  1394,  1394,  1395,  1396,  1395,  1397,
    1398,  1397,  1399,  1399,  1399,  1400,  1400,  1400,  1401,  1401,
    1402,  1402,  1403,  1404,  1403,  1406,  1405,  1407,  1407,  1408,
    1408,  1409,  1409,  1409,  1409,  1409,  1409,  1410,  1410,  1412,
    1411,  1413,  1413,  1413,  1415,  1414,  1414,  1416,  1416,  1417,
    1417,  1418,  1420,  1419,  1421,  1421,  1422,  1422,  1423,  1424,
    1425,  1425,  1427,  1426,  1428,  1428,  1429,  1429,  1430,  1431,
    1433,  1432,  1435,  1434,  1436,  1436,  1437,  1437,  1438,  1439,
    1439,  1439,  1439,  1439,  1439,  1439,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1442,  1441,  1443,  1441,  1441,  1444,  1444,
    1446,  1445,  1445,  1447,  1447,  1449,  1448,  1448,  1451,  1450,
    1452,  1450,  1450,  1454,  1453,  1453,  1456,  1455,  1455,  1457,
    1458,  1457,  1457,  1457,  1459,  1459,  1460,  1460,  1461,  1461,
    1461,  1462,  1462,  1462,  1463,  1463,  1463,  1463,  1463,  1465,
    1464,  1466,  1467,  1467,  1468,  1469,  1469,  1470,  1470,  1471,
    1471,  1471,  1472,  1472,  1472,  1473,  1473,  1474,  1474,  1474,
    1474,  1475,  1475,  1476,  1476,  1476,  1477,  1477,  1477,  1478,
    1478,  1478,  1479,  1479,  1480,  1481,  1482,  1483,  1484,  1485,
    1485,  1485,  1485,  1485,  1486,  1486,  1486,  1487,  1487,  1487,
    1488,  1488,  1489,  1489,  1489,  1489,  1489,  1489,  1489,  1489,
    1489,  1489,  1489,  1490,  1490,  1490,  1490,  1490,  1490,  1491,
    1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,  1491,
    1491,  1491,  1491,  1492,  1492,  1492,  1492,  1492,  1492,  1492,
    1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,
    1492,  1492,  1493,  1493,  1494,  1494,  1495,  1495,  1496,  1496,
    1497,  1497,  1497,  1497,  1497,  1497,  1498,  1498,  1499,  1499,
    1500,  1500,  1500,  1501,  1501,  1501,  1501,  1501,  1501,  1502,
    1502,  1502,  1504,  1503,  1503,  1505,  1506,  1506,  1507,  1507,
    1507,  1507,  1508,  1509,  1509,  1509,  1509,  1509,  1509,  1509,
    1509,  1510,  1510,  1510,  1510,  1510,  1510,  1510,  1510,  1510,
    1510,  1510,  1510,  1510,  1510,  1510,  1510,  1510,  1510,  1510,
    1510,  1510,  1510,  1510,  1510,  1510,  1510,  1510,  1510,  1510,
    1511,  1511,  1511,  1512,  1512,  1513,  1513,  1513,  1513,  1513,
    1513,  1514,  1514,  1515,  1515,  1516,  1516,  1516,  1516,  1516,
    1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,
    1516,  1516,  1516,  1516,  1516,  1516,  1517,  1517,  1517,  1517,
    1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,
    1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,
    1517,  1517,  1517,  1517,  1517,  1517,  1517,  1517,  1518,  1518,
    1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,
    1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,  1518,
    1518,  1518,  1518,  1518,  1518,  1519,  1519,  1519,  1519,  1519,
    1519,  1519,  1519,  1519,  1521,  1520,  1520,  1522,  1522,  1523,
    1523,  1524,  1524,  1525,  1525,  1526,  1526,  1527,  1528,  1528,
    1528,  1528,  1528,  1528,  1528,  1529,  1530,  1528,  1528,  1528,
    1528,  1528,  1528,  1528,  1528,  1528,  1528,  1528,  1531,  1528,
    1532,  1532,  1533,  1533,  1534,  1534,  1534,  1534,  1534,  1534,
    1534,  1534,  1534,  1534,  1534,  1534,  1534,  1535,  1537,  1536,
    1536,  1538,  1538,  1539,  1540,  1542,  1541,  1543,  1543,  1543,
    1543,  1544,  1544,  1545,  1545,  1546,  1546,  1547,  1547,  1548,
    1548,  1549,  1550,  1551,  1551,  1551,  1553,  1552,  1554,  1555,
    1554,  1556,  1554,  1557,  1554,  1554,  1554,  1554,  1558,  1558,
    1558,  1558,  1558,  1558,  1558,  1558,  1559,  1559,  1559,  1560,
    1560,  1561,  1561,  1562,  1562,  1563,  1563,  1564,  1564,  1565,
    1565,  1566,  1566,  1567,  1567,  1568,  1569,  1569,  1570,  1570,
    1571,  1572,  1571,  1573,  1571,  1571,  1574,  1571,  1575,  1571,
    1571,  1576,  1571,  1577,  1571,  1571,  1578,  1578,  1578,  1579,
    1579,  1580,  1580,  1581,  1582,  1582,  1584,  1583,  1585,  1585,
    1586,  1586,  1587,  1586,  1586,  1586,  1586,  1588,  1588,  1589,
    1588,  1590,  1591,  1593,  1592,  1594,  1595,  1595,  1596,  1598,
    1597,  1600,  1601,  1599,  1602,  1603,  1604,  1605,  1605,  1606,
    1606,  1606,  1606,  1607,  1607,  1609,  1608,  1610,  1608,  1611,
    1611,  1612,  1613,  1612,  1615,  1614,  1616,  1616,  1617,  1617,
    1618,  1618,  1619,  1619,  1620,  1620,  1620,  1620,  1620,  1620,
    1620,  1620,  1620,  1620,  1620,  1620,  1621,  1621,  1621,  1621,
    1621,  1621,  1621,  1621,  1621,  1622,  1622,  1622,  1622,  1623,
    1623,  1623,  1624,  1624,  1625,  1625,  1626,  1627,  1626,  1628,
    1629,  1628,  1630,  1630,  1631,  1631,  1632,  1632,  1633,  1633,
    1633,  1634,  1634,  1635,  1635,  1636,  1638,  1637,  1639,  1639,
    1640,  1640,  1641,  1641,  1642,  1642,  1643,  1643,  1644,  1644,
    1645,  1645,  1645,  1646,  1646,  1646,  1647,  1647,  1647,  1647,
    1647,  1647,  1648,  1649,  1649,  1650,  1651,  1651,  1653,  1652,
    1654,  1654,  1655,  1655,  1655,  1656,  1656,  1657,  1658,  1658,
    1658,  1659,  1659,  1659,  1660,  1660,  1660,  1660,  1660,  1660,
    1661,  1662,  1662,  1662,  1662,  1663,  1663,  1664,  1664,  1665,
    1665,  1665,  1665,  1665,  1665,  1666,  1666,  1666,  1666,  1666,
    1667,  1667,  1667,  1667,  1668,  1668,  1668,  1668,  1668,  1669,
    1669,  1669,  1669,  1669,  1670,  1671,  1671,  1672,  1672,  1673,
    1673,  1673,  1675,  1674,  1676,  1676,  1677,  1677,  1678,  1680,
    1679,  1681,  1681,  1682,  1683,  1683,  1683,  1684,  1686,  1687,
    1685,  1685,  1685,  1689,  1688,  1691,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1692,  1690,  1690,  1690,
    1690,  1690,  1690,  1693,  1690,  1694,  1694,  1695,  1696,  1697,
    1697,  1698,  1699,  1699,  1700,  1700,  1701,  1701,  1703,  1704,
    1702,  1706,  1707,  1705,  1708,  1708,  1708,  1708,  1709,  1709,
    1710,  1710,  1711,  1712,  1712,  1712,  1713,  1712,  1714,  1714,
    1715,  1715,  1715,  1716,  1716,  1717,  1717,  1718,  1719,  1719,
    1720,  1720,  1721,  1721,  1722,  1722,  1724,  1723,  1726,  1725,
    1727,  1727,  1728,  1728,  1729,  1729,  1730,  1730,  1731,  1731,
    1731,  1732,  1733,  1734,  1732,  1736,  1737,  1735,  1738,  1738,
    1739,  1740,  1740,  1741,  1742,  1742,  1744,  1743,  1745,  1745,
    1746,  1746,  1747,  1748,  1749,  1748,  1750,  1748,  1751,  1751,
    1752,  1752,  1753,  1753,  1754,  1754,  1755,  1755,  1756,  1756,
    1756,  1758,  1759,  1757,  1760,  1760,  1760,  1761,  1761,  1762,
    1762,  1763,  1763,  1764,  1764,  1764,  1764,  1764,  1764,  1764,
    1764,  1764,  1765,  1765,  1767,  1766,  1768,  1768,  1768,  1768,
    1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,
    1769,  1768,  1770,  1768,  1768,  1768,  1768,  1768,  1768,  1768,
    1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,
    1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,
    1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,  1768,
    1768,  1768,  1768,  1768,  1768,  1768,  1768,  1771,  1771,  1771,
    1772,  1772,  1773,  1773,  1774,  1774,  1775,  1775,  1776,  1776,
    1777,  1777,  1778,  1778,  1779,  1779,  1779,  1781,  1780,  1782,
    1780,  1783,  1783,  1783,  1783,  1783,  1784,  1784,  1785,  1786,
    1786,  1786,  1787,  1787,  1788,  1788,  1788,  1790,  1789,  1792,
    1791,  1791,  1793,  1793,  1794,  1795,  1794,  1796,  1796,  1797,
    1797,  1797,  1797,  1797,  1797,  1797,  1797,  1797,  1797,  1797,
    1797,  1797,  1797,  1797,  1797,  1798,  1798,  1799,  1799,  1800,
    1800,  1800,  1801,  1802,  1802,  1804,  1803,  1805,  1805,  1807,
    1806,  1808,  1806,  1806,  1809,  1809,  1810,  1810,  1812,  1811,
    1813,  1814,  1814,  1816,  1815,  1817,  1817,  1817,  1818,  1818,
    1818,  1818,  1819,  1819,  1820,  1821,  1823,  1824,  1825,  1826,
    1822,  1827,  1827,  1828,  1828,  1829,  1829,  1829,  1830,  1830,
    1830,  1831,  1831,  1832,  1832,  1833,  1833,  1833,  1833,  1834,
    1834,  1835,  1835,  1836,  1836,  1837,  1837,  1838,  1838,  1839,
    1839,  1840,  1840,  1840,  1841,  1841,  1842,  1842,  1843,  1843,
    1844,  1844,  1845,  1846,  1846,  1846,  1846,  1847,  1847,  1848,
    1848,  1848,  1849,  1849,  1849,  1850,  1850,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1852,  1852,  1852,
    1852,  1852,  1853,  1853,  1853,  1854,  1854,  1856,  1855,  1857,
    1857,  1858,  1858,  1860,  1859,  1861,  1861,  1862,  1862,  1863,
    1864,  1864,  1865,  1865,  1866,  1866,  1867,  1868,  1868,  1868,
    1868,  1868,  1869,  1869,  1869,  1869,  1869,  1870,  1870,  1870,
    1870,  1871,  1871,  1871,  1872,  1872,  1873,  1874,  1874,  1875,
    1875,  1875,  1876,  1877,  1878,  1879,  1880,  1880,  1881,  1881,
    1882,  1882,  1882,  1883,  1883,  1884,  1884,  1885,  1885,  1886,
    1886,  1887,  1888,  1888,  1888,  1889,  1889,  1889,  1890,  1890,
    1891,  1892,  1892,  1892,  1892,  1892,  1892,  1892,  1892,  1892,
    1893,  1893,  1893,  1893,  1893,  1893,  1893,  1893,  1893,  1893,
    1894,  1894,  1894,  1894,  1894,  1894,  1895,  1895,  1895,  1895,
    1895,  1895,  1895,  1895,  1895,  1896,  1896,  1896,  1896,  1896,
    1896,  1896,  1897,  1897,  1897,  1897,  1897,  1897,  1897,  1897,
    1897,  1898,  1898,  1898,  1898,  1898,  1898,  1898,  1899,  1899,
    1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,
    1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,
    1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,
    1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,
    1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,  1899,
    1899,  1899,  1899,  1900,  1900,  1900,  1900,  1900,  1900,  1901,
    1901,  1901,  1901,  1901,  1901,  1901,  1901,  1901,  1901,  1902,
    1902,  1902,  1903,  1903,  1903,  1904,  1904,  1904,  1905,  1905,
    1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,  1905,
    1905,  1905,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1906,  1906,  1906,  1908,  1907,  1909,  1910,  1907,  1912,
    1911,  1913,  1911,  1914,  1911,  1915,  1915,  1917,  1916,  1918,
    1916,  1919,  1916,  1921,  1920,  1920,  1922,  1922,  1924,  1923,
    1925,  1923,  1927,  1926,  1926,  1928,  1928,  1928,  1929,  1929,
    1929,  1929,  1930,  1930,  1930,  1930,  1931,  1931,  1931,  1932,
    1932,  1932,  1932,  1932,  1932,  1932,  1932,  1932,  1932,  1932,
    1932,  1932,  1932,  1932,  1933,  1933,  1933,  1933,  1934,  1935,
    1936,  1936,  1937,  1937,  1937,  1937,  1938,  1938,  1939,  1939,
    1939,  1940,  1940,  1940,  1940,  1940,  1942,  1941,  1943,  1943,
    1943,  1944,  1944,  1945,  1945,  1946,  1947,  1947,  1947,  1947,
    1947,  1949,  1948,  1950,  1950,  1951,  1950,  1952,  1952,  1953,
    1953,  1954,  1954,  1954,  1954,  1955,  1954,  1956,  1956,  1956,
    1956,  1956,  1957,  1958,  1958,  1958,  1958,  1958,  1958,  1958,
    1958,  1959,  1959,  1960,  1961,  1961,  1961,  1961,  1961,  1961,
    1961,  1962,  1962,  1963,  1963,  1964,  1964,  1965,  1966,  1966,
    1967,  1967,  1968,  1968,  1969,  1969,  1970,  1970,  1972,  1971,
    1973,  1971,  1974,  1971,  1975,  1971,  1971,  1971,  1971,  1971,
    1971,  1971,  1971,  1971,  1971,  1971,  1971,  1971,  1971,  1971,
    1971,  1971,  1971,  1971,  1971,  1971,  1971,  1971,  1971,  1971,
    1971,  1971,  1971,  1976,  1976,  1977,  1977,  1978,  1978,  1978,
    1979,  1979,  1979,  1979,  1980,  1980,  1981,  1981,  1982,  1982,
    1983,  1983,  1984,  1984,  1985,  1985,  1985,  1985,  1985,  1986,
    1986,  1987,  1987,  1988,  1989,  1989,  1989,  1989,  1989,  1990,
    1990,  1990,  1990,  1990,  1991,  1991,  1992,  1992,  1993,  1993,
    1994,  1994,  1995,  1995,  1996,  1996,  1998,  1997,  1999,  2000,
    2000,  2001,  2001,  2002,  2002,  2002,  2003,  2003,  2003,  2004,
    2005,  2005,  2005,  2006,  2007,  2008,  2008,  2008,  2009,  2009,
    2011,  2010,  2013,  2012,  2015,  2014,  2016,  2016,  2017,  2018,
    2018,  2018,  2019,  2019,  2021,  2020,  2022,  2023,  2023,  2024,
    2024,  2025,  2025,  2025,  2026,  2027,  2028,  2029,  2029,  2030,
    2030,  2031,  2031,  2031,  2031,  2031,  2031,  2031,  2031,  2031,
    2032,  2032,  2033,  2034,  2035,  2035,  2035,  2036,  2036,  2037,
    2037,  2038,  2038,  2039,  2039,  2041,  2040,  2042,  2042,  2042,
    2042,  2042,  2042,  2042,  2043,  2043,  2043,  2043,  2044,  2044,
    2045,  2045,  2047,  2048,  2049,  2050,  2051,  2046,  2052,  2054,
    2053,  2056,  2057,  2055,  2059,  2060,  2058,  2061,  2062,  2063,
    2063,  2064,  2064,  2065,  2065,  2065,  2065,  2065,  2065,  2066,
    2066,  2067,  2067,  2067,  2068,  2068,  2068,  2069,  2069,  2069,
    2070,  2070,  2071,  2072,  2071,  2073,  2073,  2074,  2074,  2075,
    2075,  2076
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     4,     0,     2,     0,     4,     0,     5,     0,
       0,     3,     3,     1,     1,     0,     3,     0,     6,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       0,     1,     1,     0,     7,     0,     8,     0,    15,     0,
      14,     0,    14,     0,     6,     0,    10,     0,    11,     0,
       5,     0,     5,     0,     5,     0,     5,     0,     5,     0,
       6,     7,     6,     4,     3,     0,     3,     0,    13,     0,
       0,     0,    16,     1,     3,     1,     1,     2,     1,     2,
       1,     2,     0,     0,     7,     0,     6,     4,     4,     1,
       0,     5,     0,     5,     2,     0,     1,     1,     2,     3,
       3,     1,     1,     0,     1,     1,     2,     3,     2,     1,
       3,     2,     1,     3,     3,     3,     1,     1,     1,     1,
       3,     0,    12,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     0,    12,     0,     6,     2,     0,     1,     3,
       1,     0,     2,     0,     2,     0,     1,     4,     0,     2,
       0,     2,     0,     3,     1,     0,     1,     0,     2,     0,
       2,     2,     2,     2,     2,     3,     3,     1,     2,     1,
       1,     2,     0,     1,     0,     2,     1,     2,     3,     3,
       0,     4,     0,     3,     0,     1,     3,     1,     0,     1,
       3,     1,     1,     2,     6,     8,     4,     6,     3,     0,
       1,     3,     1,     3,     7,     9,     5,     7,     4,     0,
       1,     1,     1,     2,     0,     4,     0,     4,     0,     1,
       1,     1,     1,     0,     3,     2,     3,     0,     2,     0,
       1,     0,     3,     1,     2,     3,     2,     3,     0,     1,
       1,     3,     5,     1,     2,     1,     3,     3,     1,     3,
       5,     5,     4,     1,     4,     2,     0,     6,     0,     6,
       0,     3,     0,     0,     3,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     3,     0,     1,     1,     1,     1,
       2,     1,     1,     2,     3,     3,     1,     1,     0,     1,
       0,     2,     3,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       4,     0,     1,     1,     3,     1,     3,     3,     1,     2,
       1,     1,     1,     1,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     0,     2,     2,     1,     1,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     5,     1,     0,     3,     0,     5,     0,     2,     1,
       1,     0,     3,     1,     0,     2,     1,     2,     3,     4,
       1,     2,     3,     4,     2,     2,     2,     0,     0,     0,
       3,     0,     3,     1,     3,     0,     3,     3,     3,     4,
       5,     2,     2,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     0,     6,     0,     0,     4,     1,     1,     2,
       1,     2,     0,     0,     6,     0,     0,     6,     0,     2,
       0,     1,     1,     0,     6,     0,     0,     9,     0,     2,
       0,     5,     0,     0,     7,     0,     0,     0,     0,     7,
       0,     4,     0,     2,     1,     2,     0,     5,     0,     1,
       2,     5,     3,     5,     3,     0,     6,     0,     6,     1,
       0,     5,     0,     5,     0,     0,     0,    11,     0,     5,
       0,     3,     0,     3,     0,     0,     8,     0,     3,     1,
       1,     1,     1,     1,     2,     4,     5,     0,     4,     4,
       4,     3,     3,     2,     2,     0,     2,     1,     2,     3,
       1,     1,     1,     1,     1,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     1,     1,     2,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     3,     1,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     4,     0,
       1,     1,     1,     1,     1,     0,     7,     3,     3,     0,
       5,     0,     5,     1,     2,     4,     0,     4,     0,     7,
       5,     3,     0,     5,     0,     5,     1,     0,     1,     0,
       4,     0,     0,     3,     0,     6,     6,     0,     4,     2,
       2,     0,     3,     2,     0,     3,     0,     1,     0,     3,
       0,     1,     1,     3,     1,     4,     5,     5,     0,     2,
       0,     0,     7,     0,    10,     1,     3,     1,     1,     0,
       2,     0,     3,     1,     3,     0,     6,     1,     0,     0,
       4,     0,     3,     1,     1,     1,     1,     1,     1,     3,
       1,     3,     0,     0,     5,     1,     3,     1,     1,     0,
       3,     1,     3,     0,     4,     1,     0,     1,     2,     1,
       3,     4,     3,     3,     3,     3,     4,     4,     3,     0,
       4,     2,     0,     2,     5,     0,     3,     1,     1,     2,
       1,     1,     0,     1,     0,     1,     1,     2,     1,     1,
       0,     3,     0,     3,     1,     3,     0,     1,     1,     2,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     0,     6,     1,     1,     3,     4,     4,
       2,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     1,     0,     1,     2,     4,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     2,     0,     9,     0,    10,     0,     9,     0,     9,
       0,    10,     0,    11,     0,    10,     2,     7,     0,     1,
       4,     0,     1,     0,     1,     2,     0,     4,     0,     3,
       0,     3,     0,     1,     2,     1,     0,     1,     2,     1,
       0,     1,     2,     3,     0,     6,     5,     5,     0,     2,
       0,     1,     1,     1,     0,     1,     2,     1,     1,     2,
       2,     1,     0,     3,     1,     1,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     2,     1,     1,     3,     3,
       3,     3,     0,     1,     2,     2,     3,     3,     2,     3,
       3,     4,     3,     3,     3,     3,     2,     3,     3,     3,
       2,     2,     3,     1,     2,     2,     2,     2,     3,     3,
       3,     2,     2,     3,     3,     2,     3,     2,     2,     2,
       2,     2,     5,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     2,     1,     2,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     2,
       0,     3,     0,     1,     1,     5,     0,     1,     1,     1,
       2,     2,     3,     3,     3,     3,     0,     1,     0,     1,
       0,     1,     0,     1,     0,     1,     2,     1,     1,     2,
       4,     1,     3,     2,     1,     0,     2,     0,     1,     2,
       2,     2,     2,     2,     1,     1,     3,     3,     3,     3,
       2,     1,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     0,     1,     2,     1,     1,     0,     1,     1,
       2,     1,     2,     0,     1,     0,     4,     1,     1,     1,
       0,     1,     2,     1,     1,     2,     1,     3,     3,     1,
       1,     0,     2,     0,     1,     5,     0,     3,     3,     1,
       0,     2,     2,     2,     0,     3,     3,     6,     6,     1,
       1,     2,     2,     2,     2,     2,     1,     1,     0,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     1,     0,
       1,     0,     1,     1,     2,     1,     2,     1,     2,     0,
       2,     0,     2,     2,     2,     2,     3,     2,     3,     3,
       3,     3,     1,     1,     1,     1,     3,     1,     1,     1,
       4,     2,     1,     4,     0,     1,     1,     3,     0,     0,
       8,     0,     5,     7,     0,     5,     0,     5,     0,    10,
       0,     9,     0,    11,     3,     4,     3,     3,     0,     8,
       7,     0,     0,     7,     0,     3,     1,     4,     0,     3,
       0,     2,     0,     1,     0,     2,     2,     2,     2,     1,
       1,     1,     4,     4,     0,     6,     4,     0,     5,     0,
       6,     4,     3,     1,     7,     2,     1,     1,     0,     6,
       0,     3,     2,     0,     5,     0,     0,     6,     1,     3,
       1,     1,     3,     3,     3,     2,     2,     4,     2,     7,
       6,     5,     5,     4,     5,     4,     4,     2,     2,     7,
       6,     3,     5,     1,     1,     1,     1,     1,     3,     3,
       3,     0,     1,     1,     2,     2,     3,     3,     3,     3,
       0,     1,     0,     1,     0,     2,     0,     1,     2,     1,
       1,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     0,     6,     0,     5,     4,     4,     3,     0,
       1,     1,     3,     3,     2,     2,     0,     2,     1,     3,
       0,     1,     1,     0,     2,     4,     1,     3,     0,     5,
       0,     1,     1,     3,     0,     4,     0,     4,     0,     1,
       1,     2,     1,     1,     1,     0,     2,     0,     5,     1,
       3,     2,     0,     3,     1,     4,     1,     0,     4,     1,
       0,     4,     0,     1,     3,     0,     1,     3,     1,     1,
       2,     6,     3,     0,     4,     0,     3,     0,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     0,     2,     0,
       6,     0,     1,     1,     0,     4,     4,     3,     5,     1,
       3,     4,     0,     6,     1,     1,     1,     3,     2,     3,
       1,     1,     0,     6,     1,     1,     1,     3,     3,     4,
       0,     6,     0,     2,     0,     4,     0,     2,     2,     3,
       1,     2,     2,     3,     4,     4,     3,     1,     2,     2,
       3,     4,     4,     0,     3,     0,     5,     3,     4,     2,
       0,     2,     3,     4,     2,     0,     2,     3,     0,     2,
       0,     7,     3,     0,     4,     2,     0,     4,     2,     2,
       0,     4,     2,     3,     1,     1,     1,     1,     1,     1,
       2,     1,     2,     3,     1,     4,     2,     2,     3,     0,
       3,     5,     0,     1,     2,     1,     1,     0,     1,     0,
       1,     1,     2,     1,     2,     0,     2,     3,     1,     4,
       4,     2,     1,     1,     1,     1,     0,     3,     5,     3,
       1,     1,     3,     4,     0,     0,     0,     0,     0,     0,
       2,     2,     1,     1,     0,     2,     3,     0,     2,     3,
       0,     2,     3,     3,     3,     2,     3,     4,     3,     4,
       3,     4,     1,     3,     4,     3,     3,     6,     1,     5,
       6,     5,     7,     6,     8,     5,     6,     4,     4,     5,
       3,     4,     1,     3,     3,     3,     3,     3,     3,     3,
       5,     5,     5,     6,     6,     3,     3,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     2,     1,     1,     1,     2,     1,
       2,     2,     0,     3,     1,     4,     1,     3,     1,     1,
       1,     1,     3,     1,     4,     4,     4,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     6,     4,     4,     7,     6,     3,     4,     6,
       6,     4,     4,     4,     4,     4,     4,     6,     8,    10,
       1,     1,     3,     1,     3,     1,     2,     2,     2,     2,
       2,     1,     3,     4,     6,     4,     6,     2,     2,     4,
       4,     4,    10,     6,     8,     6,     4,     4,     6,     4,
       3,     4,     1,     4,     3,     4,     6,     8,     2,     2,
       8,     8,     6,     8,     6,     6,     6,     6,     2,     6,
       6,     8,     8,     6,     8,     6,     2,     8,     8,     4,
       2,     2,     2,     6,     6,     4,     4,     8,     4,     4,
       4,     4,     3,     8,     6,     8,     4,     6,     4,     6,
       4,     4,     4,     6,     8,     4,     3,     6,     4,     6,
       5,     8,     7,    10,     1,     6,     4,     4,     4,     4,
       4,     6,     4,     6,     0,     5,     6,     2,     3,     0,
       4,     0,     3,     0,     1,     1,     3,     4,     4,     5,
       4,     4,     4,     5,     4,     0,     0,     7,     4,     5,
       4,     5,     4,     4,     4,     4,     4,     5,     0,     9,
       3,     3,     1,     1,     3,     3,     3,     3,     3,     4,
       4,     4,     6,     4,     6,     4,     6,     5,     0,     7,
       4,     4,     4,     4,     1,     0,     3,     3,     1,     3,
       5,     0,     1,     0,     2,     0,     3,     4,     2,     0,
       1,     1,     2,     1,     3,     3,     0,     3,     2,     0,
       4,     0,     4,     0,     4,     2,     1,     1,     1,     1,
       2,     1,     2,     2,     1,     2,     1,     2,     2,     0,
       1,     1,     3,     1,     3,     1,     3,     4,     5,     1,
       3,     3,     3,     1,     1,     1,     1,     4,     1,     3,
       3,     0,     6,     0,     8,     4,     0,     8,     0,    10,
       6,     0,     8,     0,    10,     6,     1,     2,     1,     1,
       2,     0,     1,     5,     1,     1,     0,     6,     6,     9,
       1,     2,     0,     4,     2,     3,     3,     1,     1,     0,
       3,     2,     1,     0,     3,     2,     1,     1,     3,     0,
       3,     0,     0,     5,     0,     1,     0,     0,     1,     0,
       2,     3,     3,     1,     1,     0,     7,     0,     7,     1,
       2,     0,     0,     2,     0,     2,     0,     1,     1,     1,
       1,     3,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     0,     0,     3,     0,
       0,     3,     2,     0,     0,     4,     4,     2,     0,     1,
       1,     0,     2,     3,     1,     3,     0,     7,     0,     1,
       0,     3,     0,     3,     0,     3,     1,     1,     1,     4,
       2,     2,     2,     1,     2,     2,     0,     3,     2,     2,
       3,     3,     3,     3,     1,     2,     0,     1,     0,     4,
       4,     2,     0,     1,     1,     0,     1,     1,     2,     5,
       4,     1,     3,     3,     1,     3,     1,     1,     1,     1,
       1,     0,     2,     3,     4,     0,     1,     2,     2,     2,
       1,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       2,     1,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     6,     0,     1,     3,     1,     3,     0,
       2,     3,     1,     1,     2,     1,     3,     2,     0,     0,
       7,     2,     1,     0,     3,     0,     8,     7,     4,     4,
       5,     6,     4,     4,     5,     5,     0,     6,     4,     4,
       5,     6,     4,     0,     6,     1,     3,     1,     2,     1,
       3,     1,     0,     2,     0,     2,     0,     1,     0,     0,
       8,     0,     0,     6,     0,     1,     1,     1,     1,     1,
       2,     1,     1,     1,     3,     4,     0,     3,     3,     1,
       2,     2,     1,     3,     1,     3,     1,     3,     1,     1,
       0,     1,     1,     1,     1,     1,     0,     4,     0,     4,
       0,     1,     0,     1,     3,     1,     5,     3,     1,     1,
       1,     0,     0,     0,     7,     0,     0,    11,     3,     1,
       3,     3,     1,     3,     0,     1,     0,     3,     0,     3,
       2,     3,     3,     5,     0,     5,     0,     6,     0,     2,
       1,     3,     2,     4,     0,     2,     0,     2,     1,     1,
       1,     0,     0,     7,     0,     2,     2,     0,     1,     0,
       1,     1,     3,     1,     1,     2,     2,     2,     1,     1,
       1,     1,     0,     3,     0,     3,     2,     4,     4,     3,
       4,     4,     1,     3,     3,     3,     3,     6,     2,     2,
       0,     6,     0,     7,     5,     2,     1,     1,     1,     5,
       5,     2,     2,     1,     4,     3,     2,     3,     2,     2,
       1,     4,     4,     3,     3,     3,     2,     3,     2,     3,
       3,     3,     3,     4,     3,     2,     3,     3,     3,     3,
       4,     3,     3,     4,     3,     3,     3,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     1,     1,
       0,     2,     0,     2,     0,     3,     3,     0,     4,     0,
       4,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     1,     0,     3,     0,     1,     1,     0,     4,     0,
       4,     1,     0,     1,     4,     0,     3,     3,     1,     2,
       2,     2,     2,     3,     3,     2,     1,     1,     1,     1,
       2,     1,     1,     1,     2,     0,     1,     0,     5,     0,
       1,     3,     1,     0,     3,     0,     3,     3,     1,     0,
       4,     0,     3,     2,     0,     1,     0,     2,     0,     3,
       3,     2,     2,     0,     5,     0,     1,     1,     0,     1,
       1,     2,     1,     2,     1,     2,     0,     0,     0,     0,
      22,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     0,     2,     2,     1,     3,     4,     3,     3,     0,
       2,     2,     1,     3,     3,     0,     4,     0,     3,     1,
       1,     0,     3,     2,     3,     1,     1,     2,     0,     2,
       3,     1,     5,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     2,     2,     0,     1,     0,     4,     0,
       1,     1,     3,     0,     9,     0,     3,     1,     3,     1,
       1,     1,     3,     5,     3,     5,     1,     1,     3,     4,
       5,     4,     1,     3,     4,     4,     5,     1,     5,     3,
       2,     1,     3,     2,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     3,     1,     1,     1,     1,     3,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     3,     0,     0,     7,     0,
       4,     0,     6,     0,     7,     1,     3,     0,     3,     0,
       3,     0,     3,     0,     3,     2,     0,     2,     0,     2,
       0,     4,     0,     3,     1,     1,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     2,     3,     5,     5,     3,
       5,     5,     4,     6,     8,     8,     2,     3,     3,     3,
       5,     2,     3,     3,     1,     1,     3,     3,     1,     3,
       2,     2,     2,     2,     2,     1,     1,     3,     1,     4,
       4,     1,     1,     1,     1,     1,     0,     5,     0,     2,
       1,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       2,     0,     3,     4,     3,     0,     7,     1,     2,     1,
       1,     1,     1,     1,     1,     0,     5,     1,     1,     1,
       1,     1,     3,     6,     6,     6,     6,     7,     7,     5,
       3,     4,     1,     3,     8,     8,     8,     8,     9,     6,
       4,     0,     3,     0,     3,     1,     3,     2,     1,     1,
       0,     1,     1,     2,     0,     1,     1,     3,     0,     3,
       0,     3,     0,     3,     0,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     2,     2,     0,     1,     3,     1,     2,     2,     2,
       1,     3,     3,     1,     1,     3,     1,     3,     1,     3,
       1,     1,     1,     1,     4,     5,     4,     6,     1,     0,
       3,     3,     1,     1,     0,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     1,     0,     2,     0,     2,
       0,     3,     2,     1,     2,     1,     0,     3,     1,     0,
       1,     0,     1,     0,     3,     2,     0,     1,     2,     4,
       4,     5,     4,     2,     3,     1,     1,     1,     0,     1,
       0,     4,     0,     4,     0,     2,     2,     1,     2,     0,
       1,     1,     1,     1,     0,     3,     3,     3,     4,     2,
       3,     1,     1,     2,     4,     0,     0,     0,     1,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     3,     3,     3,     0,     1,     3,
       3,     0,     3,     1,     3,     0,     4,     3,     1,     2,
       2,     3,     4,     4,     0,     3,     4,     4,     1,     1,
       0,     2,     0,     0,     0,     0,     0,    19,     6,     0,
       3,     0,     0,     9,     0,     0,     8,     2,     2,     0,
       1,     1,     1,     4,     4,     3,     4,     3,     3,     0,
       3,     1,     3,     5,     1,     1,     1,     0,     1,     1,
       0,     2,     0,     0,     3,     0,     2,     5,     3,     3,
       3,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(!thd->bootstrap) &&
                unlikely(!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 1674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 1699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 1780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 24597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 1794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "PREPARE..FROM"));
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[-2].ident_sys);
          }
#line 24610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 1805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 24616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 1807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->prepared_stmt_code= (yyvsp[0].item);
            Lex->expr_allows_subselect= true;
          }
#line 24625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 1815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[0].ident_sys);
          }
#line 24635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 1821 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 24641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 1823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE IMMEDIATE"));
            Lex->sql_command= SQLCOM_EXECUTE_IMMEDIATE;
          }
#line 24652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 1830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 24658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 1835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->expr_allows_subselect= false; }
#line 24664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 1837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0),
                               "EXECUTE..USING"));
            Lex->expr_allows_subselect= true;
          }
#line 24675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 1852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->prepared_stmt_params.push_back((yyvsp[0].item),
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 24685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 1863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 24694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 1868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 24704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 1879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 24712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 1883 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 24718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 1893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 24726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 1897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 24734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 1901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 24742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 1905 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 1909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 1913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 1923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 1928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 24789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 1932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 24797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 1936 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 24805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 1940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 24813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 1944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 24821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 1948 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 1953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 24838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 1957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 24846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 1962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 1990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 24886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 1994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 1998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 114:
#line 2013 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 24910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 24918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2039 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 24926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 24934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 24953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 24961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2069 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 24971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 24981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 24991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 25001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2096 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 25010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 25022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-3].num),
                                                     (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
               MYSQL_YYABORT;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 25050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 25060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                           TL_OPTION_UPDATING,
                                                           TL_WRITE,
                                                           MDL_EXCLUSIVE)))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 25093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->select_lex.table_list.first->db.str,
                       lex->select_lex.table_list.first->table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            lex->current_select= &lex->select_lex;
            create_table_set_open_action_and_adjust_tables(lex);
          }
#line 25121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2210 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_index_prepare((yyvsp[0].table))))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_create_index((yyvsp[-5].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF,
                                               (yyvsp[-6].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2232 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 25183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 25195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2248 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                              DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid),
                                              (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 25206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2255 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 25221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 25233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 25245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 25257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2275 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 25269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.set((yyvsp[-2].object_ddl_options)); }
#line 25281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-3].object_ddl_options));
            Lex->udf.type= UDFTYPE_AGGREGATE;
          }
#line 25296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2290 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2293 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-6].object_ddl_options) | (yyvsp[-4].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 25322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 25330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 25338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 25344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2315 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE,
                                                &sp_handler_package_spec,
                                                (yyvsp[-3].spname), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_chistics(Lex->sp_chistics);
          }
#line 25365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-5].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 25374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE_BODY,
                                                &sp_handler_package_body,
                                                (yyvsp[-3].spname), (yyvsp[-8].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_chistics(Lex->sp_chistics);
            Lex->sp_block_init(thd);
          }
#line 25390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2352 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 25399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 25409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2363 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-10].spname), (yyvsp[0].spname), (yyvsp[-7].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 25418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 25428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 25434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 25452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex)= new (thd->mem_root)
                           sp_lex_local(thd, thd->lex))))
              MYSQL_YYABORT;
            thd->m_parser_state->m_yacc.reset_before_substatement();
          }
#line 25463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_FUNCTION;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_function)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
            (void) is_native_function_with_warn(thd, &(yyvsp[0].ident_sys));
          }
#line 25481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-6].lex);
            (yyval.lex)= (yyvsp[-5].lex);
          }
#line 25492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_procedure)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
          }
#line 25509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2457 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
            (yyval.lex)= (yyvsp[-4].lex);

          }
#line 25521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 25533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 25545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 25551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2492 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 25563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 25579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 25591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2523 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                        thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 25602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 25613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2555 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 25624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->udf.type= UDFTYPE_FUNCTION; }
#line 25636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 25642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 25671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2597 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 25703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2617 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 25715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 25727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 25739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 25751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 25763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 25775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 25791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 25808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 25818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 25824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2710 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 25833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
            my_casedn_str(system_charset_info,
		         (char*) Lex->server_options.host.str);
          }
#line 25844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 2722 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 25853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 2727 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 25862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 2732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 25871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2737 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 25880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 2742 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 25888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2749 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 25909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 2770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 25921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2781 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 25930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 25938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 2794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2796 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 2802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 25964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 2808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 2817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 25985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 2824 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 25993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 2832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 26001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 2838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 2844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 26018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 2853 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 2855 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 26033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 2862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 26069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 2894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->event_parse_data->body_changed= TRUE;
          }
#line 26083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 2907 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= null_clex_str;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           bzero((char *)&(lex->mqh),sizeof(lex->mqh));
         }
#line 26099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 2922 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 2927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 2934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= NULL; }
#line 26123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 2935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= (yyvsp[0].spname); }
#line 26129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 2939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 2940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 2944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 2945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 2951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 26159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 2953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 26165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 2955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 26171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 2957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 26177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 2959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 26183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 2961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 26189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 2963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 26195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 2968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 26201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 2970 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 26207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 2974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 2975 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 2980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 2984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.init(); }
#line 26231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 2990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 26237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 2991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 26243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 2995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_SUID; }
#line 26249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 2996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 26255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3001 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 26264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3005 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 26278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 26286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar))))
              MYSQL_YYABORT;
          }
#line 26304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3071 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 26349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spvar)->mode= (yyvsp[-1].spvar_mode);
            if (unlikely(Lex->sp_param_fill_definition((yyvsp[-2].spvar))))
              MYSQL_YYABORT;
          }
#line 26359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3101 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3107 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-8].spvar)->mode= (yyvsp[-7].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-8].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spvar)->mode= (yyvsp[-3].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-4].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 26399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spvar)->mode= (yyvsp[-2].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyvsp[-3].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 26409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 26415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 26421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 26427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 26433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 26439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 26447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 26455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3154 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 26463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 26471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 26480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3183 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 26500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 26509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 26517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 26523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 26532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 26540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 26546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3227 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 26554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 26560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 26568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 26574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3247 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 26604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!((yyval.spvar_definition)= new (thd->mem_root) Spvar_definition())))
              MYSQL_YYABORT;
            Lex->init_last_field((yyval.spvar_definition), &(yyvsp[0].ident_sys), thd->variables.collation_database);
          }
#line 26617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3284 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar_definition_list)= new (thd->mem_root) Row_definition_list())) ||
                unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 26627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3290 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint unused;
            if (unlikely((yyvsp[-2].spvar_definition_list)->find_row_field_by_name(&(yyvsp[0].spvar_definition)->field_name, &unused)))
              my_yyabort_error((ER_DUP_FIELDNAME, MYF(0), (yyvsp[0].spvar_definition)->field_name.str));
            (yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list);
            if (unlikely((yyval.spvar_definition_list)->push_back((yyvsp[0].spvar_definition), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 26640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 26646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 26654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3315 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-2].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-2].num));
          }
#line 26666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3325 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 26676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 26686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 26696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 26707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-1].ident_sys), spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 26721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 26729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 26743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 26752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 3391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 26763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 26774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3416 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
          }
#line 26783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 26795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 26801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 3432 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 26807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 3433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 26813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 26819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 3440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 26825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 3442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 26831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 3447 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 26847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 3462 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 3474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 3493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 3494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 26892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 3499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 26900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 3503 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 26910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 3509 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3527 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 26950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3537 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 26959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3542 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 26968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 26977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_condition_value *cond;

            /* SIGNAL foo cannot be used outside of stored programs */
            if (unlikely(lex->spcont == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            cond= lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely(cond == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            if (unlikely(!cond->has_sql_state()))
              my_yyabort_error((ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0)));
            (yyval.spcondvalue)= cond;
          }
#line 26996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3578 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 27022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3593 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 27034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 27048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3618 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3620 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 27076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 27088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3646 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 27094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3648 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 27100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 3650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 27106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 27112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 27118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 3656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 27124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 27130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 3660 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 27136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 3662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 27142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 3664 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 27148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 3666 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 27154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 3671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 27163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 3679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 27179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 3694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 27185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 3696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 27191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 3701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 27201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 3707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 27211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 3716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 3723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 27232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 3732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 27242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 3740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 27251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 3745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 27261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 3754 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 27267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 3756 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 27273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 3758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 27279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 3767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 3772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 27296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 3779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 27306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 3788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 27316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 3796 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 27322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 3798 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 27328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 3800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 27334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 3802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 27340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 3804 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 27346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 3806 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 27352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 3808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 27358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 3810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 27364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 3812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 27370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 3814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 27376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 3816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 27382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 3818 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 27388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 3820 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 27394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 3826 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 27403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 3834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 27419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 3846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 27435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 3860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 27441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 3861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 27447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 3862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 27453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 3871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 3887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 27465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 3899 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 27475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 3905 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 27481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 3911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // Direct procedure call (without the CALL keyword)
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 3918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 3926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 27512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 3934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            /* "USE db" doesn't work in a procedure */
            if (unlikely(lex->sql_command == SQLCOM_CHANGE_DB))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "USE"));
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new (thd->mem_root)
                sp_instr_stmt(sp->instructions(), lex->spcont, lex);
              if (unlikely(i == NULL))
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_start() - sp->m_tmp_query;;
              if (unlikely(!(i->m_query.str= strmake_root(thd->mem_root,
                                                          sp->m_tmp_query,
                                                          i->m_query.length))) ||
                  unlikely(sp->add_instr(i)))
                MYSQL_YYABORT;
            }
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 3985 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 27564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 3987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, lex->spcont,
                                                          (yyvsp[0].item), lex)) ||
                unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 3996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 27589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4006 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 27595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4006 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 27601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4011 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 27619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4036 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 27648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 27657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].item))) ||
                unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4078 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4086 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex)= thd->lex;
          }
#line 27712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 27723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 27732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4107 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
          }
#line 27754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 4136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 27777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 4142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 27786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 4149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 27792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 4150 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 27798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 4155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 27807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 4163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 4168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 4173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 27834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 4180 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 27840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 4185 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 27859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (unlikely(!spc || !(spv = spc->find_variable(&(yyvsp[0].ident_sys), false))))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 27877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4217 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (unlikely(!spc || !(spv = spc->find_variable(&(yyvsp[0].ident_sys), false))))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 27895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 27901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
            if (unlikely(i == NULL) ||
                unlikely(sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0))) ||
                unlikely(sp->add_cont_backpatch(i)) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(sp->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 27921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, ctx);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(thd, i, ctx->push_label(thd, &empty_clex_str, 0));
          }
#line 27937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 27947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 4278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 28001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 4331 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 28019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 4347 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); /* For expr $2 */ }
#line 28025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 4349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_expr((yyvsp[0].item))))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 4356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 4358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 4373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 28056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 4377 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), true)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 4389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 28080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 4397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd); /* For expr $3 */
          }
#line 28088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 4401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->case_stmt_action_when((yyvsp[0].item), false)))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 4411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 28110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 4419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 4433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 28131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 4434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 28137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 4439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 28147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 4449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 4457 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 4463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 28174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 4467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 4475 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 4489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 4498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 28214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 4503 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 28224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 4509 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 4516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 28243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 4524 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 28249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 4528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 28257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 4532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 28266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 4538 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 28276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 4549 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 28285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 4554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 28295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 4562 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 4563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[0].num); }
#line 28307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 4567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 4568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 28319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 4573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 28328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 4580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 28337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 4588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 4589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 28349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 4594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 28358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 4603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 28366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 4607 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 28377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 4614 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 28387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 4623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 28402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 4637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sp_while_loop_expression(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 28414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 4645 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 28423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 4653 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->reset_lex(thd); }
#line 28429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 4655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i= new (thd->mem_root)
              sp_instr_jump_if_not(ip, lex->spcont, (yyvsp[-2].item), lab->ip, lex);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
            if (unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
#line 28448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 4673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 28457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 4681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 28466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 4686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 4688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 28482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 4694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 4696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 28497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 4701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 28508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 4710 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 28517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 4715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-7].for_loop))))
              MYSQL_YYABORT;
          }
#line 28526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 4720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 28535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 4725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 4730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 28550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 4735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 4739 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd);
          }
#line 28568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 4745 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 4749 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 28587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 4756 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 28598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 4765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-5].for_loop))))
              MYSQL_YYABORT;
          }
#line 28610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 4773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 28619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 4778 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 28627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 4785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 28633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 4787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 28639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 4792 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 28645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 4794 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 28651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 4796 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 28657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 4830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 4832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 28672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 4842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 28680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 4848 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 28688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 4871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 4965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 28703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 4973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 28712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 4981 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 28721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 4989 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 28735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 5002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 28749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 5015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 28758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 5020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 28767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 5025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 28776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5033 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 28785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 5041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 28794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 5049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 28803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 5057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 28812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 5065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 28821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 5073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 28830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 5081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 28841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 5091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 28852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5101 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 28864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 28873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 28884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 28890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 5133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 28899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 5145 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 28905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 5146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 5147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 28923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 28935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5159 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->select_lex.add_table_to_list(thd,
                                        (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 28956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 28962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 28968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5184 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Select->set_braces(0);
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 28983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 5191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 28991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 5196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 28997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 5196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 5198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->set_braces(1);}
#line 29009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 5198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 5203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 29029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 5239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 5245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 29050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 5260 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 29066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 5275 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            DBUG_ASSERT(Lex->part_info->table);
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 29083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 5287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 5292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 29095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 5298 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 29106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 5305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 29112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 5306 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 5308 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 29124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 5310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 29130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 5312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 29138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 5316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 29147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 5321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 29153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 5323 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 29162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 5331 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 5333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 29174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 5338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 29180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 5340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 29198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 5356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 5357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 5361 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 5362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 5367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 29237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 5381 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 29247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 5391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-3].simple_string) + 1, (yyvsp[-2].item), (yyvsp[-1].simple_string), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 29259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 5402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-3].simple_string) + 1, (yyvsp[-2].item), (yyvsp[-1].simple_string), TRUE)))
              MYSQL_YYABORT;
          }
#line 29268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 5410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 5412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 29288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 5424 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 5426 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 29300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 5427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 5430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 29316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 5435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 5439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 5440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 5445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 29349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 5459 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 29362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 5470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 5472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 29381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 5484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 29395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 5494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 29418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 5515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 5516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 5521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 29450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 5540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 5545 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 29468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 5556 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 29488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 5572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 29505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 5584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 5586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 29528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 5598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 5600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 29543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 5605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 29552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 5610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 29573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 5630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 29595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 5647 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 5652 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 29632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 5679 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 29645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 5690 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 5691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 5696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 29671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 5705 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 5707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 29702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 5730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 5731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 5736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 29729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 5747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 29747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 5765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 29765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 5779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 29792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 5804 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 5805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 5810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 29841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 5842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 5847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 29857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 5855 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 5856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 5860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 5861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 5866 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 29887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 5868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 29897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 5874 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 29907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 5880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 29913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 5882 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 29919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 5884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 29925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 5886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 29931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 5888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 29937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 5890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 29943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 5894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 29949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 5896 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           partition_info *part_info= Lex->part_info;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].ulong_num))))
             MYSQL_YYABORT;
         }
#line 29959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 5902 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 29974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 5917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           (yyval.ulong_num)= thd->query_start();
         }
#line 29982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 5921 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           /* only allowed from mysql_unpack_partition() */
           if (unlikely(!Lex->part_info->table))
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
             MYSQL_YYABORT;
           }
           (yyval.ulong_num)= (ulong)(yyvsp[0].ulong_num);
         }
#line 29996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 5939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_with_clause((yyvsp[-4].with_clause));
          }
#line 30004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 5945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 30023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 5960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 30031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 5977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
#line 30043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 5987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 5988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 5992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 5993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 5997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 5998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6008 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 30099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 30107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 30115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 30123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6030 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 30131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6034 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 30139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 30158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 30167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 30176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 30185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6087 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 30194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 30203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6097 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 30212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 30231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 30241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 30260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 30269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6143 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 30288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6158 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 30298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 30320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 30329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6187 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 30338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 6192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 30347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 30356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6202 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 30365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 30374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
#line 30382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list.first;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 30408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 30417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 30426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 6250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 30435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 6255 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 30441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 6257 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 30447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 6259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 30453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6261 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 30463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 6267 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 30472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6272 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 30481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 6286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6295 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 30517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 30527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 30536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_TEMPORARY, MYF(0));
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 30556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 6340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 30565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 6348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 30581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6363 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 30592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 30604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 6383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 6384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 6385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 6386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 6387 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 6388 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 6389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 30646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 6393 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 6394 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 6395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 6399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 6408 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 30696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 6419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 6427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 30708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 6429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[-1].create_field); }
#line 30714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 6434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 6439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 6441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 6446 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 6448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 6453 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 6455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 6460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 6464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 6469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 6472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 6477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 30810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 6479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 30824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 6489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Key *key= (new (thd->mem_root)
                       Foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                   &lex->last_key->columns,
                                   &(yyvsp[0].table)->db,
                                   &(yyvsp[0].table)->table,
                                   &lex->ref_list,
                                   lex->fk_delete_opt,
                                   lex->fk_update_opt,
                                   lex->fk_match_option,
                                    (yyvsp[-6].object_ddl_options)));
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            /*
              handle_if_exists_options() expectes the two keys in this order:
              the Foreign_key, followed by its auto-generated Key.
            */
            lex->alter_info.key_list.push_back(key, thd->mem_root);
            lex->alter_info.key_list.push_back(Lex->last_key, thd->mem_root);
            lex->option_list= NULL;

            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_ADD_FOREIGN_KEY;
          }
#line 30854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 6518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 30862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 6526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_system_time((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 30871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 6533 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 30877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 6534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 30883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 6539 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 30894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 6548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 6549 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 6553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 30912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 6554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 30918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 6558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 30924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 6563 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
          }
#line 30943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 6578 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 30965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 6598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->set_attributes((yyvsp[0].Lex_field_type), Lex->charset); }
#line 30971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 6601 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_longlong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
          }
#line 30981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 6610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 6611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 6615 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 6620 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 6621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 6625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 6630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 31023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 6635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 31032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 6641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 31041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 6646 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 31050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 6653 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 6654 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 6659 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 31070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 6663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 31078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 6667 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 31086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 6671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 31094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 6677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 6678 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 6682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 6688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 6694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 31132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 6699 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 31138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 6701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 31146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 6708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
          }
#line 31159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 6717 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
          }
#line 31170 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 6727 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 31180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 6734 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 31191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 6744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 31203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 6758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 31212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 6783 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string)); }
#line 31218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 6784 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 31224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 6786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 31244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 6802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 31252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 6806 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 31260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 6810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_tiny, "1");
          }
#line 31268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 6814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 6816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 31285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 6823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 6825 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 31297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 6838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 31305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 6842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 6847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 31323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 6852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 6856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 6860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 6865 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 6870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 31366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 6879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 6883 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 6888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 6893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 6897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
          }
#line 31408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 6901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 31417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 6906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 6911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[0].Lex_length_and_dec));
          }
#line 31435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 6920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 31457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 6937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(thd->type_handler_for_date()); }
#line 31463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 6939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 31474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 6946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->variables.sql_mode & MODE_MAXDB)
              (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                     static_cast<const Type_handler*>(&type_handler_datetime2) :
                     static_cast<const Type_handler*>(&type_handler_datetime),
                     (yyvsp[0].const_simple_string));
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                Unless --explicit-defaults-for-timestamp is given.
              */
              if (!opt_explicit_defaults_for_timestamp)
                Lex->last_field->flags|= NOT_NULL_FLAG;
              (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                     static_cast<const Type_handler*>(&type_handler_timestamp2):
                     static_cast<const Type_handler*>(&type_handler_timestamp),
                     (yyvsp[0].const_simple_string));
            }
          }
#line 31499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 6967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_datetime2) :
                   static_cast<const Type_handler*>(&type_handler_datetime),
                   (yyvsp[0].const_simple_string));
          }
#line 31510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 6978 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 31519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 6983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 31528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 6988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 6993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->last_field->geom_type= (yyvsp[-2].geom_type);
            (yyval.Lex_field_type).set(&type_handler_geometry, (yyvsp[-1].Lex_length_and_dec));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 31552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7004 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 31561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7009 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7014 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 31579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 31591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 31597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 31609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 31615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 31621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7033 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 31630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 31636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 31642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRY; }
#line 31648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7048 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_GEOMETRYCOLLECTION; }
#line 31654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7049 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POINT; }
#line 31660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOINT; }
#line 31666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_LINESTRING; }
#line 31672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTILINESTRING; }
#line 31678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_POLYGON; }
#line 31684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7054 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.geom_type)= Field::GEOM_MULTIPOLYGON; }
#line 31690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7058 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7068 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7072 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 7075 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 7076 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 7080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_long; }
#line 31756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 7081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_tiny; }
#line 31762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 7082 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_short; }
#line 31768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 7083 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_int24; }
#line 31774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7084 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_longlong; }
#line 31780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7089 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 31790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 31796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 31802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 31808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 31816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 31822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 31828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 7111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 31834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 31840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG;}
#line 31858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 7122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 31864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 7123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 31870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 7124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 31876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 31882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 7129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 31888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 7130 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 31894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 31900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 31906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 31912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 7138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) "1"; }
#line 31918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 7139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 31924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 7160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set("4000", "4000"); }
#line 31930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 7161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 31936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 7164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set("2000", "2000"); }
#line 31942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 7165 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 31948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 31954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 31960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7174 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 7179 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 31972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 7180 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 31978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 7182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 31989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 31995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7190 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 32016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 7206 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 32022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 7207 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 32028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 7211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 7212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 7217 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 7225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7233 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 32068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 7242 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 32076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7246 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 7257 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 7266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 7275 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 32122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 7281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 32132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 7287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 32141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 7295 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 32151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 7301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 32161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 7311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type);

          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyvsp[-1].Lex_field_type), Lex->charset);
        }
#line 32176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 7325 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.Lex_field_type)= (yyvsp[-1].Lex_field_type);
          if ((yyvsp[0].charset))
          {
            if (unlikely(!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
          Lex->last_field->set_attributes((yyvsp[-1].Lex_field_type), Lex->charset);
        }
#line 32190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 7337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 7338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 7347 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 32217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 7351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 32223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 7352 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 7356 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 32235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 32241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 7362 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 32252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 7368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 32258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 7372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 32264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 7373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 7378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 32279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 7385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 7386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 32291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 7390 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 32297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 7391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 32303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 7395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 7400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 32321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 32327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 7403 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 32336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 32342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 7411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 7415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 32354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 7416 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 32360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 7417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 32366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 7418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 32372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 7422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 32378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 7423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 32384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 7428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 32396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 7436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 7440 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 7441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 32414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 7445 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 32420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 7448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 7449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 7450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 32438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 7451 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 32444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 7456 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 32453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 7464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 32461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 7470 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 7471 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 32473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 7476 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 32484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 7485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 7486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 7490 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 7491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 32508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 7505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 32516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 7512 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 32522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 7518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 32533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 7525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 32546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 7537 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 32552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 7539 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 32558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 7541 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 32564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 7543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 32570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 7548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 7554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 7560 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 7567 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 7574 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 7582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 7583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 7584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 7585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 7586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 32650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 7590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 32656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 7591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 32662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 7595 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 7596 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 7600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 7605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 7606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 7607 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 7611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::MULTIPLE; }
#line 32704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 7612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 32710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 7616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 32716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 7621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 32729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 7632 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 7633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 32741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 7637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 7638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 32753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 7642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 7643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 32765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 7662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 32771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 7663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 32777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 7667 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 32783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 7668 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 32789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 7669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 32795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 7673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 32801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 7675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 32807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 7680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 32816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 7685 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 32822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 7687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 32834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 7695 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 32846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 7703 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 32856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 7709 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 32866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 7728 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 32877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 7737 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 32883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 7738 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 32889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 7739 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 32895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 7744 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 32903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 7748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 32911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 7755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 32921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 7761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 32934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 7772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 32940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 7773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 32946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 7778 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 32952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 7780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 32958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 7788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR; 
            Lex->select_lex.init_order();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 32976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 7802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->select_lex.db= (Lex->select_lex.table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
          }
#line 32990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 7812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
          }
#line 33004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 7822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 33013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 7827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 33026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 7836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 33038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 7844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->sp_chistics.init();
          }
#line 33050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 7852 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 7859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->sp_chistics.init();
          }
#line 33073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 7867 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 7874 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 33093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 7879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 7886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 33108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 7891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 7893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 33135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 7914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();
          }
#line 33153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 7928 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 33162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 7933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 33171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 7938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 33180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 7943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 33189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 7948 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 33199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 7952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 33205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 7956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-5].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 33214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 7961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
#line 33228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 7971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->create_info.seq_create_info=
                           new (thd->mem_root) sequence_definition())) ||
                unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                            TL_OPTION_SEQUENCE,
                                                            TL_WRITE,
                                                            MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 33243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 7982 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 7991 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 7992 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 7993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 7994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 7998 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 8000 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 33297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 8011 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 8012 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_sys)= Lex_ident_sys(); }
#line 33315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 8023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 8031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 8053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 33349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 8060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 33359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 8067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 8080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 33389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 8091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 8115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 33429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 8122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 8134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->select_lex.db= (yyvsp[-1].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            lex->name= (yyvsp[-1].table)->table;
            lex->alter_info.partition_flags|= ALTER_PARTITION_EXCHANGE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                            TL_OPTION_UPDATING,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 33467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 8157 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 33475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 8164 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 33483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 8173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 33499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 8185 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 33514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 8196 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 33522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 8203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 33535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 8216 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 33543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 8220 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 33551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 8224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 33560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 8231 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 8232 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 8237 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 33582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 8259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 33593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 8266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 8271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 33610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8275 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 8282 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 33629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 8286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint(&(yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 33638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 8292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 33649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 8300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 33660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 8307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 33674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 8317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 33689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 8328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 33703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 8338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 33718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 8349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 33732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 8359 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 33742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 8365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 33752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 8371 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str).str, (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 33761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 8376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str).str, (Virtual_column_info*) 0,
                                             (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 33771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 8382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.db= (yyvsp[0].table)->db;
            if (lex->select_lex.db.str == NULL &&
                unlikely(lex->copy_db_to(&lex->select_lex.db)))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 33789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 8396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 33807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 8410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 33816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 8415 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 33824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 8419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 33833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 8426 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 33842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 8431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
          }
#line 33850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 8435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 33858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 8449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 33867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 8454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 8462 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 33885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 8467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 33894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 8474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 8475 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 8479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 33912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 8480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 33918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 8484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 33924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 8498 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 33930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 8500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 33939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 8507 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 33945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 8508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 33951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 8509 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 33957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 8513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 33963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 8515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 33972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 8520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 33982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 8528 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 8529 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 8530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 8531 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 8536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 34017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 8543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 8545 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 34034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 8551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 8553 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 8560 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 34062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 8570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 8586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 8590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 8597 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 8601 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 8608 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 8612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 8616 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 8622 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 34141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 8624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 8633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 8634 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 34159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 8635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 34165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 8639 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 8641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 34184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 8650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 34192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 8662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 8669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 8673 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 34215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 8674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 34221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 8675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 34227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 8681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 34233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 8687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 8697 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 8707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 34265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 8708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 8712 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 8713 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 8717 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 34289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 8718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 34295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 8719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 34301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 8723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 8724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 34313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 8729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 8739 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 8759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 8761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 34353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 8768 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 8770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 8773 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 8775 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 34382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 8786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 8788 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 34399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 8800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 8802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 34414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 8807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 34423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 8815 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 8822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 34439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 8829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 34450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 8839 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 34461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 8847 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 34471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 8857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 34477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 8862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 8872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 8884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 34511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 8885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 8889 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 8890 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 8894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 34535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 8895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 34541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 8896 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 34547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 8897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 34553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 8898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 34559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 8899 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 34565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 8903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 8904 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 34577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 8909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 34591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 8919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 8929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 34609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 8930 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 8931 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 8936 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 34629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 8940 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 8942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 34643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 8949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 8955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 8969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 34679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 8984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 34687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 8988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 34697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 9007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 34709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 9018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 34721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 9028 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 34727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 9029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 34733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 9034 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
#line 34743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9040 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 9055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 34761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 9066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 34773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 9077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 34781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 9084 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->select_lex.alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        INDEX_HINT_MASK_ALL);
          }
#line 34791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 9093 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 9099 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 34803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 9100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 34809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 9110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->current_select->set_with_clause((yyvsp[-1].with_clause));
          }
#line 34819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 9138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 34827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 9142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 34835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 9146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 34847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 9155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 34855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 9168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 34867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 9176 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 34875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 9189 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select->set_braces(true);
          }
#line 34887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 9197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
          }
#line 34895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 9205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 34903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 9209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 34912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 9214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(true);
          }
#line 34920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 9222 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->current_select->braces);
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 34929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 9226 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 34935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 9232 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 34944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 9239 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 34953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 9249 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 34962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 9256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Parentheses carry no meaning here */
            Lex->current_select->set_braces(false);
          }
#line 34971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 9265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 34979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 9269 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 34987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 9274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 34995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 9278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->set_braces(false);
          }
#line 35003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 9318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 35015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 9326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 35023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 9354 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 35033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 9369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 35043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 9378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_UNDEFINED;
          }
#line 35051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 9382 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 35059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 9386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 35067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 9393 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length, YYCSCL,
                                                MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 35079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 9401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 35087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 9405 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 35095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 9412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 35103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 9416 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 35111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 9423 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 35119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 9427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 35127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 9431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 35135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 9435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 35143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 9448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));

            Lex->safe_to_cache_query=0;
            Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
#line 35164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 9465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (unlikely(Lex->current_select != &Lex->select_lex))
              my_yyabort_error((ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE"));
            if (unlikely(Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));

            Lex->safe_to_cache_query=1;
            Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
          }
#line 35185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 9486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_WRITE;
            lex->current_select->set_lock_for_tables(TL_WRITE, false);
            lex->safe_to_cache_query=0;
          }
#line 35196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 9493 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->lock_type= TL_READ_WITH_SHARED_LOCKS;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS, false);
            lex->safe_to_cache_query=0;
          }
#line 35208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 9506 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     NULL, NULL, &star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 35223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 9520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 35232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 9525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 35255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 9546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 35263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 9552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_end();
          }
#line 35271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 9558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 35279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 9564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 35287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 9570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 35298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 9579 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 35304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 9580 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 35310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 9581 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 35316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 9582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 35322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 9583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 35328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 9587 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 35334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 9588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 35340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 9589 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 35346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 9593 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 35352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 9594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 35358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 9595 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 35364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 9599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 9600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 9606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 35431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 9657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 9664 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 35489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 9707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 9713 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 9719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 9725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 9731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 9737 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 9743 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 9753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 9759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 9765 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 9771 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 9777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 9787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-4].item), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 9793 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-5].item), (yyvsp[-1].select_lex));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 9802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 9808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 9816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 9822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 35677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 9831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 9837 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 35699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 9845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 9855 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                   Lex->escape_used);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 9862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].item),
                                                             Lex->escape_used);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 35736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 9870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 9876 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 9889 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 9895 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 9901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 9907 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 9913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 9920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 9926 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 9932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 9938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 9945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 9951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 9957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 9963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 9969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 9975 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 9981 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 9987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 9993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 10022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 35946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 10023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 35952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 10024 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 35958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 10025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 35964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 10026 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 35970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 10027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 35976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 10031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 35982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 10032 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 35988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 10037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 35997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 10041 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 36003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 10045 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 36009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 10046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 36015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 10047 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 36021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 10051 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 36027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 10052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 36033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 10053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 36039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 10054 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 36045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 10055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 36051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 10056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 36057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 10060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 36063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 10061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 36069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 10062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 36075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 10067 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 36081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 10069 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 36089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 10073 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 36098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 10081 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 36122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 10103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 36133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 10110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 36142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 10118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 36148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 10119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 36154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 10120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 36160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 10121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 36166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 10126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 36175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 10134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 36181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 10135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 36187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 10136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 36193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 10137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 36199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 10138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 36205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 10139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 36211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 10140 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 36217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 10141 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 36223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 10179 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 36229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 10185 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 10192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 10198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 36259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 10203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 36273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 10213 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 36282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 10218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 36291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 10223 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 36301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 10229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item(thd, (yyvsp[-3].item), Lex->charset))))
              MYSQL_YYABORT;
          }
#line 36310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 10234 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 10240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 36335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 10251 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 10258 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 36355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 10263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 36364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 10268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 36373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 10273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 36382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 10278 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 36391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 10283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 36400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 10288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 36409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 10297 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 10303 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 36424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 10312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 36434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 10318 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 36442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 10322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 10328 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 10334 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 10344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 10353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 10360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_add_time(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 10374 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 10380 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 10386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 36536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 10395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 36549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 10404 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 10410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 10416 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 10422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 10428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 10443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 10454 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 10460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 10466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 10472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 10478 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 10484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 36685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 10492 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 10499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 36704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 10503 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 36713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 10508 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 36725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 10516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 10537 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 10544 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 10550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 10557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 10564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 10570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 10576 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 10582 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 10588 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 10594 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 36838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 10600 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 10606 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 10612 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 10619 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 10625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 10632 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 10638 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 10643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 10648 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 10653 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 36936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 10658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 10676 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 10682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 10688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 36987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 10693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 36998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 10700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 10707 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 10715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 10722 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 10729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 10736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 10743 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 10760 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 10766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 10772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 10778 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 10784 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 37124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 10791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 10797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 10803 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 10812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 10823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 10830 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 10836 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 10842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 10849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 37223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 10857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 10863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 10869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 37252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 10874 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 10880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 37274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 10888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 10894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 10900 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 10906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 10912 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 10920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 10932 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 10939 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[0].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 37369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 10954 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                 Item_func::SP_CONTAINS_FUNC));
          }
#line 37379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 10960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
#line 37390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 10967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
#line 37401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 10974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
#line 37412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 10981 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
#line 37423 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 10988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
#line 37434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 10995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_point(thd, (yyvsp[-3].item), (yyvsp[-1].item)));
          }
#line 37442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 10999 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd,
                         Item_func_spatial_collection(thd, *(yyvsp[-1].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
#line 37453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 11006 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= GEOM_NEW(thd, Item_func_spatial_precise_rel(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                    Item_func::SP_WITHIN_FUNC));
          }
#line 37462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 11023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 37485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 11042 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 37538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 11091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 11099 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 37553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 11101 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 37559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 11105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 11106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 11110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 37577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 11111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 37583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 11115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 37589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 11116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 37595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 11121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 37606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 11128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 37615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 11136 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 37643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 11163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 11169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 11175 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 11181 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 11187 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 11193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 11202 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 11208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 37722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 11210 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 37728 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 11212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 11218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 11229 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 11235 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 11241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 11247 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 11253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 11259 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 11265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 11271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 11277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 11283 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 37844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 11287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 37866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 11308 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 37878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 11317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 37897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 11337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 37905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 11344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 11351 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 11358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 11365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 11372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 11379 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 11386 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 11393 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 11400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 11407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 11418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 11425 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 11436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 11448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 38062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 11466 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 38068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 11468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 38076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 11472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 11489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 11495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 11504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 38123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 11513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 38133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 11522 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 38142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 11527 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 11534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 38164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 11544 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 38176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 11552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 38185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 11557 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 38194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 11564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 11565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 11570 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 38216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 11575 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 38222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 11585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 38231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 11590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 38240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 11597 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 11598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 11602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 38258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 11607 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 38266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 11614 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 38277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 11621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 38288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 11628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 38299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 11640 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 11649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 38321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 11657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 38327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 11659 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 38333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 11661 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 38339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 11663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 38345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 11665 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 38351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 11667 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 38357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 11669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 38363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 11671 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 38372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 11675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 38378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 11676 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 38384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 11680 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 38390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 11681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 38396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 11682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_longlong); }
#line 38402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 11683 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 38408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 11684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 38414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 11685 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 38420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 11686 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 38426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 11687 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 38432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 11691 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 38438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 11692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 38444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 11693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 38450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 11697 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 38456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 11698 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 38462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 11703 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 11710 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 11717 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 38488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 11718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 38494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 11723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 11730 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 11738 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 11747 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 11758 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 38548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 11767 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 38561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 11776 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 11787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 38577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 11789 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 11800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 38596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 11811 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 38602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 11812 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 38608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 11818 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 38614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 11820 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
#line 38622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 11838 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));

            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 38633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 11846 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 38645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 11854 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 38656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 11862 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
          }
#line 38664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 11866 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 38674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 11872 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 38684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 11881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 38696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 11889 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 38708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 11897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 38716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 11901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 38726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 11907 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 38737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 11917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 38749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 11925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 38762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 11934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
          }
#line 38770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 11938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 38781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 11945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 38793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 11956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 11957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 11958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 11962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 38817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 11963 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 11971 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 38829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 11977 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 38837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 11996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Select);
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
#line 38847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 12002 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                         Select->get_table_join_options(),
                                                         YYPS->m_lock_type,
                                                         YYPS->m_mdl_type,
                                                         Select->
                                                         pop_index_hints(),
                                                         (yyvsp[-3].string_list)))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 38865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 12037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
                !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[-3].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              lex->check_automatic_up(UNSPECIFIED_TYPE);
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new (thd->mem_root) Table_ident(unit);
              if (unlikely(ti == NULL))
                MYSQL_YYABORT;
              if (unlikely(!((yyval.table_list)= sel->add_table_to_list(thd,
                                                        ti, (yyvsp[0].lex_str_ptr), 0,
                                                        TL_READ,
                                                        MDL_SHARED_READ))))
                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (unlikely((yyvsp[0].lex_str_ptr) != NULL))
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              thd->parse_error();
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[-3].table_list);
            }
            /*
              Fields in derived table can be used in upper select in
              case of merge. We do not add HAVING fields because we do
              not merge such derived. We do not add union because
              also do not merge them
            */
            if ((yyval.table_list) && (yyval.table_list)->derived &&
                !(yyval.table_list)->derived->first_select()->next_select())
              (yyval.table_list)->select_lex->add_where_field((yyval.table_list)->derived->first_select());
            if ((yyvsp[-1].num))
            {
              MYSQL_YYABORT_UNLESS(!(yyvsp[-3].table_list));
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
            }
          }
#line 38934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 12105 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= (yyvsp[-7].select_lex);
            SELECT_LEX_UNIT *unit= (yyvsp[-4].select_lex)->master_unit();
            Table_ident *ti= new (thd->mem_root) Table_ident(unit);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            (yyvsp[-4].select_lex)->set_with_clause((yyvsp[-5].with_clause));
            lex->current_select= sel;
            if (unlikely(!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                                      ti, (yyvsp[0].lex_str_ptr), 0,
                                                      TL_READ,
                                                      MDL_SHARED_READ))))
              MYSQL_YYABORT;
            sel->add_joined_table((yyval.table_list));
            if ((yyvsp[-1].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 38957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 12147 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 38981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 12169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 38987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 12170 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 38993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 12171 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->pop_context(); }
#line 38999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 12182 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_braces(0);
          }
#line 39007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 12189 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 39019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 12197 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 39027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 12205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            /* for normal joins, $2 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (unlikely(!((yyval.table_list)= (yyvsp[-1].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list)))
              MYSQL_YYABORT;
            if (unlikely(!(yyvsp[0].table_list) && (yyval.table_list)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 12221 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 12222 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 39057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 12231 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].num))
              Select->set_braces(1);
            (yyval.table_list)= NULL;
          }
#line 39067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 12240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->tvc_start();
          }
#line 39075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 12244 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->tvc_finalize_derived())
              MYSQL_YYABORT;
            (yyval.table_list)= NULL;
          }
#line 39085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 12253 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                unlikely(mysql_new_select(lex, 1, NULL)))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
#line 39106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 12270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 39114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 12277 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= Select; }
#line 39120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 12282 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely((yyvsp[0].select_lex)->init_nested_join(lex->thd)))
              MYSQL_YYABORT;
          }
#line 39130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 12290 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            TABLE_LIST *embedding= lex->current_select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
#line 39143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 12301 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 12302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 12307 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 39163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 12310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 39169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 12311 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 39175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 12312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 39181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 12316 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 39187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 12317 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 39193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 12322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 39201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 12327 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 39209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 12340 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 39215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 12344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 39221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 12349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 39227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 12350 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 12355 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 39239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 12357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 39245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 12367 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 39260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 12378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 12391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 12392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 39287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 12393 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 39293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 12394 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 39299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 12395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 39305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 12396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 39311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 12397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 39317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 12398 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 39323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 12399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 39329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 12400 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 39335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 12401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 39341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 12402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 39347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 12406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 39353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 12407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 39359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 12408 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 39365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 12409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 39371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 12410 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 39377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 12411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 39383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 12412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 39389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 12413 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 39395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 12414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 39401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 12418 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 39407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 12419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 39413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 12420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 39419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 12421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 39425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 12431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 39431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 12433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 12446 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 39447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 12448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 39455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 12452 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 39467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 12464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 39475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 12468 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 39487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 12479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
#line 39496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 12484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string_ascii(thd, "", 0) :
                 new (thd->mem_root) Item_string_ascii(thd, "\\", 1));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 12505 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 39518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 12510 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 12517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 12519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 39554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 12536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->linkage == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 39573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 12558 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 12561 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 12571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 39598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 12583 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 39604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 12590 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 12592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 39620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 12599 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 39626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 12604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 39632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 12609 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 12611 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 39653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 12624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 39659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 12625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 39665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 12630 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 39679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 12640 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 39689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 12649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 12656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 12663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 12672 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 39728 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 12674 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 12681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 39750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 12690 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 39756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 12692 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 39762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 12694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 39768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 12696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 39774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 12698 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 39780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 12700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 39786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 12718 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 39796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 12736 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (unlikely(sel->linkage != GLOBAL_OPTIONS_TYPE &&
                         sel->olap != UNSPECIFIED_OLAP_TYPE &&
                         (sel->linkage != UNION_TYPE || sel->braces)))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE &&
                !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been
                created yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (unlikely(!unit->is_unit_op() &&
                          (first_sl->order_list.elements ||
                           first_sl->select_limit) &&
                           unit->add_fake_select_lex(thd)))
                MYSQL_YYABORT;
            }
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
               /*
                 At this point we don't know yet whether this is the last
                 select in union or not, but we move ORDER BY to
                 fake_select_lex anyway. If there would be one more select
                 in union mysql_new_select will correctly throw error.
               */
               DBUG_ASSERT(sel->master_unit()->fake_select_lex);
               lex->current_select= sel->master_unit()->fake_select_lex;
             }
          }
#line 39843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 12779 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {

          }
#line 39851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 12786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 39860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 12791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 12798 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 39875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 12799 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 39881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 12800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 39887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 12804 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 12805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 12810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (sel->master_unit()->is_unit_op() && !sel->braces)
            {
              /* Move LIMIT that belongs to UNION to fake_select_lex */
              Lex->current_select= sel->master_unit()->fake_select_lex;
              DBUG_ASSERT(Select);
            }
          }
#line 39913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 12823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            if (!sel->select_limit->basic_const_item() ||
                sel->select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 12831 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 12835 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 12842 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 39951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 12849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 39962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 12856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 39973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 12866 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 39982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 12871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 39991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 12876 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 39999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 12880 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 12886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 12892 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 12901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 40038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 12908 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 40047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 12913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 40058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 12919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 12920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 40070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 12929 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 12930 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 12933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 12934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 12935 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 12936 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 12937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 12938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 12942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 12943 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 12944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 12945 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 12946 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 40148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 12950 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 12951 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 12952 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 12953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 12957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 12958 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 12959 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 12960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 12961 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 12965 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 12966 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 12967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 40220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 12968 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 40226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 12969 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 40232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 12974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 40238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 12983 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 40244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 12984 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 40250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 12988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 40256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 12989 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 40262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 12990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 40268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 12995 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            DBUG_ASSERT(&lex->select_lex == lex->current_select);

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           NULL, NULL, &(yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so set expr_allows_subselect as false to disallow any subqueries
              further. Reset expr_allows_subselect back to true once the
              parameters are reduced.
            */
            Lex->expr_allows_subselect= false;
          }
#line 40298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 13021 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->expr_allows_subselect= true;
          }
#line 40307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 13028 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 13029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 13039 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 40330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 13048 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 40342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 13056 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 13061 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 13065 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 40375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 13085 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 40383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 13089 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 40392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 13094 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 40401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 13106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 40416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 13117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 40422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 13120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 40441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 13135 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 40449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 13146 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
#line 40459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 13152 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
          }
#line 40467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 13163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 40478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 13170 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 13172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
          }
#line 40505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 13189 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 40515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 13195 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE"));
            lex->spname= (yyvsp[0].spname);
          }
#line 40527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 13203 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE_BODY, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE BODY"));
            lex->spname= (yyvsp[0].spname);
          }
#line 40539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 13211 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_name *spname;
            if (unlikely((yyvsp[-2].ident_sys).str && check_db_name((LEX_STRING*) &(yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-3].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), true);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 40557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 13225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            LEX_CSTRING db= {0, 0};
            sp_name *spname;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "FUNCTION"));
            if (thd->db.str && unlikely(lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            lex->set_command(SQLCOM_DROP_FUNCTION, (yyvsp[-1].object_ddl_options));
            spname= new (thd->mem_root) sp_name(&db, &(yyvsp[0].ident_sys), false);
            if (unlikely(spname == NULL))
              MYSQL_YYABORT;
            lex->spname= spname;
          }
#line 40576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 13240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE"));
            lex->set_command(SQLCOM_DROP_PROCEDURE, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 40588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 13248 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 40596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 13252 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 40604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 13256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 40615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 13263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 13265 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 40630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 13270 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 40640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 13276 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 40649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 13281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 40658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 13286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 40667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 13292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 40679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 13300 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 13310 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 40697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 13321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 40711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 13339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 40725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 13352 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 40734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 13357 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 40743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 13365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 40751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 13369 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 40759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 13375 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 13376 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 40771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 13384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
#line 40782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 13392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 40791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 13397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 13402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
#line 40808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 13409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-1].lock_type), true);
            Lex->current_select= &Lex->select_lex;
          }
#line 40817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 13414 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 13419 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 40836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 13427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 13429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         // QQ: why was +1?
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 40853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 13435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 13439 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 13441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 40875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 13449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 13450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 13455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 40898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 13463 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 13464 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 13465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 13467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 13479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 40934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 13480 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 40940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 13484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 13485 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 13486 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 13501 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 13510 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 13511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 13515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 13516 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 13520 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 13521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 13525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 13526 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 13531 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 41026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 13536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 13546 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 41046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 13551 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 13560 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 13565 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 13571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 13576 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 13584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 41099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 13592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 41111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 13602 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 41117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 13604 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 13610 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_value(thd, Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 13619 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 41143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 13621 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 41151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 13625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 41159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 13634 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 41170 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 13642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *slex= &Lex->select_lex;
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (unlikely(slex->get_table_list()->derived))
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 41193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 13660 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 13670 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))) ||
                unlikely(add_value_to_list(thd, (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 41209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 13684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 41220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 13693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 13694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 13701 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
#line 41247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 13716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 41255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 13720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 41263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 13726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 13728 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
          }
#line 41277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 13735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 41293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 13753 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 13755 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 41309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 13761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 41318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 13766 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 41328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 13772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 41337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 13790 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2343:
#line 13805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 41375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2344:
#line 13822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 13823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 13827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 13828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 13832 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 41405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2349:
#line 13833 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 41411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2350:
#line 13834 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 41417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 13839 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 41432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 13850 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 41444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 13857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 41450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2363:
#line 13881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 41458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 13885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 41466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 13889 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 41474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 13893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 41482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 13897 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 41490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 13901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 41498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 13905 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 41506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 13909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 41514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 13913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 41522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 13920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 41530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 13924 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 41538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 13933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 41551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 13942 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 41559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 13949 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 41570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 13956 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES)))
               MYSQL_YYABORT;
           }
#line 41582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 13964 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TRIGGERS)))
               MYSQL_YYABORT;
           }
#line 41594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 13972 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_EVENTS)))
               MYSQL_YYABORT;
           }
#line 41606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 13980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].lex_str);
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_TABLES)))
               MYSQL_YYABORT;
           }
#line 41618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 13988 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[-1].lex_str);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES)))
              MYSQL_YYABORT;
          }
#line 41630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 13996 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 41641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14003 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 41652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14010 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 41662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 41668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 41674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14020 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 41687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2388:
#line 14029 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 41695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2389:
#line 14033 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 41703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14037 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 41712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14043 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 41721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14048 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 41734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14057 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 41745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14064 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 41754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14069 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 41763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14074 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 41772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 41781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14084 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 41790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14089 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 41796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14091 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 41802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14093 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 41808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14095 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 41819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14102 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 41831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 41837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14112 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 41849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 41860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2409:
#line 14127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 41871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2410:
#line 14134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 41883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2411:
#line 14142 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 41893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2412:
#line 14148 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 41902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14153 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,0)))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 41914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 41926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14169 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (unlikely(!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0)))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 41938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14177 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 41946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2417:
#line 14181 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 1;
          }
#line 41955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2418:
#line 14186 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            lex->verbose= 0;
          }
#line 41966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2419:
#line 14193 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
            Lex->verbose= 0;
          }
#line 41975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2420:
#line 14198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 41986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14205 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 41997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14212 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 42007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14218 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 42017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14224 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 42027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2425:
#line 14230 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 42039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14238 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 42048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14243 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 14250 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 14257 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 14264 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 42092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2431:
#line 14271 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2432:
#line 14276 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14281 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 42119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14286 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 42128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 14291 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 42139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 14298 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 42162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 14320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 42168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2438:
#line 14322 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 42174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2439:
#line 14324 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 42180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 14338 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 42186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 14339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 42192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 14343 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 42198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 14344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 42204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 14353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 42210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2451:
#line 14354 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 42216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2452:
#line 14358 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 42222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 14359 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 42228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 14363 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 42234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 14365 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 42246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 14373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 42257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 14384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 42272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 14395 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 42280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 14399 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 42286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 14401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->select_lex.options|= SELECT_DESCRIBE;
          }
#line 42295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 14422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 42303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 14428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 42309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 14429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 42315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 14430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2472:
#line 14434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2473:
#line 14436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 42341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2474:
#line 14448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 14449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 42353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 14451 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 42365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2477:
#line 14465 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 42376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2478:
#line 14472 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 14477 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 42396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 14487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 14492 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 14494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 42424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 14509 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 42430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2485:
#line 14511 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 42444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 14519 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 14525 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 14530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 42462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 14532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 42468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 14534 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 42474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 14536 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 42480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 14538 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 42486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 14540 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 42498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 14548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 42504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 14550 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 42510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 14552 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 42516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 14554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 42525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 14559 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 42531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 14561 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 42543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 14569 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 42549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 14571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 42555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 14573 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 42561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 14575 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 42579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2505:
#line 14591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2506:
#line 14592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2507:
#line 14596 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 14598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 14608 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 42620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2513:
#line 14623 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 42626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 14624 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 42632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 14628 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 42641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 14633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2519:
#line 14642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 42653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 14644 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 42659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 14646 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 42668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 14651 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 42674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 14655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 42680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 14656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 42686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 14660 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 14662 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 42700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 14669 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 42710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 14675 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 14684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 42724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 14688 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 42735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 14700 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 42747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 14708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-2].num) | (yyvsp[-1].num));
          }
#line 42755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 14714 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 42761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 14715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 42767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 14716 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 42773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 14719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 42779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 14720 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 42785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 14721 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 42791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 14723 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
          }
#line 42800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 14731 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 42808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 14735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 42817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 14743 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 42823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 14750 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[0].ident_sys);
          }
#line 42833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 14761 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
#line 42848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 14772 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 42863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 14783 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 42880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 14796 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 42886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 14800 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 14804 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 42898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 14805 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 42904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 14809 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 42910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 14810 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 42916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 14814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 14816 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 42934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 14823 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 14827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 42946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2559:
#line 14828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 42952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2560:
#line 14829 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 42958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2565:
#line 14844 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 42967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2566:
#line 14849 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 42978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2567:
#line 14856 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 42987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2568:
#line 14861 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 42996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2573:
#line 14879 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 43005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2574:
#line 14884 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 43014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 14891 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 14893 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 43026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2578:
#line 14898 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 43035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2579:
#line 14905 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2580:
#line 14906 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 14910 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2582:
#line 14911 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 14912 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 14917 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 43071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 14919 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 43077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2586:
#line 14923 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 43083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2587:
#line 14925 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2588:
#line 14933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 14934 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2592:
#line 14944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 43117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 14957 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 43126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 14962 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 43135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 14967 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 43144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2596:
#line 14972 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 43153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 14980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 43165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 14987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 43171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 14993 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 15006 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 15015 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 43218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2602:
#line 15031 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 43229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2603:
#line 15038 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 43239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 15044 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 43250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 15053 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 43256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 15055 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 43265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 15062 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 43271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 15063 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 43277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 15064 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 43283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 15066 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 43301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 15080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 15086 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 15092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 15098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 15104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 15110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, NULL, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(),
                                           (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 43371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 15129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 43385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 15139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 43399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 15149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 43409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 15155 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 43420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 15162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 43430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 15172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATE,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 43442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 15180 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_TIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 43454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 15188 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= create_temporal_literal(thd, (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                       YYCSCL,
                                                       MYSQL_TYPE_DATETIME,
                                                       true))))
              MYSQL_YYABORT;
          }
#line 43466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2625:
#line 15199 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= 0; }
#line 43472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2626:
#line 15201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= (yyvsp[0].with_clause);
          }
#line 43480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2627:
#line 15209 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             Lex->derived_tables|= DERIVED_WITH;
             Lex->curr_with_clause= with_clause;
             with_clause->add_to_list(Lex->with_clauses_list_last_next);
          }
#line 43494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 15219 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 43503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 15227 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 43509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 15228 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 43515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 15241 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_str_list)= new List<LEX_CSTRING> (Lex->with_column_list);
            if (unlikely((yyvsp[0].lex_str_list) == NULL))
              MYSQL_YYABORT;
            Lex->with_column_list.empty();
          }
#line 43526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 15248 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            char *spec_start= (yyvsp[-3].simple_string) + 1;
            With_element *elem= new With_element((yyvsp[-8].lex_str_ptr), *(yyvsp[-7].lex_str_list), (yyvsp[-2].select_lex)->master_unit());
	    if (unlikely(elem == NULL) ||
                unlikely(Lex->curr_with_clause->add_with_element(elem)))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].simple_string),
                                        spec_start - query_start))
              MYSQL_YYABORT;
	  }
#line 43544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 15266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 43550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 15268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_list)= NULL; }
#line 43556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 15274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
	  }
#line 43565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 15279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->with_column_list.push_back((LEX_CSTRING*)
                    thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)));
          }
#line 43574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 15288 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 43584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2640:
#line 15302 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 43590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2641:
#line 15303 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 43596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2642:
#line 15308 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 15313 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 15321 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 15326 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 15333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 43638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 15339 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 15344 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 15349 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 15355 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 15360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 15368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 15373 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15383 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15389 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 43736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15398 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 43751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15409 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 43763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15416 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 43769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15421 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15427 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15433 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15458 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 43831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 15474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 43837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 43846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15487 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 43855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15495 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 43864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15503 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 43873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15512 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 15530 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15535 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 43909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15545 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15564 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 43936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15571 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 43942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 15572 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 43948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15577 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 43958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15585 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 43964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 43970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15587 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 43976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);
            (yyval.lex_user)->host= null_clex_str; // User or Role, see get_current_user()
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 43993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15605 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 44027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15635 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->plugin= empty_clex_str;
            (yyval.lex_user)->auth= empty_clex_str;
          }
#line 44039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15647 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 44049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 16266 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 16273 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 16275 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_init();
          }
#line 44074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 16279 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
          }
#line 44086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 16287 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 16292 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 16299 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 16305 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 16312 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            if (unlikely(lex->set_variable(&(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(lex->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
          }
#line 44136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 16320 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            lex->var_list.empty();
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 16332 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 16353 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 16359 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
          }
#line 44180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 16363 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 16368 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 44197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 16378 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 16384 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 16398 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 16402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 16407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_create_assignment_lex(thd, yychar == YYEMPTY);
          }
#line 44240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 16411 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 44249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 16420 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 44257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 16428 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 44263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 16429 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 16430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 16434 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 16435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 44287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 16436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 16437 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 16441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 44305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 16442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 44311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 16443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 16444 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 44323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 16450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 16455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, Lex->option_type, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3228:
#line 16460 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3229:
#line 16469 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 16474 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 16479 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 16484 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 16489 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable((yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 16494 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-5].var_type), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 16499 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-5].var_type), &(yyvsp[-2].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 16504 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
          }
#line 44431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 16518 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 44446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 16529 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 16548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 16566 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3241:
#line 16578 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3242:
#line 16586 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_variable(&(yyvsp[-2].kwd), (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 44528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3243:
#line 16591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            set_var_password *var= (new (thd->mem_root)
                                    set_var_password(lex->definer));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
#line 44544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3248:
#line 16614 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3249:
#line 16633 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3250:
#line 16650 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 44589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3251:
#line 16651 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 44595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3252:
#line 16655 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 44601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3253:
#line 16656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 44607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3254:
#line 16657 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 44613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3255:
#line 16658 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 44619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3256:
#line 16663 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING pw= { STRING_WITH_LEN("password") };

            if (unlikely(spc && spc->find_variable(&pw, false)))
              my_yyabort_error((ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str));
            if (unlikely(!(lex->definer= (LEX_USER*)
                           thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            lex->definer->user= current_user;
            lex->definer->plugin= empty_clex_str;
            lex->definer->auth=   empty_clex_str;
          }
#line 44638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3257:
#line 16677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer= (yyvsp[-1].lex_user); }
#line 44644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3258:
#line 16681 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer->pwhash= (yyvsp[0].lex_string_with_metadata);}
#line 44650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3259:
#line 16682 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata); }
#line 44656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3260:
#line 16684 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer->pwtext= (yyvsp[-1].lex_string_with_metadata);
            Lex->definer->pwhash.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            Lex->definer->pwhash.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 44667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3261:
#line 16693 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 44673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3262:
#line 16694 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 44679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 16696 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 16702 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 16708 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3266:
#line 16719 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 44721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 16727 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3268:
#line 16732 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3269:
#line 16734 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 44743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3270:
#line 16740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 44753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3271:
#line 16748 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3272:
#line 16749 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3275:
#line 16759 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 44785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3276:
#line 16777 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 44791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3277:
#line 16778 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 44797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3278:
#line 16780 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3279:
#line 16784 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 44811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3280:
#line 16785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 44817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3281:
#line 16790 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 44829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3282:
#line 16798 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3283:
#line 16807 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr),
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 44849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3284:
#line 16817 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 44863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3285:
#line 16827 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (unlikely(!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0,
                                                                 0)))
              MYSQL_YYABORT;
          }
#line 44885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3286:
#line 16845 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (unlikely(Lex->uses_stored_routines()))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 44900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3287:
#line 16858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 44906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3288:
#line 16859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].ident_sys); }
#line 44912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3289:
#line 16863 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 44918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3290:
#line 16864 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 44924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3291:
#line 16868 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 44930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3292:
#line 16869 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 44936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3293:
#line 16870 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 44942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3294:
#line 16871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 44948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3295:
#line 16873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 44960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3296:
#line 16881 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3297:
#line 16885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 44972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3298:
#line 16886 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 44978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3299:
#line 16887 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 44984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3300:
#line 16888 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 44990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3301:
#line 16889 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 44996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3302:
#line 16896 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3303:
#line 16901 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
#line 45012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3304:
#line 16907 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 45022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3305:
#line 16913 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                         TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 45032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3306:
#line 16920 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 45042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3307:
#line 16927 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_REVOKE,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 45052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3308:
#line 16933 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 45060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3309:
#line 16937 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3310:
#line 16944 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3311:
#line 16953 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3312:
#line 16955 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3313:
#line 16960 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3314:
#line 16966 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
#line 45109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3315:
#line 16973 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_FUNCTION)))
              MYSQL_YYABORT;
          }
#line 45119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3316:
#line 16980 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PROCEDURE)))
              MYSQL_YYABORT;
          }
#line 45129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3317:
#line 16987 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE)))
              MYSQL_YYABORT;
          }
#line 45139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3318:
#line 16994 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_grant_command(thd, SQLCOM_GRANT,
                                                TYPE_ENUM_PACKAGE_BODY)))
              MYSQL_YYABORT;
          }
#line 45149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3319:
#line 17000 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3320:
#line 17007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3321:
#line 17018 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 45178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3322:
#line 17019 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 45184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3323:
#line 17022 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 45190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3324:
#line 17023 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 45196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3325:
#line 17027 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3326:
#line 17032 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3327:
#line 17040 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->reset_auth();
          }
#line 45225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3328:
#line 17050 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->cset->lengthsp(cs, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->reset_auth();

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 45248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3332:
#line 17077 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3333:
#line 17079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
#line 45263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3338:
#line 17097 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = SELECT_ACL;}
#line 45269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3339:
#line 17098 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3340:
#line 17100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = INSERT_ACL;}
#line 45281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3341:
#line 17101 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3342:
#line 17103 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = UPDATE_ACL; }
#line 45293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3343:
#line 17104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3344:
#line 17106 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->which_columns = REFERENCES_ACL;}
#line 45305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3345:
#line 17107 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3346:
#line 17108 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_ACL;}
#line 45317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3347:
#line 17109 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3348:
#line 17110 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= INDEX_ACL;}
#line 45329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3349:
#line 17111 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_ACL;}
#line 45335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3350:
#line 17112 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_ACL;}
#line 45341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3351:
#line 17113 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DROP_ACL;}
#line 45347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3352:
#line 17114 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= EXECUTE_ACL;}
#line 45353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3353:
#line 17115 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= RELOAD_ACL;}
#line 45359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3354:
#line 17116 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHUTDOWN_ACL;}
#line 45365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3355:
#line 17117 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= PROCESS_ACL;}
#line 45371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3356:
#line 17118 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= FILE_ACL;}
#line 45377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3357:
#line 17119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3358:
#line 17120 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_DB_ACL;}
#line 45389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3359:
#line 17121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SUPER_ACL;}
#line 45395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3360:
#line 17122 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TMP_ACL;}
#line 45401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3361:
#line 17123 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= LOCK_TABLES_ACL; }
#line 45407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3362:
#line 17124 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_SLAVE_ACL; }
#line 45413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3363:
#line 17125 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= REPL_CLIENT_ACL; }
#line 45419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3364:
#line 17126 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_VIEW_ACL; }
#line 45425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3365:
#line 17127 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= SHOW_VIEW_ACL; }
#line 45431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3366:
#line 17128 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_PROC_ACL; }
#line 45437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3367:
#line 17129 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= ALTER_PROC_ACL; }
#line 45443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3368:
#line 17130 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_USER_ACL; }
#line 45449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3369:
#line 17131 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= EVENT_ACL;}
#line 45455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3370:
#line 17132 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= TRIGGER_ACL; }
#line 45461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3371:
#line 17133 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
#line 45467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3372:
#line 17134 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= DELETE_HISTORY_ACL; }
#line 45473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3373:
#line 17138 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3374:
#line 17139 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3377:
#line 17149 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->x509_subject))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->x509_subject=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3378:
#line 17156 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->x509_issuer))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->x509_issuer=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3379:
#line 17163 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->ssl_cipher))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->ssl_cipher=(yyvsp[0].lex_string_with_metadata).str;
          }
#line 45518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3380:
#line 17173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->copy_db_to(&lex->current_select->db)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3381:
#line 17183 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= (yyvsp[-2].ident_sys);
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3382:
#line 17192 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select->db= null_clex_str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (unlikely(lex->columns.elements))
              my_yyabort_error((ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0)));
          }
#line 45558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3383:
#line 17201 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[0].table),NULL,
                                           TL_OPTION_UPDATING)))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 45572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3384:
#line 17214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3385:
#line 17219 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3386:
#line 17227 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3387:
#line 17232 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3388:
#line 17240 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3389:
#line 17245 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3394:
#line 17256 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->pwtext= (yyvsp[0].lex_string_with_metadata);
            if (unlikely(Lex->sql_command == SQLCOM_REVOKE))
              MYSQL_YYABORT;
          }
#line 45637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3395:
#line 17263 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->pwhash= (yyvsp[0].lex_string_with_metadata);
          }
#line 45646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3396:
#line 17268 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin= (yyvsp[0].lex_str);
            (yyvsp[-3].lex_user)->auth= empty_clex_str;
          }
#line 45656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3397:
#line 17274 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin= (yyvsp[-2].lex_str);
            (yyvsp[-5].lex_user)->auth= (yyvsp[0].lex_str);
          }
#line 45666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3398:
#line 17280 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 45672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3399:
#line 17285 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
#line 45681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3403:
#line 17299 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *new_str= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,(yyvsp[0].ident_sys).length,system_charset_info);
            if (unlikely(new_str == NULL))
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.c_ptr(), new_str->c_ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= (new (thd->mem_root)
                                LEX_COLUMN(*new_str,lex->which_columns));
              if (unlikely(col == NULL))
                MYSQL_YYABORT;
              lex->columns.push_back(col, thd->mem_root);
            }
          }
#line 45711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3405:
#line 17329 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 45719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3406:
#line 17333 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 45727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3407:
#line 17337 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 45735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3408:
#line 17341 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 45743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3409:
#line 17348 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 45753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3410:
#line 17354 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 45763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3411:
#line 17360 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 45773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3412:
#line 17366 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 45783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3413:
#line 17372 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.max_statement_time= (yyvsp[0].item_num)->val_real();
            lex->mqh.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 45793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3414:
#line 17380 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3415:
#line 17381 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3416:
#line 17385 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3418:
#line 17391 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3419:
#line 17392 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3420:
#line 17396 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3421:
#line 17397 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3422:
#line 17401 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3423:
#line 17402 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3424:
#line 17406 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3425:
#line 17407 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3426:
#line 17412 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 45869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3427:
#line 17417 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3428:
#line 17422 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            Lex->sphead->set_stmt_end(thd);
            Lex->sphead->restore_thd_mem_root(thd);
          }
#line 45885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3429:
#line 17430 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 45891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3430:
#line 17431 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 45897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3431:
#line 17435 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3432:
#line 17436 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 45909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3433:
#line 17441 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 45915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3434:
#line 17442 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3435:
#line 17443 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3436:
#line 17448 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 45933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3437:
#line 17449 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3438:
#line 17450 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3439:
#line 17455 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3440:
#line 17467 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3441:
#line 17476 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 45981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3442:
#line 17482 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 45991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3443:
#line 17491 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3444:
#line 17500 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 46011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3445:
#line 17513 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= UNION_TYPE; }
#line 46017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3446:
#line 17515 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= INTERSECT_TYPE; }
#line 46023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3447:
#line 17517 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_type)= EXCEPT_TYPE; }
#line 46029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3448:
#line 17521 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3450:
#line 17527 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 46044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3451:
#line 17532 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
#line 46056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3452:
#line 17543 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), TRUE)))
              MYSQL_YYABORT;
          }
#line 46065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3453:
#line 17548 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_context();
          }
#line 46073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3454:
#line 17554 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
#line 46091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3455:
#line 17568 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
#line 46100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3458:
#line 17584 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_select_to_union_list((bool)(yyvsp[0].num), (yyvsp[-1].unit_type), FALSE)))
              MYSQL_YYABORT;
          }
#line 46109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3459:
#line 17591 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3460:
#line 17592 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 46121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3461:
#line 17593 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 46127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3462:
#line 17597 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3463:
#line 17598 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3464:
#line 17603 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->tvc_start();
	  }
#line 46147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3465:
#line 17607 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select;
            if (Lex->tvc_finalize())
              MYSQL_YYABORT;
	  }
#line 46157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3466:
#line 17625 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
#line 46165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3467:
#line 17631 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 46171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3468:
#line 17632 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-2].select_lex); }
#line 46177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3469:
#line 17636 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 46183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3470:
#line 17637 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 46189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3471:
#line 17641 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3472:
#line 17642 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 46201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3473:
#line 17643 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[-1].select_lex); }
#line 46207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3474:
#line 17649 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyvsp[-1].select_lex)->set_with_clause((yyvsp[-2].with_clause));
            (yyval.select_lex)= (yyvsp[-1].select_lex);
          }
#line 46216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3475:
#line 17656 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!lex->expr_allows_subselect ||
                         lex->sql_command == (int)SQLCOM_PURGE))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (unlikely(mysql_new_select(Lex, 1, NULL)))
              MYSQL_YYABORT;
          }
#line 46239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3476:
#line 17677 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->check_automatic_up(UNSPECIFIED_TYPE);
            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->return_after_parsing();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;

            /*
              A subquery (and all the subsequent query blocks in a UNION) can
              add columns to an outer query block. Reserve space for them.
              Aggregate functions in having clause can also add fields to an
              outer select.
            */
            for (SELECT_LEX *temp= child->master_unit()->first_select();
                 temp != NULL; temp= temp->next_select())
            {
              lex->current_select->select_n_where_fields+=
                temp->select_n_where_fields;
              lex->current_select->select_n_having_items+=
                temp->select_n_having_items;
            }
          }
#line 46269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3481:
#line 17715 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 46275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3482:
#line 17717 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 46287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3483:
#line 17724 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 46293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3484:
#line 17725 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 46299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3485:
#line 17726 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 46305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3486:
#line 17727 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 46311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3487:
#line 17729 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
#line 46321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3488:
#line 17735 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_simple_select(&(yyvsp[0].kwd))))
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
#line 46331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3489:
#line 17740 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 46337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3492:
#line 17756 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 46352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3493:
#line 17770 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
            Lex->ssl_cipher= Lex->x509_subject= Lex->x509_issuer= 0;
            bzero(&(Lex->mqh), sizeof(Lex->mqh));
          }
#line 46363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3494:
#line 17785 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 46369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3495:
#line 17786 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 46375 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3496:
#line 17787 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 46381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3497:
#line 17791 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 46387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3498:
#line 17792 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 46393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3499:
#line 17796 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 46399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3500:
#line 17797 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 46405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3501:
#line 17802 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3503:
#line 17808 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 46421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3504:
#line 17814 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 46431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3505:
#line 17822 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 46441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3506:
#line 17828 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t len= YYLIP->get_cpp_ptr() - lex->create_view->select.str;
            void *create_view_select= thd->memdup(lex->create_view->select.str, len);
            lex->create_view->select.length= len;
            lex->create_view->select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(),
                            &lex->create_view->select);
            lex->create_view->check= (yyvsp[0].num);
            lex->parsing_options.allows_variable= TRUE;
            lex->current_select->set_with_clause((yyvsp[-2].with_clause));
          }
#line 46458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3514:
#line 17857 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 46464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3515:
#line 17858 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3516:
#line 17859 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46476 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3517:
#line 17860 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 46482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3518:
#line 17871 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 46488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3519:
#line 17873 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 46494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3520:
#line 17878 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 46504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3521:
#line 17885 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 46513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3522:
#line 17894 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 46522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3523:
#line 17903 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 46530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3524:
#line 17909 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 46538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3525:
#line 17914 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 46546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3526:
#line 17918 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 46570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3527:
#line 17938 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $20 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->check_unresolved_goto()))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(thd);
            sp->restore_thd_mem_root(thd);

            if (unlikely(sp->is_not_allowed_in_function("trigger")))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (unlikely(!lex->select_lex.
                         add_table_to_list(thd, (yyvsp[-9].table), (LEX_CSTRING*) 0,
                                           TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_NO_WRITE)))
              MYSQL_YYABORT;
          }
#line 46600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3528:
#line 17974 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (unlikely(lex->add_create_options_with_check((yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(is_native_function(thd, & (yyvsp[-4].ident_sys))))
              my_yyabort_error((ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].ident_sys).str));
            lex->sql_command= SQLCOM_CREATE_FUNCTION;
            lex->udf.name= (yyvsp[-4].ident_sys);
            lex->udf.returns= (Item_result) (yyvsp[-2].num);
            lex->udf.dl= (yyvsp[0].lex_str).str;
          }
#line 46616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3529:
#line 17990 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 46627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3530:
#line 17997 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->fill_field_definition(thd,
                                                            Lex->last_field)))
              MYSQL_YYABORT;
          }
#line 46637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3531:
#line 18007 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_function)))
              MYSQL_YYABORT;
          }
#line 46648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3532:
#line 18016 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->set_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 46660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3533:
#line 18025 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sphead->m_flags & sp_head::HAS_AGGREGATE_INSTR))
            {
              my_yyabort_error((ER_NOT_AGGREGATE_FUNCTION, MYF(0)));
            }
            Lex->sphead->set_chistics_agg_type(NOT_AGGREGATE);
          }
#line 46674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3534:
#line 18038 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[-1].object_ddl_options), (yyvsp[0].spname),
                                                         &sp_handler_procedure)))
              MYSQL_YYABORT;
          }
#line 46685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3535:
#line 18046 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 46694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3536:
#line 18052 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_procedure(thd)))
              MYSQL_YYABORT;
          }
#line 46703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3537:
#line 18060 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].spname) && !(yyvsp[0].spname)->eq(Lex->sphead)))
              my_yyabort_error((ER_END_IDENTIFIER_DOES_NOT_MATCH, MYF(0),
                                ErrConvDQName((yyvsp[0].spname)).ptr(),
                                ErrConvDQName(Lex->sphead).ptr()));
          }
#line 46714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3538:
#line 18070 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].spname) && !(yyvsp[0].spname)->eq(Lex->sphead)))
              my_yyabort_error((ER_END_IDENTIFIER_DOES_NOT_MATCH, MYF(0),
                                ErrConvDQName((yyvsp[0].spname)).ptr(),
                                ErrConvDQName(Lex->sphead).ptr()));
          }
#line 46725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3539:
#line 18079 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 46731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3540:
#line 18080 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 46737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3543:
#line 18092 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 46745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3544:
#line 18096 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 46753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3545:
#line 18100 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 46761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3546:
#line 18104 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 46769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3547:
#line 18108 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 46777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3548:
#line 18112 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 46786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3549:
#line 18119 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 46792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3550:
#line 18121 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 46809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3551:
#line 18137 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 46820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3552:
#line 18144 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 46831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3553:
#line 18151 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 46842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3554:
#line 18160 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3555:
#line 18161 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3556:
#line 18162 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3557:
#line 18166 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3558:
#line 18167 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 46872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3559:
#line 18168 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 46878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3560:
#line 18172 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3561:
#line 18173 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 46890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3562:
#line 18178 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 46896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3563:
#line 18180 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 46902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3565:
#line 18185 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3566:
#line 18186 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 46914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3567:
#line 18191 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[-2].ident_sys);
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3568:
#line 18198 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3569:
#line 18208 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[0].ident_sys);
          }
#line 46946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3570:
#line 18214 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= null_clex_str;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 46957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3571:
#line 18225 "/home/buildbot/git/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	  YYERROR;
	}
#line 46965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;


#line 46969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
